{
  "name": "tc-aw-framework",
  "description": "",
  "type": [
    "native"
  ],
  "srcDir": "src_native",
  "pathOffset": ".",
  "skipAudit": true,
  "skipTest": true,
  "version": "6.1.3",
  "author": "Siemens Product Lifecycle Management Software Inc.",
  "bootstrap": {
    "config": {
      "paths": {
        "ace-builds": "lib/ace-builds",
        "@diagramming/core": "lib/@diagramming/core/diagramfoundation.core",
        "@diagramming/models": "lib/@diagramming/models/diagramfoundation.models",
        "@diagramming/utils": "lib/@diagramming/utils/diagramfoundation.utils",
        "@diagramming/hostinterface": "lib/@diagramming/hostinterface/diagramfoundation.layouthostinterface",
        "@diagramming/foundation": "lib/@diagramming/foundation/diagramfoundation",
        "@diagramming/astar": "lib/@diagramming/astar/diagramfoundation.astar",
        "@diagramming/balloonlayout": "lib/@diagramming/balloonlayout/diagramfoundation.balloonlayout",
        "@diagramming/branchlayout": "lib/@diagramming/branchlayout/diagramfoundation.branchlayout",
        "@diagramming/columnlayout": "lib/@diagramming/columnlayout/diagramfoundation.columnlayout",
        "@diagramming/dagre": "lib/@diagramming/dagre/diagramfoundation.dagre.core",
        "@diagramming/globallayout": "lib/@diagramming/globallayout/diagramfoundation.globallayout",
        "@diagramming/hierarchicallayout": "lib/@diagramming/hierarchicallayout/diagramfoundation.hierarchicallayout",
        "@diagramming/incrementalupdate": "lib/@diagramming/incrementalupdate/diagramfoundation.incrementalupdate",
        "@diagramming/layoutappinterface": "lib/@diagramming/layoutappinterface/diagramfoundation.layoutappinterface",
        "@diagramming/layoutcore": "lib/@diagramming/layoutcore/diagramfoundation.layoutcore",
        "@diagramming/snakelayout": "lib/@diagramming/snakelayout/diagramfoundation.snakelayout",
        "@diagramming/sortedlayout": "lib/@diagramming/sortedlayout/diagramfoundation.sortedlayout",
        "@diagramming/yfileswrapper": "lib/@diagramming/yfileswrapper/diagramfoundation.yfileswrapper",
        "@diagramming/yfiles": "lib/@diagramming/yfileswrapper/yfiles",
        "ckeditor": "lib/ckeditor/ckeditor",
        "ckeditor4": "lib/ckeditor4/ckeditor",
        "three": "lib/three/three.min",
        "plmvisrl": "lib/plmvisrl/plmvisrl.min",
        "manipulator": "lib/manipulator/manipulator.min",
        "jscom": "lib/jscom/jscom.min",
        "angular-ui-router": "lib/angular-ui-router-0.4.3/angular-ui-router.min",
        "angular": "lib/angular/index",
        "Debug": "lib/debug/debug",
        "hammer": "lib/hammerjs/hammer.min",
        "jquerytouch": "lib/jquery-ui-touch-punch/jquery.ui.touch-punch.min",
        "jquery": "lib/jquery/jquery.min",
        "jqueryui": "lib/jqueryui-1.13.2/jquery-ui.min",
        "app": "js/adapters/angularjs/appWrapper",
        "assert": "js/adapters/angularjs/assert",
        "soa": "js/soa",
        "lodash": "lib/lodash/lodash.min",
        "lzstring": "lib/lz-string/lz-string.min",
        "vs": "lib/monaco-editor/vs",
        "ui.grid": "lib/uigrid/ui-grid.min",
        "noty": "lib/noty/jquery.noty",
        "oclazyload": "lib/oclazyload/ocLazyLoad.min",
        "postal": "lib/postal/postal.min",
        "lib/piwik/analytics": "lib/piwik/analytics",
        "lib/piwik/piwik": "lib/piwik/piwik",
        "highcharts": "lib/highcharts/highcharts",
        "highcharts-3d": "lib/highcharts/highcharts-3d",
        "highcharts-more": "lib/highcharts/highcharts-more",
        "highmaps": "lib/highcharts/highmaps",
        "highstock": "lib/highcharts/highstock",
        "no-data-to-display": "lib/highcharts/modules/no-data-to-display",
        "exporting": "lib/highcharts/modules/exporting",
        "heatmap": "lib/highcharts/modules/heatmap",
        "accessibility": "lib/highcharts/modules/accessibility"
      },
      "shim": {
        "lib/ui.ace-0.2.3/ui-ace": {
          "deps": [
            "angular"
          ]
        },
        "jscom": {
          "deps": [
            "three"
          ]
        },
        "plmvisrl": {
          "deps": [
            "jscom"
          ]
        },
        "manipulator": {
          "deps": [
            "plmvisrl"
          ]
        },
        "angular-ui-router": {
          "deps": [
            "angular"
          ]
        },
        "angular": {
          "deps": [
            "jquery"
          ],
          "exports": "angular"
        },
        "bootstrap": {
          "deps": [
            "jquery"
          ]
        },
        "jquerytouch": {
          "deps": [
            "jqueryui"
          ]
        },
        "app": {
          "deps": [
            "angular-ui-router"
          ]
        },
        "ui.grid": {
          "deps": [
            "angular"
          ]
        },
        "noty": {
          "deps": [
            "jquery"
          ]
        },
        "oclazyload": {
          "deps": [
            "angular"
          ]
        },
        "highcharts": {
          "deps": [
            "jquery"
          ],
          "exports": "Highcharts"
        },
        "no-data-to-display": {
          "deps": [
            "highcharts"
          ]
        },
        "exporting": {
          "deps": [
            "highcharts"
          ]
        },
        "heatmap": {
          "deps": [
            "highcharts"
          ]
        }
      },
      "globalShim": {
        "jscom": {
          "deps": [
            "three"
          ]
        },
        "plmvisrl": {
          "deps": [
            "jscom"
          ]
        },
        "manipulator": {
          "deps": [
            "plmvisrl"
          ]
        }
      },
      "provides": [
        {
          "THREE": "three"
        },
        {
          "window.jQuery": "jquery"
        },
        {
          "jQuery": "jquery"
        },
        {
          "window.monaco": "monaco-editor"
        },
        {
          "monaco": "monaco-editor"
        }
      ],
      "baseUrl": "assets",
      "waitSeconds": 0
    },
    "postInit": [
      "import('js/browserUtils').then(function(browserUtils){var urlAttrs=browserUtils.getWindowLocationAttributes();if(urlAttrs.ah?urlAttrs.ah.trim().toLowerCase()==='true':false){import('app').then(function(app){import('js/hosting/hostSupportService').then(function(hostSupportService){hostSupportService.postInit();});});}});",
      "import('js/layout.service').then(function(layoutService){layoutService.init();});",
      "import('js/eventBus').then(function(eventBus){import('js/browserUtils').then(function(browserUtils){if(browserUtils.isNonEdgeIE){eventBus.subscribe('sessionInfo.updated',function(){import('js/hardReload.service').then(function(hardReloadService){hardReloadService.init();});});}});});",
      "import('js/autoSaveContextPreferenceService').then(function(autoSaveContextPreferenceService){autoSaveContextPreferenceService.init();});",
      "import('js/autoSaveContextService').then(function(autoSaveContextService){autoSaveContextService.initializeAutoSaveContext();});",
      "import( 'js/localeService' ).then( function(localeSvc){ localeSvc.getTextPromise(); } );",
      "import( 'js/dateTimeService' ).then( function(dateTimeSvc){ dateTimeSvc.init();} );",
      "import( 'js/theme.service' ).then( function(themeService){ themeService.init(); } );",
      "import( 'js/aw.narrowMode.service' ).then( function(narrowModeService){ narrowModeService.checkNarrowMode(); } );"
    ],
    "import": [
      "js/typeDisplayName.service",
      "angular-ui-router",
      "angular",
      "js/workspaceInitService",
      "jquery",
      "oclazyload",
      "js/splmStatsJsService",
      "js/splmStatsService"
    ],
    "minOnly": [
      "three",
      "plmvisrl",
      "manipulator",
      "jscom"
    ],
    "initModule": [
      "ui.router",
      "oc.lazyLoad"
    ],
    "postImport": [
      "_.noConflict();",
      "import('js/splmStatsJsService').then(function(splmStatsJsService){splmStatsJsService.install();});",
      "import('js/splmStatsService').then(function( splmStatsService ){ splmStatsService.installAnalyticsConfig();});"
    ]
  },
  "hosting": {
    "postHandshakeModules": [
      {
        "module": "js/adobeHostingService",
        "condition": true
      },
      {
        "module": "js/hosting/hostBaseRefService",
        "condition": true
      },
      {
        "module": "js/hosting/hostBaseSelService",
        "condition": true
      },
      {
        "module": "js/hosting/hostConfigService",
        "condition": true
      },
      {
        "module": "js/hosting/hostObjectRefService",
        "condition": true
      },
      {
        "module": "js/hosting/hostOpenService",
        "condition": true
      },
      {
        "module": "js/hosting/hostQueryService",
        "condition": true
      },
      {
        "module": "js/hosting/hostQueryFactoryService",
        "condition": true
      },
      {
        "module": "js/hosting/hostRouterService",
        "condition": true
      },
      {
        "module": "js/hosting/hostSelectionService",
        "condition": true
      },
      {
        "module": "js/hosting/bootstrap/services/hostObjectRef_2014_02",
        "condition": true
      },
      {
        "module": "js/hosting/bootstrap/services/hostObjectRef_2014_02",
        "condition": true
      },
      {
        "module": "js/hosting/bootstrap/services/hostObjectRef_2014_07",
        "condition": true
      },
      {
        "module": "js/hosting/bootstrap/services/hostObjectRef_2014_10",
        "condition": true
      },
      {
        "module": "js/hosting/inf/services/hostClientInfo_2014_07",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_GET_CLIENT_INFO_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostClientInfo_2019_05",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_GET_CLIENT_INFO_SVC",
            "symbolicVersion": "VERSION_2019_05"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostRefresh_2014_07",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_REFRESH_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_REFRESH_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostSelection_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SELECTION_LISTENER_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_SELECTION_PROVIDER_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostSelection_2014_07",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SELECTION_LISTENER_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_SELECTION_PROVIDER_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostSelection_2014_10",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SELECTION_LISTENER_SVC",
            "symbolicVersion": "VERSION_2014_10"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_SELECTION_PROVIDER_SVC",
            "symbolicVersion": "VERSION_2014_10"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostSelection_2019_05",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SELECTION_LISTENER_SVC",
            "symbolicVersion": "VERSION_2019_05"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_SELECTION_PROVIDER_SVC",
            "symbolicVersion": "VERSION_2019_05"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostSession_2014_07",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SESSION_SVC",
            "symbolicVersion": "VERSION_2014_07"
          },
          {
            "symbolicName": "HS_SESSION_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostTheme_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_GET_AVAILABLE_THEMES_SVC",
            "symbolicVersion": "VERSION_2014_02"
          },
          {
            "symbolicName": "CS_SET_THEME_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/inf/services/hostTheme_2019_05",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_GET_AVAILABLE_THEMES_SVC",
            "symbolicVersion": "VERSION_2019_05"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostAppContext_2017_11",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SET_APP_CONTEXT_SVC",
            "symbolicVersion": "VERSION_2017_11"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostCheckinCheckout_2016_03",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_HOST_CHECKIN_CHECKOUT",
            "symbolicVersion": "VERSION_2016_03"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostComponent_2014_07",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_COMPONENTCONFIG_SERVICE",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostDragAndDrop_2017_05",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_DRAG_AND_DROP_SVC",
            "symbolicVersion": "VERSION_2017_05"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostFeedback_2015_03",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_HOST_FEEDBACK",
            "symbolicVersion": "VERSION_2015_03"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostFileTicket_2014_10",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_GET_FILE_TICKET",
            "symbolicVersion": "VERSION_2014_10"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_GET_TICKET_RESPONSE",
            "symbolicVersion": "VERSION_2014_10"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostFireCommand_2018_07",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "splm.browserinterop.solutions.services.preferences.CommandFired.host",
            "symbolicVersion": "VERSION_2017_05"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostFMSUpload_2015_03",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_FMS_UPLOAD",
            "symbolicVersion": "VERSION_2015_03"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostFileUpload_2022_03",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "CS_FILE_UPLOAD_SVC",
            "symbolicVersion": "VERSION_2022_03"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostObjectInfoComponent_2014_07",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_OBJECTINFO_COMPONENT_INPUT_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpen_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SHOW_SUMMARY",
            "symbolicVersion": "VERSION_2014_02"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_HOST_ADD_COMPONENT",
            "symbolicVersion": "VERSION_2014_02"
          },
          {
            "symbolicName": "HS_HOST_OPEN",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpen_2015_03",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_HOST_OPEN_WITH",
            "symbolicVersion": "VERSION_2015_03"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpen_2015_10",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_HOST_OPEN",
            "symbolicVersion": "VERSION_2015_10"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpenLocation_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_OPEN_LOCATION_SERVICE",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpenPanel_2019_12",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_OPEN_PANEL_SVC",
            "symbolicVersion": "VERSION_2019_12"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpenNewView_2016_04",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_HOST_OPEN_NEW_VIEW_SVC",
            "symbolicVersion": "VERSION_2016_04"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostOpenURL_2014_10",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_HOST_OPEN_URL",
            "symbolicVersion": "VERSION_2014_10"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostPreferences_2017_05",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_GET_PREFERENCES_SVC",
            "symbolicVersion": "VERSION_2017_05"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_GET_PREFERENCES_RESPONSE_SVC",
            "symbolicVersion": "VERSION_2017_05"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostQuery_2015_10",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_INTEROPQUERY_SVC",
            "symbolicVersion": "VERSION_2015_10"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_INTEROPQUERY_SVC",
            "symbolicVersion": "VERSION_2015_10"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostQuery_2019_05",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_INTEROPQUERY_SVC",
            "symbolicVersion": "VERSION_2019_05"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_INTEROPQUERY_SVC",
            "symbolicVersion": "VERSION_2019_05"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostRemoteClipboard_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_REMOTE_CLIPBOARD_SERVICE",
            "symbolicVersion": "VERSION_2014_02"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_REMOTE_CLIPBOARD_SERVICE",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostUserMessaging_2017_11",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_USER_MESSAGING_SVC",
            "symbolicVersion": "VERSION_2017_11"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostUserMessaging_2019_12",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_USER_MESSAGING_SVC",
            "symbolicVersion": "VERSION_2019_12"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostSearch_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_INITIATE_SEARCH",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostUserMessaging_2017_11",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_USER_MESSAGING_SVC",
            "symbolicVersion": "VERSION_2017_11"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostUserMessaging_2019_12",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_USER_MESSAGING_SVC",
            "symbolicVersion": "VERSION_2019_12"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostWorkflowComponent_2015_03",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_WORKFLOW_COMPONENT_INPUT_SVC",
            "symbolicVersion": "VERSION_2015_03"
          }
        ]
      },
      {
        "module": "js/hosting/sol/services/hostDiscussionComponent_2015_10",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_DISCUSSION_COMPONENT_INPUT_SVC",
            "symbolicVersion": "VERSION_2015_10"
          }
        ]
      }
    ],
    "initialModules": [
      {
        "module": "js/hosting/bootstrap/services/hostCore_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "HS_CS_STARTUP_NOTIFICATION_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_HOST_CONFIGURATION_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/bootstrap/services/hostCore_2014_07",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_CLIENT_STATUS_SVC",
            "symbolicVersion": "VERSION_2014_07"
          },
          {
            "symbolicName": "HS_HOST_CONFIGURATION_SVC",
            "symbolicVersion": "VERSION_2014_07"
          }
        ]
      },
      {
        "module": "js/hosting/bootstrap/services/hostLogging_2014_02",
        "condition": true,
        "proxies": [
          {
            "symbolicName": "HS_LOGGER_FORWARD_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      },
      {
        "module": "js/hosting/bootstrap/services/hostSoa_2014_02",
        "condition": true,
        "services": [
          {
            "symbolicName": "CS_SOA_JSON_REQUEST_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ],
        "proxies": [
          {
            "symbolicName": "HS_HOST_SESSION_INFO_SVC",
            "symbolicVersion": "VERSION_2014_02"
          }
        ]
      }
    ],
    "hostedComponents": {
      "com.siemens.splm.clientfx.tcui.xrt.published.ObjectInfo": {
        "componentLocation": "hostedObjectInfoLocation"
      },
      "com.siemens.splm.clientfx.tcui.xrt.published.Discussion": {
        "componentLocation": "hostedDiscussionLocation"
      },
      "mockComponentCommand_ShowObject": {
        "commandId": "Awp0ShowObject"
      },
      "mockComponentCommand_Awp0ShowCreateObject": {
        "commandId": "Awp0ShowCreateObject"
      },
      "mockComponentLocation_ShowHome": {
        "componentLocation": "showHome"
      },
      "mockComponentLocation_Search": {
        "componentLocation": "teamcenter.search.search"
      },
      "mockComponentLocation_ShowObject": {
        "componentLocation": "com.siemens.splm.clientfx.tcui.xrt.showObject"
      },
      "mockComponentLocation": {
        "componentLocation": "mockComponentLocation"
      },
      "mockPresenterLocation": {
        "componentLocation": "com.siemens.splm.clientfx.ui.components.ComponentsPresenter"
      }
    },
    "queries": {
      "com.siemens.splm.client.hosted.IsQueryHandlerAvailable": {
        "module": "js/hosting/hostQueryService",
        "service": "hostQueryService",
        "constructor": "createIsQuerySupportedQueryHandler"
      },
      "mockCommandQueryId": {
        "commandId": "mockQueryCommandId"
      },
      "mockHandlerQueryId": {
        "module": "mockHandlerModule",
        "service": "mockHandlerProviderService",
        "constructor": "mockHandlerCtorMethod"
      }
    }
  },
  "commandsViewModel": {
    "commands": {
      "DigitalAssetsPanel": {
        "iconId": "cmdShowDigitalAssets",
        "isGroup": false,
        "title": "{{i18n.digitalAssetsPanelTitle}}",
        "description": "{{i18n.DigitalAssetsPanelDesc}}"
      },
      "ImagePanel": {
        "iconId": "cmdShowDigitalAssets",
        "isGroup": false,
        "title": "{{i18n.imagePanelTitle}}",
        "description": "{{i18n.ImagePanelDesc}}"
      },
      "cmdReplaceDigitalAsset": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.cmdReplaceDigitalAsset}}",
        "description": "{{i18n.cmdReplaceDigitalAssetDesc}}"
      },
      "cmdDeleteDigitalAsset": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.cmdDeleteDigitalAsset}}",
        "description": "{{i18n.cmdDeleteDigitalAssetDesc}}"
      },
      "showObjectCell1": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.showObjectCell}}",
        "description": "{{i18n.showObjectCellDesc}}"
      },
      "showObjectCell2": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.showObjectCell}}",
        "description": "{{i18n.showObjectCellDesc}}"
      },
      "openInIllustrator": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.openInIllustratorTitle}}",
        "description": "{{i18n.openInIllustratorDesc}}"
      },
      "Awp0AddToFavorites": {
        "iconId": "cmdEmptyStar",
        "isGroup": false,
        "title": "{{i18n.addToFavoritesCommandTitle}}",
        "description": "{{i18n.Awp0AddToFavoritesDesc}}"
      },
      "Awp0RemoveFromFavorites": {
        "iconId": "cmdFilledStar",
        "isGroup": false,
        "title": "{{i18n.removeFromFavoritesCommandTitle}}",
        "description": "{{i18n.Awp0RemoveFromFavoritesDesc}}"
      },
      "HostingSetRevisionRule": {
        "iconId": "",
        "isGroup": false,
        "title": "{{i18n.HostingSetRevisionRule}}"
      },
      "Awp0OpenHosted": {
        "iconId": "cmdOpenInHostApplication",
        "isGroup": false,
        "title": "{{ctx.aw_hosting_config.SendToCommandDisplayName}}",
        "description": "{{i18n.Awp0OpenHostedDesc}}"
      },
      "Awp0OpenNewViewHosted": {
        "iconId": "cmdOpenInNewTab",
        "isGroup": false,
        "title": "{{ctx.aw_hosting_config.SendToNewViewCommandDisplayName}}"
      },
      "Awp0AddComponentHosted": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{ctx.aw_hosting_config.AddComponentHostedDisplayName}}",
        "description": "{{i18n.Awp0AddComponentHostedDesc}}"
      },
      "Awp0ReplaceDataset": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.replaceFileCommandTitle}}",
        "description": "{{i18n.Awp0ReplaceDatasetDesc}}"
      },
      "Awp0CreateAlternateId": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Awp0CreateAlternateIdTitle}}",
        "description": "{{i18n.Awp0CreateAlternateIdDesc}}"
      },
      "Awp0CreateAliasId": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Awp0CreateAliasIdTitle}}",
        "description": "{{i18n.Awp0CreateAliasIdDesc}}"
      },
      "Awp0CreateDispRule": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Awp0CreateDispRuleTitle}}",
        "description": "{{i18n.Awp0CreateDispRuleDesc}}"
      },
      "Awp0IdDispRuleAdminInfo": {
        "iconId": "cmdShowInfoPanel",
        "title": "{{i18n.objectInfoLabel}}",
        "description": "{{i18n.Awp0IdDispRuleAdminInfoDesc}}"
      },
      "Awp0RedLineMode": {
        "title": "{{i18n.Awp0EnableRedLineMode}}",
        "isGroup": false,
        "selected": {
          "title": "{{i18n.Awp0EnableRedLineMode}}"
        },
        "description": "{{i18n.Awp0RedLineModeDesc}}"
      },
      "Awp0GoHome": {
        "iconId": "cmdHomeLHN",
        "title": "{{i18n.homeCommandTitle}}",
        "description": "{{i18n.Awp0GoHomeDesc}}"
      },
      "cmdSignOut": {
        "iconId": "cmdSignout",
        "title": "{{i18n.signOut}}",
        "description": "{{i18n.Awp0SignOutDesc}}"
      },
      "cmdViewProfile": {
        "iconId": "cmdGuide",
        "title": "{{i18n.profile}}",
        "description": "{{i18n.cmdViewProfileDesc}}"
      },
      "cmdShowObjectDevConfig": {
        "iconId": "cmdConfiguration",
        "title": "{{i18n.ShowObjectDevConfigTitle}}"
      },
      "cmdQuickAccess": {
        "iconId": "cmdQuickLink",
        "title": "{{i18n.QuickAccessTitle}}",
        "description": "{{i18n.cmdQuickAccessDesc}}"
      },
      "Awp0SignOut": {
        "iconId": "cmdSignOut",
        "title": "{{i18n.signOut}}",
        "description": "{{i18n.Awp0SignOutDesc}}"
      },
      "Awp0FullScreen": {
        "iconId": "cmdFullScreen",
        "title": "{{i18n.taskbarFullScreen}}",
        "description": "{{i18n.Awp0FullScreenDesc}}"
      },
      "Awp0ExitFullScreen": {
        "iconId": "cmdExitFullScreen",
        "title": "{{i18n.taskbarFullScreenExit}}",
        "description": "{{i18n.Awp0TaskbarExitFullScreenDesc}}"
      },
      "Awp0Cut": {
        "iconId": "cmdCut",
        "title": "{{i18n.Awp0CutTitle}}",
        "description": "{{i18n.Awp0CutDesc}}"
      },
      "Awp0CutContextMenu": {
        "iconId": "cmdCut",
        "title": "{{i18n.Awp0CutTitle}}",
        "description": "{{i18n.Awp0CutDesc}}"
      },
      "Awp0Checkout": {
        "iconId": "cmdCheckout",
        "title": "{{i18n.checkoutTitle}}",
        "description": "{{i18n.Awp0CheckoutDesc}}"
      },
      "Awp0CancelCheckout": {
        "iconId": "cmdCancelCheckout",
        "title": "{{i18n.cancelCheckoutTitle}}",
        "description": "{{i18n.Awp0CancelCheckoutDesc}}"
      },
      "Awp0Checkin": {
        "iconId": "cmdCheckin",
        "title": "{{i18n.checkinTitle}}",
        "description": "{{i18n.Awp0CheckinDesc}}"
      },
      "Awp0ShowObject": {
        "iconId": "cmdOpen",
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.Awp0ShowObjectDesc}}"
      },
      "Awp0ShowSaveAs": {
        "iconId": "cmdSaveAs",
        "title": "{{i18n.Awp0ShowSaveAsTitle}}",
        "description": "{{i18n.Awp0ShowSaveAsDesc}}"
      },
      "Awp0ShowSaveAsOnly": {
        "iconId": "cmdSaveAsOnly",
        "title": "{{i18n.Awp0ShowSaveAsOnlyTitle}}",
        "description": "{{i18n.Awp0ShowSaveAsOnlyDesc}}"
      },
      "Awp0ShowRevise": {
        "iconId": "cmdRevise",
        "title": "{{i18n.Awp0ShowReviseTitle}}",
        "description": "{{i18n.Awp0ShowReviseDesc}}"
      },
      "Awp0OpenInNewTab": {
        "iconId": "cmdOpenInNewTab",
        "title": "{{i18n.Awp0OpenInNewTabTitle}}",
        "description": "{{i18n.Awp0OpenInNewTabDesc}}"
      },
      "Awp0OpenInNewWindow": {
        "iconId": "cmdOpen",
        "title": "{{i18n.Awp0OpenInNewWindowTitle}}",
        "description": "{{i18n.Awp0OpenInNewWindowDesc}}"
      },
      "Awp0OpenInRAC": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.Awp0OpenInRACTitle}}",
        "description": "{{i18n.Awp0OpenInRACDesc}}"
      },
      "Awp0ShareURL": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.Awp0ShareURLTitle}}",
        "description": "{{i18n.Awp0ShareURLDesc}}"
      },
      "Awp0ShowObjectCell": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.Awp0ShowObjectDesc}}"
      },
      "Awp0ShowObjectCellForObjectNavigation": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.Awp0ShowObjectDesc}}"
      },
      "Awp0ShowObjectCellDataset": {
        "iconId": "cmdDownload",
        "isGroup": false,
        "title": "{{i18n.showObjectCommandDownloadTitle}}",
        "description": "{{i18n.Awp0ShowObjectCellDatasetDesc}}"
      },
      "Awp0ViewFile": {
        "iconId": "cmdDownload",
        "isGroup": false,
        "title": "{{i18n.Awp0MultipleFileDwnldTitle}}",
        "description": "{{i18n.Awp0ViewFileDesc}}"
      },
      "Awp0NavigateObject": {
        "iconId": "miscCollapse",
        "isGroup": false,
        "title": "{{i18n.objectNavigationSubLocationTitle}}",
        "description": "{{i18n.Awp0NavigateObjectDesc}}"
      },
      "Awp0TablePropertyCreate": {
        "iconId": "cmdAdd",
        "title": "{{i18n.ADD_BUTTON_TITLE}}"
      },
      "Awp0TablePropertyDuplicate": {
        "iconId": "cmdDuplicate",
        "title": "{{i18n.Awp0TablePropertyDuplicateTitle}}"
      },
      "Awp0TablePropertyRemove": {
        "iconId": "cmdRemove",
        "title": "{{i18n.REMOVE_BUTTON_TITLE}}"
      },
      "Awp0NameValueCreate": {
        "iconId": "cmdAdd",
        "title": "{{i18n.ADD_BUTTON_TITLE}}"
      },
      "Awp0NameValueCreateXRT": {
        "iconId": "cmdAdd",
        "title": "{{i18n.ADD_BUTTON_TITLE}}"
      },
      "Awp0NameValueRemoveXRT": {
        "iconId": "cmdRemove",
        "title": "{{i18n.REMOVE_BUTTON_TITLE}}"
      },
      "Awp0StartEdit": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.startEdit}}",
        "description": "{{i18n.Awp0StartEditSummaryDesc}}"
      },
      "StartEditGroupCommand": {
        "iconId": "cmdEdit",
        "isGroup": true,
        "title": "{{i18n.startEdit}}"
      },
      "Awp0StartEditSummary": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditSummaryTitle}}",
        "description": "{{i18n.Awp0StartEditSummaryDesc}}"
      },
      "Awp0StartEditTable": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0EditGroup}}",
        "description": "{{i18n.Awp0StartEditTableDesc}}"
      },
      "Awp0OpenGroup": {
        "iconId": "cmdOpen",
        "isRibbon": true,
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.Awp0OpenGroupDesc}}"
      },
      "OpenGroupCommandFooter": {
        "iconId": "cmdOpen",
        "isGroup": true,
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.OpenGroupCommandFooterDesc}}"
      },
      "Awp0ModelObjListDisplayToggles": {
        "isShuttle": true
      },
      "Awp0ShowImageView": {
        "iconId": "cmdImage",
        "title": "{{i18n.showImageViewText}}",
        "description": "{{i18n.Awp0ShowImageViewDesc}}"
      },
      "Awp0ShowListView": {
        "iconId": "cmdListView",
        "title": "{{i18n.showListViewText}}",
        "description": "{{i18n.Awp0ShowListViewDesc}}"
      },
      "Awp0ShowSummaryView": {
        "iconId": "cmdListSummaryView",
        "title": "{{i18n.showListWithSummaryViewText}}",
        "description": "{{i18n.Awp0ShowSummaryViewDesc}}"
      },
      "Awp0ShowTableSummaryView": {
        "iconId": "cmdTableSummaryView",
        "title": "{{i18n.showTablewithSummaryViewText}}",
        "description": "{{i18n.Awp0ShowTableSummaryViewDesc}}"
      },
      "Awp0ShowTableView": {
        "iconId": "cmdTableView",
        "title": "{{i18n.showTableViewText}}",
        "description": "{{i18n.Awp0ShowTableViewDesc}}"
      },
      "Awp0ShowTreeSummaryView": {
        "iconId": "cmdTreeSummary",
        "title": "{{i18n.Awp0ShowTreeSummaryViewTitle}}",
        "description": "{{i18n.Awp0ShowTreeSummaryViewDesc}}"
      },
      "Awp0ShowTreeView": {
        "iconId": "cmdTreeView",
        "title": "{{i18n.Awp0ShowTreeViewTitle}}",
        "description": "{{i18n.Awp0ShowTreeViewDesc}}"
      },
      "Awp0SaveEdits": {
        "iconId": "cmdSave",
        "title": "{{i18n.saveEditsTitle}}",
        "description": "{{i18n.Awp0SaveEditsDesc}}"
      },
      "Awp0CancelEdits": {
        "iconId": "cmdCancelEdit",
        "isGroup": false,
        "title": "{{i18n.cancelEditsTitle}}",
        "description": "{{i18n.Awp0CancelEdits}}"
      },
      "Awp0SaveEditsPWA": {
        "iconId": "cmdSave",
        "isGroup": false,
        "title": "{{i18n.saveEditsTitle}}",
        "description": "{{i18n.Awp0SaveEditsDesc}}"
      },
      "Awp0CancelEditsPWA": {
        "iconId": "cmdCancelEdit",
        "isGroup": false,
        "title": "{{i18n.cancelEditsTitle}}",
        "description": "{{i18n.Awp0CancelEditsPWADesc}}"
      },
      "Awp0CommandLabelToggle": {
        "iconId": "cmdIconLabel",
        "title": "{{i18n.Awp0CommandLabelToggleTitle}}",
        "description": "{{i18n.Awp0CommandLabelToggleDesc}}"
      },
      "Awp0AddReference": {
        "iconId": "",
        "title": ""
      },
      "Awp0AddProfilePicture": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.AddProfilePicture}}",
        "description": "{{i18n.Awp0AddProfilePictureDesc}}"
      },
      "Awp0ChangePassword": {
        "iconId": "cmdChangePassword",
        "title": "{{i18n.Awp0ChangePasswordTitle}}",
        "description": "{{i18n.Awp0ChangePasswordDesc}}"
      },
      "Awp0SelectAll": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.selectAll}}",
        "description": "{{i18n.Awp0SelectAllDesc}}"
      },
      "Awp0ObjectInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.objectInfoLabel}}",
        "description": "{{i18n.Awp0ObjectInfoDesc}}"
      },
      "Awp0DeselectAll": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.clearSelections}}",
        "description": "{{i18n.Awp0DeselectAllDesc}}"
      },
      "Awp0SelectAllObjectSet": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.selectAll}}",
        "description": "{{i18n.Awp0SelectAllDesc}}"
      },
      "Awp0DeselectAllObjectSet": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.clearSelections}}",
        "description": "{{i18n.Awp0DeselectAllDesc}}"
      },
      "Awp0EnableMultiSelect": {
        "iconId": "cmdMultiSelect",
        "title": "{{i18n.selectionMode}}",
        "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
      },
      "Awp0DisableMultiSelect": {
        "iconId": "cmdMultiSelect",
        "title": "{{i18n.selectionMode}}",
        "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
      },
      "Awp0EnableMultiSelectObjectSet": {
        "iconId": "cmdMultiSelect",
        "title": "{{i18n.selectionMode}}",
        "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
      },
      "Awp0DisableMultiSelectObjectSet": {
        "iconId": "cmdMultiSelect",
        "title": "{{i18n.selectionMode}}",
        "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
      },
      "Awp0ShowCreateObject": {
        "iconId": "cmdAdd",
        "title": "{{i18n.ADD_BUTTON_TITLE}}",
        "description": "{{i18n.Awp0ShowCreateObjectDesc}}"
      },
      "Awp0ShowAddObject": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Awp0AddObjectTitle}}",
        "description": "{{i18n.Awp0ShowAddObjectDesc}}"
      },
      "Awp0Delete": {
        "iconId": "cmdDelete",
        "title": "{{i18n.delete}}",
        "description": "{{i18n.Awp0DeleteDesc}}"
      },
      "Awp0ExportDelete": {
        "iconId": "cmdDelete",
        "title": "{{i18n.delete}}",
        "description": "{{i18n.Awp0DeleteCommandDesc}}"
      },
      "Awp0Copy": {
        "iconId": "cmdCopy",
        "title": "{{i18n.Awp0CopyTitle}}",
        "description": "{{i18n.Awp0CopyDesc}}"
      },
      "Awp0CopyContextMenu": {
        "iconId": "cmdCopy",
        "title": "{{i18n.Awp0CopyTitle}}",
        "description": "{{i18n.Awp0CopyDesc}}"
      },
      "Awp0CopyDownloadLink": {
        "iconId": "cmdCopy",
        "title": "{{i18n.Awp0CopyFileLinkTitle}}",
        "description": "{{i18n.Awp0CopyDownloadLinkDesc}}"
      },
      "Awp0Paste": {
        "iconId": "cmdPaste",
        "title": "{{i18n.Awp0PasteGroup}}",
        "description": "{{i18n.Awp0PasteDesc}}"
      },
      "Awp0PasteContextMenu": {
        "iconId": "cmdPaste",
        "title": "{{i18n.Awp0PasteGroup}}",
        "description": "{{i18n.Awp0PasteDesc}}"
      },
      "Awp0ExportToExcel": {
        "iconId": "cmdExport",
        "title": "{{i18n.Awp0ExportToExcelTitle}}",
        "description": "{{i18n.Awp0ExportToExcelDesc}}"
      },
      "Awp0ExportSelectedColumnsAdd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addColumns}}",
        "description": "{{i18n.Awp0ExportSelectedColumnsAddDesc}}"
      },
      "Awp0MoveUpExcelColumn": {
        "iconId": "cmdMoveUp",
        "isGroup": false,
        "title": "{{i18n.MOVE_UP_BUTTON_TITLE}}",
        "description": "{{i18n.Awp0MoveUpExcelColumnDesc}}"
      },
      "Awp0MoveDownExcelColumn": {
        "iconId": "cmdMoveDown",
        "isGroup": false,
        "title": "{{i18n.MOVE_DOWN_BUTTON_TITLE}}",
        "description": "{{i18n.Awp0MoveDownExcelColumnDesc}}"
      },
      "arrangeShowAll": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.arrangeShowCommon}}",
        "selected": {
          "iconId": "cmdShow",
          "title": "{{i18n.arrangeShowAll}}"
        },
        "description": "{{i18n.arrangeShowAllDesc}}"
      },
      "arrangeReset": {
        "iconId": "cmdReset",
        "isGroup": false,
        "title": "{{i18n.RESET_TEXT}}",
        "description": "{{i18n.arrangeResetDesc}}"
      },
      "arrangeMoveUp": {
        "iconId": "cmdMoveUp",
        "isGroup": false,
        "title": "{{i18n.arrangeMoveUp}}",
        "description": "{{i18n.arrangeMoveUpDesc}}"
      },
      "arrangeMoveDown": {
        "iconId": "cmdMoveDown",
        "isGroup": false,
        "title": "{{i18n.arrangeMoveDown}}",
        "description": "{{i18n.arrangeMoveDownDesc}}"
      },
      "arrangeAddColumns": {
        "iconId": "cmdChevronRight_uxRefresh",
        "isGroup": false,
        "title": "{{i18n.ADD_BUTTON_TITLE}}",
        "description": "{{i18n.arrangeAddColumnsDesc}}"
      },
      "arrangeRemoveColumns": {
        "iconId": "cmdChevronLeft_uxRefresh",
        "isGroup": false,
        "title": "{{i18n.REMOVE_BUTTON_TITLE}}",
        "description": "{{i18n.arrangeRemoveColumnsDesc}}"
      },
      "arrangeViewConfigs": {
        "iconId": "cmdColumnConfigurations",
        "isGroup": false,
        "title": "{{i18n.arrangeViewConfigs}}",
        "description": "{{i18n.arrangeViewConfigsDesc}}"
      },
      "deleteNamedColumnConfig": {
        "iconId": "cmdDelete",
        "title": "{{i18n.delete}}",
        "description": "{{i18n.deleteNamedColumnConfigDesc}}"
      },
      "Awp0ChangeOwner": {
        "iconId": "cmdChangeOwner",
        "title": "{{i18n.Awp0ChangeOwner}}",
        "description": "{{i18n.Awp0ChangeOwnerDesc}}"
      },
      "Awp0ShowCompactLayout": {
        "iconId": "cmdCompact",
        "title": "{{i18n.compactLayout}}",
        "description": "{{i18n.Awp0ShowCompactLayoutDesc}}"
      },
      "Awp0ShowComfyLayout": {
        "iconId": "cmdComfy",
        "title": "{{i18n.comfyLayout}}",
        "description": "{{i18n.Awp0ShowComfyLayoutDesc}}"
      },
      "Awp0CloseCommandPanel": {
        "iconId": "cmdClosePanel",
        "isGroup": false,
        "title": "{{i18n.COMMON_USER_SETTING_BAR_CLOSE}}",
        "description": "{{i18n.Awp0CloseCommandPanelDesc}}"
      },
      "Awp0EditGroup": {
        "iconId": "cmdEdit",
        "isRibbon": true,
        "title": "{{i18n.Awp0EditGroup}}",
        "description": "{{i18n.Awp0EditGroupDesc}}"
      },
      "Awp0ManageGroup": {
        "iconId": "cmdManage",
        "isRibbon": true,
        "title": "{{i18n.Awp0ManageGroup}}",
        "description": "{{i18n.Awp0ManageGroupDesc}}"
      },
      "Awp0NewGroup": {
        "iconId": "cmdNew",
        "isRibbon": true,
        "title": "{{i18n.newTabTitle}}",
        "description": "{{i18n.Awp0NewGroupDesc}}"
      },
      "Awp0ShareGroup": {
        "iconId": "cmdShare",
        "isRibbon": true,
        "title": "{{i18n.Awp0ShareGroup}}",
        "description": "{{i18n.Awp0ShareGroupDesc}}"
      },
      "Awp0ViewGroup": {
        "iconId": "cmdShow",
        "isRibbon": true,
        "title": "{{i18n.Awp0ViewGroup}}",
        "description": "{{i18n.Awp0ViewGroupDesc}}"
      },
      "Awp0PasteGroup": {
        "iconId": "cmdPaste",
        "isGroup": true,
        "title": "{{i18n.Awp0PasteGroup}}",
        "description": "{{i18n.Awp0PasteGroupDesc}}"
      },
      "Awp0GoFavorites": {
        "iconId": "cmdFavorites",
        "title": "{{i18n.favoritesTitle}}",
        "description": "{{i18n.Awp0GoFavoritesDesc}}"
      },
      "Awp0Help": {
        "iconId": "homehelp",
        "title": "{{i18n.helpTitle}}",
        "description": "{{i18n.Awp0HelpDesc}}"
      },
      "Awp0HelpGroup": {
        "iconId": "homehelp",
        "isGroup": true,
        "title": "{{i18n.helpTitle}}",
        "description": "{{i18n.Awp0HelpGroupDesc}}"
      },
      "Awp0HelpAbout": {
        "iconId": "homehelp",
        "title": "{{i18n.helpAboutTitle}}",
        "description": "{{i18n.Awp0HelpAboutDesc}}"
      },
      "Awp0ShowObjectCellTitle": {
        "iconId": "cmdOpen",
        "title": ""
      },
      "Awp0OpenInNewTabCellTitle": {
        "iconId": "cmdOpenInNewTab",
        "title": "",
        "description": "{{i18n.Awp0OpenInNewTabCellTitleDesc}}"
      },
      "Awp0OpenInNewWindowCellTitle": {
        "iconId": "cmdOpen",
        "title": "",
        "description": "{{i18n.Awp0OpenInNewWindowCellTitleDesc}}"
      },
      "openArrangePanel": {
        "iconId": "",
        "title": "{{i18n.arrangeMenu}}",
        "description": "{{i18n.openArrangePanelDesc}}"
      },
      "Awp0ShowFileVersions": {
        "iconId": "cmdShowDatasetVersions",
        "title": "{{i18n.showFileVersions}}",
        "description": "{{i18n.showFileVersionsDesc}}"
      },
      "Awp0AddorRemoveLocales": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addorRemoveLocales}}",
        "description": "{{i18n.addorRemoveLocalesDesc}}"
      },
      "Awp0RemoveLocale": {
        "iconId": "cmdDelete",
        "title": "{{i18n.removeLocale}}",
        "description": "{{i18n.removeLocaleDesc}}"
      },
      "Awp0EditLocalizationSingle": {
        "iconId": "cmdTranslate",
        "title": "{{i18n.editLocalizationSingle}}",
        "description": "{{i18n.editLocalizationSingleDesc}}"
      },
      "Awp0RemoveProjectsCell": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeProjectTitle}}",
        "description": "{{i18n.Awp0RemoveProjectsCellDesc}}"
      },
      "uvCheckout": {
        "iconId": "cmdCheckout",
        "title": "{{i18n.uvCheckoutTitle}}",
        "description": "{{i18n.uvCheckoutDesc}}"
      },
      "uvCancelCheckout": {
        "iconId": "cmdCancelCheckout",
        "title": "{{i18n.cancelCheckoutTitle}}",
        "description": "{{i18n.Awp0CancelCheckoutDesc}}"
      },
      "uvCheckin": {
        "iconId": "cmdCheckin",
        "title": "{{i18n.uvCheckinTitle}}",
        "description": "{{i18n.Awp0CheckinDesc}}"
      },
      "fullViewMode": {
        "iconId": "cmdFullScreen",
        "title": "{{i18n.taskbarFullScreen}}",
        "description": "{{i18n.Awp0FullScreenDesc}}"
      },
      "uvWordWrap": {
        "iconId": "cmdWrapText",
        "title": "{{i18n.uvWordWrapTitle}}",
        "description": "{{i18n.uvWordWrapDesc}}"
      },
      "Awp0ShowObjectForUV": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.Awp0ShowObjectTitle}}",
        "description": "{{i18n.Awp0ShowObjectForUVpDesc}}"
      },
      "Awp0ViewFileForUV": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.Awp0ViewFileTitle}}",
        "description": "{{i18n.Awp0ViewFileForUVDesc}}"
      },
      "Awp0OpenInNewWindowForUV": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.Awp0OpenInNewWindowTitle}}",
        "description": "{{i18n.Awp0OpenInNewWindowDesc}}"
      },
      "Awp0OpenInNewTabForUV": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.Awp0OpenInNewTabTitle}}",
        "description": "{{i18n.Awp0OpenInNewTabDesc}}"
      },
      "objectSetViewModeGroup": {
        "isShuttle": true
      },
      "objectSetListViewMode": {
        "iconId": "cmdListView",
        "title": "{{i18n.showListViewText}}",
        "description": "{{i18n.Awp0ShowListViewDesc}}"
      },
      "objectSetTableViewMode": {
        "iconId": "cmdTableView",
        "title": "{{i18n.showTableViewText}}",
        "description": "{{i18n.Awp0ShowTableViewDesc}}"
      },
      "objectSetCompareViewMode": {
        "iconId": "cmdCompareView",
        "title": "{{i18n.compareTitle}}",
        "description": "{{i18n.objectSetCompareViewModeDesc}}"
      },
      "objectSetImageViewMode": {
        "iconId": "cmdImage",
        "title": "{{i18n.showImageViewText}}",
        "description": "{{i18n.Awp0ShowImageViewDesc}}"
      },
      "GcStartEdit": {
        "iconId": "cmdEditDiagram",
        "isGroup": false,
        "title": "{{i18n.startEditCommandTitle}}"
      },
      "GcExitEdit": {
        "iconId": "cmdSaveDiagram",
        "isGroup": false,
        "title": "{{i18n.exitEditCommandTitle}}"
      },
      "graphLegend": {
        "iconId": "cmdShowRelationsControls",
        "isGroup": false,
        "title": "{{i18n.legendCommandTitle}}"
      },
      "GcLayoutCommandGroup": {
        "iconId": "cmdLayoutGroup",
        "isGroup": true,
        "title": "{{i18n.applyLayout}}"
      },
      "GcTopToBottomLayout": {
        "iconId": "cmdDownArrow",
        "isGroup": false,
        "title": "{{i18n.topToBottomLayout}}",
        "selected": {
          "iconId": "cmdDownArrow",
          "title": "{{i18n.topToBottomLayout}}"
        }
      },
      "GcRightToLeftLayout": {
        "iconId": "cmdLeftArrow",
        "isGroup": false,
        "title": "{{i18n.rightToLeftLayout}}",
        "selected": {
          "iconId": "cmdLeftArrow",
          "title": "{{i18n.rightToLeftLayout}}"
        }
      },
      "GcLeftToRightLayout": {
        "iconId": "cmdRightArrow",
        "isGroup": false,
        "title": "{{i18n.leftToRightLayout}}",
        "selected": {
          "iconId": "cmdRightArrow",
          "title": "{{i18n.leftToRightLayout}}"
        }
      },
      "GcBottomToTopLayout": {
        "iconId": "cmdUpArrow",
        "isGroup": false,
        "title": "{{i18n.bottomToTopLayout}}",
        "selected": {
          "iconId": "cmdUpArrow",
          "title": "{{i18n.bottomToTopLayout}}"
        }
      },
      "GcOrganicLayout": {
        "iconId": "cmdLayoutGroup",
        "isGroup": false,
        "title": "{{i18n.organicLayout}}",
        "selected": {
          "iconId": "cmdLayoutGroup",
          "title": "{{i18n.organicLayout}}"
        }
      },
      "GcBalloonLayout": {
        "iconId": "cmdLayoutGroup",
        "isGroup": false,
        "title": "{{i18n.balloonLayout}}",
        "selected": {
          "iconId": "cmdLayoutGroup",
          "title": "{{i18n.balloonLayout}}"
        }
      },
      "GcSnakeLayout": {
        "iconId": "cmdLayoutGroup",
        "isGroup": false,
        "title": "{{i18n.snakeLayout}}",
        "selected": {
          "iconId": "cmdLayoutGroup",
          "title": "{{i18n.snakeLayout}}"
        }
      },
      "GcIncrementalLayout": {
        "iconId": "cmdLayoutGroup",
        "isGroup": false,
        "title": "{{i18n.incrementalLayout}}",
        "selected": {
          "iconId": "cmdLayoutGroup",
          "title": "{{i18n.incrementalLayout}}"
        }
      },
      "Awv0Pan": {
        "iconId": "cmdPan",
        "isGroup": false,
        "title": "{{i18n.NavigationPanTitle}}",
        "description": "{{i18n.Awv0PanDesc}}"
      },
      "Awv0Rotate": {
        "iconId": "cmdRotate",
        "isGroup": false,
        "title": "{{i18n.NavigationRotateTitle}}",
        "description": "{{i18n.Awv0RotateDesc}}"
      },
      "Awv0Zoom": {
        "iconId": "cmdZoom",
        "isGroup": false,
        "title": "{{i18n.NavigationZoomTitle}}",
        "description": "{{i18n.Awv0ZoomDesc}}"
      },
      "Awv0AreaSelect": {
        "iconId": "cmdSelectAny",
        "isGroup": false,
        "title": "{{i18n.AreaSelectTitle}}",
        "extendedTooltip": {
          "view": "Awv0AreaSelectCommandExtendedTooltip"
        }
      },
      "ViewNavigationGroup": {
        "iconId": "cmdRotate",
        "isShuttle": true,
        "title": "{{i18n.3DNavigation}}",
        "description": "{{i18n.ViewNavigationGroupDesc}}"
      },
      "Awv0UvPan": {
        "iconId": "cmdPan",
        "isGroup": false,
        "title": "{{i18n.NavigationPanTitle}}"
      },
      "Awv0UvRotate": {
        "iconId": "cmdRotate",
        "isGroup": false,
        "title": "{{i18n.NavigationRotateTitle}}"
      },
      "Awv0UvZoom": {
        "iconId": "cmdZoom",
        "isGroup": false,
        "title": "{{i18n.NavigationZoomTitle}}"
      },
      "UvViewNavigationGroup": {
        "iconId": "cmdRotate",
        "isShuttle": true,
        "title": "{{i18n.3DNavigation}}"
      },
      "Awv0UseTransparency": {
        "iconId": "cmdUseTransparencyOn",
        "isGroup": false,
        "title": "{{i18n.UseTransparencyOnTitle}}",
        "selected": {
          "iconId": "cmdUseTransparencyOn",
          "title": "{{i18n.UseTransparencyOffTitle}}"
        },
        "description": "{{i18n.Awv0UseTransparencyDesc}}"
      },
      "MeasurementFilterGroup": {
        "iconId": "cmdSelectFeatures",
        "isShuttle": true,
        "title": "{{i18n.pickFilter}}",
        "description": "{{i18n.MeasurementFilterGroupDesc}}"
      },
      "Awv0ViewerSettings": {
        "iconId": "cmdDisplayOptions",
        "isGroup": false,
        "title": "{{i18n.ViewerSettingsPanelTitle}}",
        "description": "{{i18n.Awv0ViewerSettingsDesc}}"
      },
      "Awv0ViewOrientationGroup": {
        "iconId": "cmdOrientISO",
        "isGroup": true,
        "title": "{{i18n.standardViews}}",
        "description": "{{i18n.Awv0ViewOrientationGroupDesc}}"
      },
      "Awv0OrientIsometric": {
        "iconId": "cmdOrientISO",
        "isGroup": false,
        "title": "{{i18n.isometric}}",
        "description": "{{i18n.Awv0OrientIsometricDesc}}"
      },
      "Awv0OrientTrimetric": {
        "iconId": "cmdOrientNegative",
        "isGroup": false,
        "title": "{{i18n.trimetric}}",
        "description": "{{i18n.Awv0OrientTrimetricDesc}}"
      },
      "Awv0OrientTop": {
        "iconId": "cmdOrientTop",
        "isGroup": false,
        "title": "{{i18n.top}}",
        "description": "{{i18n.Awv0OrientTopDesc}}"
      },
      "Awv0OrientFront": {
        "iconId": "cmdOrientFront",
        "isGroup": false,
        "title": "{{i18n.front}}",
        "description": "{{i18n.Awv0OrientFrontDesc}}"
      },
      "Awv0OrientRight": {
        "iconId": "cmdOrientRight",
        "isGroup": false,
        "title": "{{i18n.right}}",
        "description": "{{i18n.Awv0OrientRightDesc}}"
      },
      "Awv0OrientBack": {
        "iconId": "cmdOrientBack",
        "isGroup": false,
        "title": "{{i18n.back}}",
        "description": "{{i18n.Awv0OrientBackDesc}}"
      },
      "Awv0OrientBottom": {
        "iconId": "cmdOrientBottom",
        "isGroup": false,
        "title": "{{i18n.bottom}}",
        "description": "{{i18n.Awv0OrientBottomDesc}}"
      },
      "Awv0OrientLeft": {
        "iconId": "cmdOrientLeft",
        "isGroup": false,
        "title": "{{i18n.left}}",
        "description": "{{i18n.Awv0OrientLeftDesc}}"
      },
      "UvAwv0ViewOrientationGroup": {
        "iconId": "cmdOrientISO",
        "isGroup": true,
        "title": "{{i18n.standardViews}}"
      },
      "UvAwv0OrientIsometric": {
        "iconId": "cmdOrientISO",
        "isGroup": false,
        "title": "{{i18n.isometric}}"
      },
      "UvAwv0OrientTrimetric": {
        "iconId": "cmdOrientTrimetric",
        "isGroup": false,
        "title": "{{i18n.trimetric}}"
      },
      "UvAwv0OrientTop": {
        "iconId": "cmdOrientTop",
        "isGroup": false,
        "title": "{{i18n.top}}"
      },
      "UvAwv0OrientFront": {
        "iconId": "cmdOrientFront",
        "isGroup": false,
        "title": "{{i18n.front}}"
      },
      "UvAwv0OrientRight": {
        "iconId": "cmdOrientRight",
        "isGroup": false,
        "title": "{{i18n.right}}"
      },
      "UvAwv0OrientBack": {
        "iconId": "cmdOrientBack",
        "isGroup": false,
        "title": "{{i18n.back}}"
      },
      "UvAwv0OrientBottom": {
        "iconId": "cmdOrientBottom",
        "isGroup": false,
        "title": "{{i18n.bottom}}"
      },
      "UvAwv0OrientLeft": {
        "iconId": "cmdOrientLeft",
        "isGroup": false,
        "title": "{{i18n.left}}"
      },
      "Awv0ViewerConvenienceCommandGroup": {
        "iconId": "cmdShow",
        "isGroup": true,
        "title": "{{i18n.visibilityControls}}",
        "description": "{{i18n.Awv0ViewerConvenienceCommandGroupDesc}}"
      },
      "Awv0AllOn": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.allOn}}",
        "description": "{{i18n.Awv0AllOnDesc}}"
      },
      "Awv0AllOff": {
        "iconId": "cmdHide",
        "isGroup": false,
        "title": "{{i18n.allOff}}",
        "description": "{{i18n.Awv0AllOffDesc}}"
      },
      "Awv0SelectedOff": {
        "iconId": "cmdHideAll",
        "isGroup": false,
        "title": "{{i18n.selectedOff}}",
        "description": "{{i18n.Awv0SelectedOffDesc}}"
      },
      "Awv0SelectedOn": {
        "iconId": "cmdShowAll",
        "isGroup": false,
        "title": "{{i18n.selectedOn}}",
        "description": "{{i18n.Awv0SelectedOnDesc}}"
      },
      "Awv0SelectedOnly": {
        "iconId": "cmdShowAll",
        "isGroup": false,
        "title": "{{i18n.selectedOnly}}",
        "description": "{{i18n.Awv0SelectedOnlyDesc}}"
      },
      "Awv0ContextOff": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.contextOff}}",
        "description": "{{i18n.Awv0ContextOffDesc}}"
      },
      "Awv0ContextOn": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.contextOn}}",
        "description": "{{i18n.Awv0ContextOnDesc}}"
      },
      "Awv0ContextOnly": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.contextOnly}}",
        "description": "{{i18n.Awv0ContextOnlyDesc}}"
      },
      "Awv0SelectContext": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.selectContext}}",
        "description": "{{i18n.Awv0SelectContextDesc}}"
      },
      "Awv0RemoveAnalysisResult": {
        "iconId": "cmdHideResults",
        "isGroup": false,
        "title": "{{i18n.removeAnalysisResult}}",
        "extendedTooltip": {
          "view": "Awv0RemoveAnalysisResultExtendedTooltip"
        }
      },
      "Awv0Fit": {
        "iconId": "cmdFitToWindow",
        "isGroup": false,
        "title": "{{i18n.fit}}",
        "description": "{{i18n.Awv0FitDesc}}"
      },
      "Awv0Pan_scv": {
        "iconId": "cmdPan",
        "isGroup": false,
        "title": "{{i18n.NavigationPanTitle}}",
        "description": "{{i18n.Awv0PanDesc}}"
      },
      "Awv0Rotate_scv": {
        "iconId": "cmdRotate",
        "isGroup": false,
        "title": "{{i18n.NavigationRotateTitle}}",
        "description": "{{i18n.Awv0RotateDesc}}"
      },
      "Awv0Zoom_scv": {
        "iconId": "cmdZoom",
        "isGroup": false,
        "title": "{{i18n.NavigationZoomTitle}}",
        "description": "{{i18n.Awv0ZoomDesc}}"
      },
      "Awv0AreaSelect_scv": {
        "iconId": "cmdSelectAny",
        "isGroup": false,
        "title": "{{i18n.AreaSelectTitle}}",
        "extendedTooltip": {
          "view": "Awv0AreaSelectCommandExtendedTooltip"
        }
      },
      "ViewNavigationGroup_scv": {
        "iconId": "cmdRotate",
        "isShuttle": true,
        "title": "{{i18n.3DNavigation}}",
        "description": "{{i18n.ViewNavigationGroupDesc}}"
      },
      "Awv0UseTransparency_scv": {
        "iconId": "cmdUseTransparencyOn",
        "isGroup": false,
        "title": "{{i18n.UseTransparencyOnTitle}}",
        "selected": {
          "iconId": "cmdUseTransparencyOn",
          "title": "{{i18n.UseTransparencyOffTitle}}"
        },
        "description": "{{i18n.Awv0UseTransparencyDesc}}"
      },
      "MeasurementFilterGroup_scv": {
        "iconId": "cmdSelectFeatures",
        "isShuttle": true,
        "title": "{{i18n.pickFilter}}",
        "description": "{{i18n.MeasurementFilterGroupDesc}}"
      },
      "Awv0ViewerSettings_scv": {
        "iconId": "cmdDisplayOptions",
        "isGroup": false,
        "title": "{{i18n.ViewerSettingsPanelTitle}}",
        "description": "{{i18n.Awv0ViewerSettingsDesc}}"
      },
      "Awv0ViewOrientationGroup_scv": {
        "iconId": "cmdOrientISO",
        "isGroup": true,
        "title": "{{i18n.standardViews}}",
        "description": "{{i18n.Awv0ViewOrientationGroupDesc}}"
      },
      "Awv0OrientIsometric_scv": {
        "iconId": "cmdOrientISO",
        "isGroup": false,
        "title": "{{i18n.isometric}}",
        "description": "{{i18n.Awv0OrientIsometricDesc}}"
      },
      "Awv0OrientTrimetric_scv": {
        "iconId": "cmdOrientNegative",
        "isGroup": false,
        "title": "{{i18n.trimetric}}",
        "description": "{{i18n.Awv0OrientTrimetricDesc}}"
      },
      "Awv0OrientTop_scv": {
        "iconId": "cmdOrientTop",
        "isGroup": false,
        "title": "{{i18n.top}}",
        "description": "{{i18n.Awv0OrientTopDesc}}"
      },
      "Awv0OrientFront_scv": {
        "iconId": "cmdOrientFront",
        "isGroup": false,
        "title": "{{i18n.front}}",
        "description": "{{i18n.Awv0OrientFrontDesc}}"
      },
      "Awv0OrientRight_scv": {
        "iconId": "cmdOrientRight",
        "isGroup": false,
        "title": "{{i18n.right}}",
        "description": "{{i18n.Awv0OrientRightDesc}}"
      },
      "Awv0OrientBack_scv": {
        "iconId": "cmdOrientBack",
        "isGroup": false,
        "title": "{{i18n.back}}",
        "description": "{{i18n.Awv0OrientBackDesc}}"
      },
      "Awv0OrientBottom_scv": {
        "iconId": "cmdOrientBottom",
        "isGroup": false,
        "title": "{{i18n.bottom}}",
        "description": "{{i18n.Awv0OrientBottomDesc}}"
      },
      "Awv0OrientLeft_scv": {
        "iconId": "cmdOrientLeft",
        "isGroup": false,
        "title": "{{i18n.left}}",
        "description": "{{i18n.Awv0OrientLeftDesc}}"
      },
      "Awv0ViewerConvenienceCommandGroup_scv": {
        "iconId": "cmdShow",
        "isGroup": true,
        "title": "{{i18n.visibilityControls}}",
        "description": "{{i18n.Awv0ViewerConvenienceCommandGroupDesc}}"
      },
      "Awv0AllOn_scv": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.allOn}}",
        "description": "{{i18n.Awv0AllOnDesc}}"
      },
      "Awv0AllOff_scv": {
        "iconId": "cmdHide",
        "isGroup": false,
        "title": "{{i18n.allOff}}",
        "description": "{{i18n.Awv0AllOffDesc}}"
      },
      "Awv0SelectedOff_scv": {
        "iconId": "cmdHideAll",
        "isGroup": false,
        "title": "{{i18n.selectedOff}}",
        "description": "{{i18n.Awv0SelectedOffDesc}}"
      },
      "Awv0SelectedOn_scv": {
        "iconId": "cmdShowAll",
        "isGroup": false,
        "title": "{{i18n.selectedOn}}",
        "description": "{{i18n.Awv0SelectedOnDesc}}"
      },
      "Awv0SelectedOnly_scv": {
        "iconId": "cmdShowAll",
        "isGroup": false,
        "title": "{{i18n.selectedOnly}}",
        "description": "{{i18n.Awv0SelectedOnlyDesc}}"
      },
      "Awv0ContextOff_scv": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.contextOff}}",
        "description": "{{i18n.Awv0ContextOffDesc}}"
      },
      "Awv0ContextOn_scv": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.contextOn}}",
        "description": "{{i18n.Awv0ContextOnDesc}}"
      },
      "Awv0ContextOnly_scv": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.contextOnly}}",
        "description": "{{i18n.Awv0ContextOnlyDesc}}"
      },
      "Awv0SelectContext_scv": {
        "iconId": "cmdShow",
        "isGroup": false,
        "title": "{{i18n.selectContext}}",
        "description": "{{i18n.Awv0SelectContextDesc}}"
      },
      "Awv0RemoveAnalysisResult_scv": {
        "iconId": "cmdHideResults",
        "isGroup": false,
        "title": "{{i18n.removeAnalysisResult}}",
        "extendedTooltip": {
          "view": "Awv0RemoveAnalysisResultExtendedTooltip"
        }
      },
      "Awv0Fit_scv": {
        "iconId": "cmdFitToWindow",
        "isGroup": false,
        "title": "{{i18n.fit}}",
        "description": "{{i18n.Awv0FitDesc}}"
      },
      "Awv0Close3DSubCommandsToolbar": {
        "iconId": "cmdClose",
        "isGroup": false,
        "title": "{{i18n.Close}}",
        "description": "{{i18n.Awv0Close3DSubCommandsToolbarDesc}}"
      },
      "Awv0Close3DSubCommandsToolbar_scv": {
        "iconId": "cmdClose",
        "isGroup": false,
        "title": "{{i18n.Close}}",
        "description": "{{i18n.Awv0Close3DSubCommandsToolbarDesc}}"
      },
      "rotateCW": {
        "iconId": "cmdRotate",
        "title": "{{i18n.rotateClockwise}}",
        "description": "{{i18n.rotateCWDesc}}"
      },
      "rotateCCW": {
        "iconId": "cmdRotateCounterClockwise",
        "title": "{{i18n.rotateCounterclockwise}}",
        "description": "{{i18n.rotateCCWDesc}}"
      },
      "Awp0OpenVVI": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": "{{i18n.openVVICommandTitle}}",
        "description": "{{i18n.Awp0OpenVVIDesc}}"
      },
      "Awp0ShowHomeFolder": {
        "iconId": "cmdFolder",
        "isGroup": false,
        "title": "{{i18n.homeFolderTitle}}",
        "description": "{{i18n.Awp0ShowHomeFolderDesc}}"
      },
      "Awp0UnPinObject": {
        "iconId": "cmdUnpin",
        "title": "{{i18n.unPinObjectCommandTitle}}",
        "description": "{{i18n.Awp0UnPinObject}}"
      },
      "Awp0PinObject": {
        "iconId": "cmdPin",
        "title": "{{i18n.pinObjectCommandTitle}}",
        "description": "{{i18n.Awp0PinObjectDesc}}"
      },
      "removeAllFilters": {
        "iconId": "",
        "title": "{{i18n.removeAllFilters}}",
        "description": "{{i18n.removeAllFiltersDesc}}"
      },
      "toggleDynamicRowHeight": {
        "iconId": "",
        "title": "{{i18n.toggleDynamicRowHeight}}"
      },
      "Awp0ChangeTheme": {
        "iconId": "cmdSettings",
        "title": "{{i18n.changeThemeCommand}}",
        "isGroup": true,
        "description": "{{i18n.Awp0ChangeThemeDesc}}"
      },
      "Awp0ShowLightTheme": {
        "iconId": "cmdSettings",
        "title": "{{i18n.lightTheme}}"
      },
      "Awp0ShowDarkTheme": {
        "iconId": "cmdSettings",
        "title": "{{i18n.darkTheme}}"
      },
      "Awp0ColumnConfig": {
        "iconId": "",
        "title": "{{i18n.arrangeMenu}}"
      },
      "Awp0TaskbarFullScreen": {
        "iconId": "uiFullScreen",
        "title": "{{i18n.taskbarFullScreen}}",
        "description": "{{i18n.Awp0TaskbarFullScreenDesc}}"
      },
      "Awp0TaskbarExitFullScreen": {
        "iconId": "uiExitFullScreen",
        "title": "{{i18n.taskbarFullScreenExit}}",
        "description": "{{i18n.Awp0TaskbarExitFullScreenDesc}}"
      },
      "Awp0GoBack": {
        "iconId": "cmdBackLHN",
        "title": "{{ctx.previousLocationDisplayName }}"
      },
      "AddObjectPanelSetPin": {
        "iconId": "cmdPin",
        "title": "{{i18n.addObjectPanelPinButtonToolTip}}",
        "description": "{{i18n.panelPinButtonDesc}}"
      },
      "AddObjectPanelSetUnPin": {
        "iconId": "cmdUnpin",
        "title": "{{i18n.addObjectPanelUnpinButtonToolTip}}",
        "description": "{{i18n.panelUnPinButtonDesc}}"
      },
      "uiwidgetAddcmd": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addProjectButtonTitle}}",
        "description": "{{i18n.uiwidgetAddcmdDesc}}"
      },
      "Awp0ColumnConfigPre": {
        "iconId": "",
        "title": "{{i18n.arrangeMenu}}"
      }
    },
    "commandHandlers": {
      "DigitalAssetsPanelCommandHandler": {
        "id": "DigitalAssetsPanel",
        "action": "DigitalAssetsPanelAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.DigitalAssetsPanelCommandCondition"
        }
      },
      "ImagePanelCommandHandler": {
        "id": "ImagePanel",
        "action": "DigitalAssetsPanelAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.ImagePanelCommandCondition"
        }
      },
      "cmdReplaceDigitalAssetCommandHandler": {
        "id": "cmdReplaceDigitalAsset",
        "action": "performDigitalAssetReplacement",
        "activeWhen": true,
        "visibleWhen": true
      },
      "cmdDeleteDigitalAssetCommandHandler": {
        "id": "cmdDeleteDigitalAsset",
        "action": "performDigitalAssetDelete",
        "activeWhen": true,
        "visibleWhen": true
      },
      "showObjectCellCommandHandler1": {
        "id": "showObjectCell1",
        "action": "performOpenObject",
        "activeWhen": true,
        "visibleWhen": true
      },
      "showObjectCellCommandHandler2": {
        "id": "showObjectCell2",
        "action": "performOpenObject",
        "activeWhen": true,
        "visibleWhen": true
      },
      "openInIllustratorHandler": {
        "id": "openInIllustrator",
        "action": "openInIllustratorCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.OpenInIllustratorCondition"
        }
      },
      "cmdAddToFavoritesCommandHandler": {
        "id": "Awp0AddToFavorites",
        "action": "addFavorites",
        "activeWhen": {
          "condition": "conditions.AddToFavoritesVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.AddToFavoritesVisibility"
        }
      },
      "cmdRemoveFromFavoritesCommandHandler": {
        "id": "Awp0RemoveFromFavorites",
        "action": "removeFavorites",
        "activeWhen": {
          "condition": "conditions.RemoveFromFavoritesVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.RemoveFromFavoritesVisibility"
        }
      },
      "HostingSetRevisionRuleCommandHandler": {
        "id": "HostingSetRevisionRule",
        "action": "HostingSetRevisionRuleActionSoa",
        "activeWhen": {
          "condition": "conditions.IsHostingEnabled"
        },
        "visibleWhen": true
      },
      "Awp0OpenHostedHandler": {
        "id": "Awp0OpenHosted",
        "action": "Awp0OpenHostedAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.OpenHostedEnabled"
        }
      },
      "Awp0OpenNewViewHostedHandler": {
        "id": "Awp0OpenNewViewHosted",
        "action": "Awp0OpenNewViewHostedAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.OpenNewViewHostedEnabled"
        }
      },
      "Awp0AddComponentHostedHandler": {
        "id": "Awp0AddComponentHosted",
        "action": "Awp0AddComponentHostedAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.AddComponentHostedEnabled"
        }
      },
      "ReplaceDatasetCommandHandler": {
        "id": "Awp0ReplaceDataset",
        "action": "isDSMEnabled",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.alertReplaceCommandVisible"
        }
      },
      "Awp0ShowFileVersions": {
        "id": "Awp0ShowFileVersions",
        "action": "openFileVersionsPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isDatasetSelected"
        }
      },
      "Awp0CreateAlternateIdHandler": {
        "id": "Awp0CreateAlternateId",
        "action": "openCreateAlternateIdPanel",
        "activeWhen": {
          "condition": "conditions.cmdShowAlternateIdCommand"
        },
        "visibleWhen": {
          "condition": "conditions.cmdShowAlternateIdCommand"
        }
      },
      "Awp0CreateAliasIdHandler": {
        "id": "Awp0CreateAliasId",
        "action": "openCreateAliasIdPanel",
        "activeWhen": {
          "condition": "conditions.cmdShowAliasIdCommand"
        },
        "visibleWhen": {
          "condition": "conditions.cmdShowAliasIdCommand"
        }
      },
      "Awp0CreateDispRuleHandler": {
        "id": "Awp0CreateDispRule",
        "action": "openCreateDispRulePanel",
        "activeWhen": {
          "condition": "conditions.cmdShowDisplayRuleCommand"
        },
        "visibleWhen": {
          "condition": "conditions.cmdShowDisplayRuleCommand"
        }
      },
      "Awp0IdDispRuleAdminInfoCommandHandler": {
        "id": "Awp0IdDispRuleAdminInfo",
        "action": "Awp0IdDispRuleAdminInfoCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.idDispRuleAdminInfoCmdVisible"
        }
      },
      "signOutHandler": {
        "id": "cmdSignOut",
        "action": "signOut",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.signOutVisible"
        }
      },
      "profileHandler": {
        "id": "cmdViewProfile",
        "action": "viewProfile",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0CloseCommandPanelHandler": {
        "id": "Awp0CloseCommandPanel",
        "action": "closeCommandPanelAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "cmdShowObjectDevConfigCommandHandler": {
        "id": "cmdShowObjectDevConfig",
        "action": "activateShowObjectDevConfigNavPanel",
        "activeWhen": {
          "condition": "conditions.cmdShowObjectDevConfigCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdShowObjectDevConfigCommandActive"
        }
      },
      "cmdQuickAccessHandler": {
        "id": "cmdQuickAccess",
        "action": "quickAccessAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0GoHomeCommandHandler": {
        "id": "Awp0GoHome",
        "action": "goHome",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.goHomeVisibility"
        }
      },
      "Awp0SignOutCommandHandler": {
        "id": "Awp0SignOut",
        "action": "signOut",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.signOutVisibility"
        }
      },
      "Awp0FullScreenHandler": {
        "id": "Awp0FullScreen",
        "action": "Awp0FullScreenAction",
        "activeWhen": {
          "condition": "conditions.Awp0FullScreenCmdCondition"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0FullScreenCmdCondition"
        }
      },
      "Awp0ExitFullScreenHandler": {
        "id": "Awp0ExitFullScreen",
        "action": "Awp0FullScreenAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ExitFullScreenCmdCondition"
        }
      },
      "Awp0CutCommandHandler": {
        "id": "Awp0Cut",
        "action": "cutConfiguredRevs",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.cutVisibility"
        }
      },
      "Awp0CutContextMenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "action": "cutConfiguredRevs",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cutVisibility"
        }
      },
      "Fnd0TableRowCutCommandHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.tablePropertyRowSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Fnd0TableRowCutCtxMenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.tablePropertyRowSelected"
        },
        "visibleWhen": false
      },
      "checkoutHandler": {
        "id": "Awp0Checkout",
        "action": "isDirty",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.checkoutVisibility"
        }
      },
      "checkinHandler": {
        "id": "Awp0Checkin",
        "action": "checkEditInProgressBeforeCheckin",
        "activeWhen": {
          "condition": "conditions.checkSelections"
        },
        "visibleWhen": {
          "condition": "conditions.checkinVisibility"
        }
      },
      "redLineModeHandler": {
        "id": "Awp0RedLineMode",
        "action": "handleRedLineMode",
        "activeWhen": {
          "condition": "conditions.isRedLineFeatureEnabled"
        },
        "visibleWhen": {
          "condition": "conditions.isRedLineCmdVisible"
        },
        "selectWhen": {
          "condition": "conditions.isDisableRedLineCmdVisible"
        }
      },
      "cancelCheckoutHandler": {
        "id": "Awp0CancelCheckout",
        "action": "getCancelCheckoutInputs",
        "activeWhen": {
          "condition": "conditions.checkSelections"
        },
        "visibleWhen": {
          "condition": "conditions.cancelCheckoutVisibility"
        }
      },
      "saveAsorReviseHandler": {
        "id": "Awp0ShowSaveAs",
        "action": "saveAsorReviseContext",
        "activeWhen": {
          "condition": "conditions.saveAsorRevise"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.saveAsorRevise"
        }
      },
      "saveAsOnlyHandler": {
        "id": "Awp0ShowSaveAsOnly",
        "action": "saveAsOnlyContext",
        "activeWhen": {
          "condition": "conditions.saveAsorRevise"
        },
        "visibleWhen": false,
        "enableWhen": {
          "condition": "conditions.saveAsorRevise"
        }
      },
      "reviseHandler": {
        "id": "Awp0ShowRevise",
        "action": "reviseContext",
        "activeWhen": {
          "condition": "conditions.saveAsorRevise"
        },
        "visibleWhen": false,
        "enableWhen": {
          "condition": "conditions.saveAsorRevise"
        }
      },
      "Awp0ShowObjectCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "showObject",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdOpenBaseVisibleCondition"
        }
      },
      "Awp0ShowObjectFromCommandArgsCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "showObjectFromCommandArgs",
        "activeWhen": {
          "condition": "conditions.cmdOpenFromCommandArgsActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.cmdOpenBaseVisibleCondition"
        }
      },
      "Awp0OpenInRACCommndHandler": {
        "id": "Awp0OpenInRAC",
        "action": "Awp0OpenInRACCommndAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0OpenInRACCommandCondition"
        }
      },
      "Awp0OpenTabCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "openInNewTab",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdOpenInNewTabCommandActive"
        }
      },
      "Awp0OpenWindowCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "openInNewWindow",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdOpenInNewWindowCommandActive"
        }
      },
      "Awp0ShareURLCommandHandler": {
        "id": "Awp0ShareURL",
        "action": "shareURL",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdShareURLCommandVisible"
        }
      },
      "Awp0ShowObjectCellHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "showHoveredObject",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition"
        }
      },
      "Awp0ShowObjectCellForObjectNavigationHandler": {
        "id": "Awp0ShowObjectCellForObjectNavigation",
        "action": "showHoveredObject",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition"
        }
      },
      "Awp0ShowObjectCellDatasetHandler": {
        "id": "Awp0ShowObjectCellDataset",
        "action": "getModelObjectFromCommandContextVmo",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellDatasetBaseVisibleCondition"
        }
      },
      "Awp0ViewFileCommandHandler": {
        "id": "Awp0ViewFile",
        "action": "checkIsDSMUsableForDownload",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdAwp0ViewFileBaseVisibleCondition"
        }
      },
      "Awp0NavigateObjectHandler": {
        "id": "Awp0NavigateObject",
        "action": "navigateHoveredFolder",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdNavigateObjectBaseVisibleCondition"
        }
      },
      "Awp0TablePropertyCreateCommandHandler": {
        "id": "Awp0TablePropertyCreate",
        "action": "createTableProperty",
        "activeWhen": {
          "condition": "conditions.cmdTablePropertyCreateActive"
        },
        "visibleWhen": true
      },
      "Awp0TablePropertyDuplicateCommandHandler": {
        "id": "Awp0TablePropertyDuplicate",
        "action": "duplicateTableProperty",
        "activeWhen": {
          "condition": "conditions.cmdTablePropertyDuplicateActive"
        },
        "visibleWhen": true
      },
      "Awp0TablePropertyRemoveCommandHandler": {
        "id": "Awp0TablePropertyRemove",
        "action": "removeTableProperty",
        "activeWhen": {
          "condition": "conditions.cmdTablePropertyRemoveActive"
        },
        "visibleWhen": true
      },
      "Awp0NameValueCreateXRTCommandHandler": {
        "id": "Awp0NameValueCreateXRT",
        "action": "createNameValuePropertyXRT",
        "activeWhen": {
          "condition": "conditions.cmdNameValuePropertyCreateActive"
        },
        "visibleWhen": true
      },
      "Awp0NameValueCreateCommandHandler": {
        "id": "Awp0NameValueCreate",
        "action": "createNameValueProperty",
        "activeWhen": true,
        "visibleWhen": false
      },
      "Awp0NameValueRemoveXRTCommandHandler": {
        "id": "Awp0NameValueRemoveXRT",
        "action": "removeNameValueProperty",
        "activeWhen": {
          "condition": "conditions.cmdNameValuePropertyRemoveActive"
        },
        "visibleWhen": true
      },
      "Awp0StartEditCommandHandler": {
        "id": "Awp0StartEdit",
        "action": "startEditSummary",
        "activeWhen": {
          "condition": "conditions.isStartEditAllowed"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isStartEditAllowed"
        }
      },
      "StartEditGroupCommandHandler": {
        "id": "StartEditGroupCommand",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isStartEditGroupCommandAllowed"
        },
        "visibleWhen": {
          "condition": "conditions.isStartEditGroupCommandAllowed"
        }
      },
      "Awp0StartEditSummaryCommandHandler": {
        "id": "Awp0StartEditSummary",
        "action": "startEditSummary",
        "activeWhen": {
          "condition": "conditions.isStartEditSummaryAllowed"
        },
        "visibleWhen": {
          "condition": "conditions.isStartEditSummaryAllowed"
        }
      },
      "Awp0StartEditTableCommandHandler": {
        "id": "Awp0StartEditTable",
        "action": "startEditTable",
        "activeWhen": {
          "condition": "conditions.isStartEditTableAllowed"
        },
        "visibleWhen": {
          "condition": "conditions.isStartEditTableAllowed"
        }
      },
      "OpenGroupCommandHandler": {
        "id": "Awp0OpenGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "OpenGroupCommandHandlerFooter": {
        "id": "OpenGroupCommandFooter",
        "activeWhen": true
      },
      "Awp0ModelObjListDisplayTogglesHandler": {
        "id": "Awp0ModelObjListDisplayToggles",
        "activeWhen": true
      },
      "Awp0ShowImageViewHandler": {
        "id": "Awp0ShowImageView",
        "action": "switchToImageView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsImageView"
        },
        "selectWhen": {
          "condition": "conditions.isImageView"
        }
      },
      "Awp0ShowListViewHandler": {
        "id": "Awp0ShowListView",
        "action": "switchToListView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsListView"
        },
        "selectWhen": {
          "condition": "conditions.isListView"
        }
      },
      "Awp0ShowSummaryViewHandler": {
        "id": "Awp0ShowSummaryView",
        "action": "switchToSummaryView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsSummaryView"
        },
        "selectWhen": {
          "condition": "conditions.isSummaryView"
        }
      },
      "Awp0ShowTableSummaryViewHandler": {
        "id": "Awp0ShowTableSummaryView",
        "action": "switchToTableSummaryView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsTableSummaryView"
        },
        "selectWhen": {
          "condition": "conditions.isTableSummaryView"
        }
      },
      "Awp0ShowTableViewHandler": {
        "id": "Awp0ShowTableView",
        "action": "switchToTableView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsTableView"
        },
        "selectWhen": {
          "condition": "conditions.isTableView"
        }
      },
      "Awp0ShowTreeSummaryViewHandler": {
        "id": "Awp0ShowTreeSummaryView",
        "action": "switchToTreeSummaryView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsTreeSummaryView"
        },
        "selectWhen": {
          "condition": "conditions.isTreeSummaryView"
        }
      },
      "Awp0ShowTreeViewHandler": {
        "id": "Awp0ShowTreeView",
        "action": "switchToTreeView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsTreeView"
        },
        "selectWhen": {
          "condition": "conditions.isTreeView"
        }
      },
      "saveEditsHandler": {
        "id": "Awp0SaveEdits",
        "action": "saveEdits",
        "activeWhen": {
          "condition": "conditions.saveEditsCommandActive"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.saveEditsCommandActive"
        }
      },
      "saveEditsPWAHandler": {
        "id": "Awp0SaveEditsPWA",
        "action": "saveEdits",
        "activeWhen": {
          "condition": "conditions.saveEditsPWACommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.saveEditsPWACommandActive"
        },
        "enableWhen": {
          "condition": "conditions.saveEditsPWACommandActive"
        }
      },
      "cancelEditsHandler": {
        "id": "Awp0CancelEdits",
        "action": "isDirtyOnCancelEdits",
        "activeWhen": {
          "condition": "conditions.cancelEditsCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.cancelEditsCommandActive"
        }
      },
      "cancelEditsPWAHandler": {
        "id": "Awp0CancelEditsPWA",
        "action": "isDirtyOnCancelEdits",
        "activeWhen": {
          "condition": "conditions.cancelEditsPWACommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.cancelEditsPWACommandActive"
        },
        "enableWhen": {
          "condition": "conditions.cancelEditsPWACommandActive"
        }
      },
      "Awp0CommandLabelToggleCommandHandler": {
        "id": "Awp0CommandLabelToggle",
        "action": "toggleCommandLabels",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.isLabelShown"
        }
      },
      "Awp0ObjectInfoCommandHandler": {
        "id": "Awp0ObjectInfo",
        "action": "Awp0ObjectInfoCommandAction",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.cmdObjectInfoActive"
        },
        "visibleWhen": true
      },
      "Awp0AddReferenceCommandHandler": {
        "id": "Awp0AddReference",
        "activeWhen": true,
        "visibleWhen": false
      },
      "Awp0AddProfilePictureHandler": {
        "id": "Awp0AddProfilePicture",
        "action": "addProfilePicture",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.addProfilePictureVisibility"
        }
      },
      "Awp0ChangePasswordCommandHandler": {
        "id": "Awp0ChangePassword",
        "action": "Awp0ChangePasswordCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0ChangePasswordCommandCondition"
        }
      },
      "Awp0SelectAllHandler": {
        "id": "Awp0SelectAll",
        "action": "Awp0SelectAllCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0SelectAllCondition"
        }
      },
      "Awp0DeselectAllHandler": {
        "id": "Awp0DeselectAll",
        "action": "Awp0DeselectAllCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0DeselectAllCondition"
        }
      },
      "Awp0SelectAllObjectSetHandler": {
        "id": "Awp0SelectAllObjectSet",
        "action": "Awp0SelectAllObjectSetCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0SelectAllObjectSetCondition"
        }
      },
      "Awp0DeselectAllObjectSetHandler": {
        "id": "Awp0DeselectAllObjectSet",
        "action": "Awp0DeselectAllObjectSetCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0DeselectAllObjectSetCondition"
        }
      },
      "Awp0EnableMultiSelectObjectSetHandler": {
        "id": "Awp0EnableMultiSelectObjectSet",
        "action": "Awp0EnableMultiSelectObjectSetCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0MultiSelectObjectSetEnableCondition"
        }
      },
      "Awp0DisableMultiSelectObjectSetHandler": {
        "id": "Awp0DisableMultiSelectObjectSet",
        "action": "Awp0DisableMultiSelectObjectSetCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0MultiSelectObjectSetDisableCondition"
        },
        "selectWhen": true
      },
      "Awp0EnableMultiSelectHandler": {
        "id": "Awp0EnableMultiSelect",
        "action": "Awp0EnableMultiSelectCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0MultiSelectEnableCondition"
        }
      },
      "Awp0DisableMultiSelectHandler": {
        "id": "Awp0DisableMultiSelect",
        "action": "Awp0DisableMultiSelectCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0MultiSelectDisableCondition"
        },
        "selectWhen": true
      },
      "Awp0ShowCreateObjectHandler": {
        "id": "Awp0ShowCreateObject",
        "action": "registerAddContext",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.checkFolderSelected"
        }
      },
      "Awp0ShowAddObjectHandler": {
        "id": "Awp0ShowAddObject",
        "action": "registerAddToContext",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.xrtIncludeAddCommand"
        },
        "selectWhen": {
          "condition": "conditions.isAddToOpenForCurrentObjectSet"
        }
      },
      "Awp0ShowAddObjectHandlerForObjectset": {
        "id": "Awp0ShowAddObject",
        "action": "registerAddToContext",
        "activeWhen": {
          "condition": "conditions.xrtIncludeAddCommandDCP"
        },
        "visibleWhen": false
      },
      "Awp0DeleteCommandHandler": {
        "id": "Awp0Delete",
        "action": "Awp0DeleteCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0DeleteCommandConditionVisible"
        }
      },
      "Awp0ExportDeleteCommandHandler": {
        "id": "Awp0ExportDelete",
        "action": "Awp0ExportDeleteCommandAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0CopyCommandHandler": {
        "id": "Awp0Copy",
        "action": "copyObject",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.cmdCopyCommandVisible"
        }
      },
      "Awp0CopyContextMenuCommandHandler": {
        "id": "Awp0CopyContextMenu",
        "action": "copyObject",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdCopyCommandVisible"
        }
      },
      "Awp0CopyDownloadLinkCommandHandler": {
        "id": "Awp0CopyDownloadLink",
        "action": "prepareAndCopyDatasetDownloadURL",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.cmdCopyFileDwnldLinkCmdVisible"
        },
        "enableWhen": {
          "condition": "conditions.cmdCopyFileDwnldLinkCmdVisible"
        }
      },
      "Fnd0TableRowCopyCommandHandler": {
        "id": "Awp0Copy",
        "activeWhen": {
          "condition": "conditions.tablePropertyRowSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Fnd0TableRowCopyCtxMenuCommandHandler": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.tablePropertyRowSelected"
        },
        "visibleWhen": false
      },
      "arrangeShowAllCommandHandler": {
        "id": "arrangeShowAll",
        "action": "arrangeShowAll",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.arrangeShowAllEnable"
        },
        "visibleWhen": {
          "condition": "conditions.arrangeShowAllVisible"
        },
        "selectWhen": {
          "condition": "conditions.arrangeShowAllSelected"
        }
      },
      "arrangeResetCommandHandler": {
        "id": "arrangeReset",
        "action": "arrangeReset",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.arrangeResetVisible"
        }
      },
      "arrangeMoveUpCommandHandler": {
        "id": "arrangeMoveUp",
        "action": "arrangeMoveUp",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.arrangeMoveUpEnable"
        }
      },
      "arrangeMoveDownCommandHandler": {
        "id": "arrangeMoveDown",
        "action": "arrangeMoveDown",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.arrangeMoveDownEnable"
        }
      },
      "arrangeAddColumnsCommandHandler": {
        "id": "arrangeAddColumns",
        "action": "arrangeAddColumns",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.arrangeAddColumnsEnable"
        }
      },
      "arrangeRemoveColumnsCommandHandler": {
        "id": "arrangeRemoveColumns",
        "action": "arrangeRemoveColumns",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.arrangeRemoveColumnsEnable"
        }
      },
      "arrangeViewConfigsCommandHandler": {
        "id": "arrangeViewConfigs",
        "action": "arrangeViewConfigs",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "deleteNamedColumnConfigCommandHandler": {
        "id": "deleteNamedColumnConfig",
        "action": "deleteNamedColumnConfigCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.deleteNamedColumnConfigVisible"
        }
      },
      "Awp0ChangeOwnerHandler": {
        "id": "Awp0ChangeOwner",
        "action": "openChangeOwnerPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ChangeOwnerVisibleCondition"
        }
      },
      "Awp0PasteHandler": {
        "id": "Awp0Paste",
        "action": "pasteContentsFromClipboard",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.awp0PasteVisibleCondition"
        }
      },
      "Awp0PasteContextMenuCmdHandler": {
        "id": "Awp0PasteContextMenu",
        "action": "pasteContentsFromClipboard",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0PasteContextMenuVisibleCondition"
        }
      },
      "Fnd0TableRowPasteHandler": {
        "id": "Awp0Paste",
        "activeWhen": {
          "condition": "conditions.tablePropertyRowSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Fnd0TableRowPasteCtxMenuHandler": {
        "id": "Awp0PasteContextMenu",
        "activeWhen": {
          "condition": "conditions.tablePropertyRowSelected"
        },
        "visibleWhen": false
      },
      "Awp0PasteObjectSetHandler": {
        "id": "Awp0Paste",
        "action": "getModelTypeRelationForPaste",
        "activeWhen": {
          "condition": "conditions.awp0PasteToObjectSetActiveCondition"
        },
        "enableWhen": {
          "condition": "conditions.awp0PasteToObjectSetVisibleCondition"
        },
        "visibleWhen": true
      },
      "Awp0PasteContextMenuObjectSetHandler": {
        "id": "Awp0PasteContextMenu",
        "action": "getModelTypeRelationForPaste",
        "activeWhen": {
          "condition": "conditions.awp0PasteToObjectSetActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awp0PasteToObjectSetVisibleCondition"
        }
      },
      "Awp0PasteObjectSetDCPHandler": {
        "id": "Awp0Paste",
        "action": "getModelTypeRelationForPaste",
        "activeWhen": {
          "condition": "conditions.awp0PasteToObjectSetDCPActiveCondition"
        },
        "visibleWhen": false
      },
      "Awp0PasteContextMenuObjectSetDCPHandler": {
        "id": "Awp0PasteContextMenu",
        "action": "getModelTypeRelationForPaste",
        "activeWhen": {
          "condition": "conditions.awp0PasteToObjectSetDCPActiveCondition"
        },
        "visibleWhen": false
      },
      "Awp0ExportToExcelHandler": {
        "id": "Awp0ExportToExcel",
        "action": "activateExportToExcelPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0ExportToExcelVisibleCondition"
        },
        "selectWhen": {
          "condition": "conditions.isExportToExcelForCurrentObjectSet"
        }
      },
      "Awp0ExportSelectedColumnsAddHandler": {
        "id": "Awp0ExportSelectedColumnsAdd",
        "action": "exportSelectedColumnsAddPanelAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0MoveUpExcelColumnHandler": {
        "id": "Awp0MoveUpExcelColumn",
        "action": "exportMoveUp",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.exportVisibleMoveUpColumn"
        }
      },
      "Awp0MoveDownExcelColumnHandler": {
        "id": "Awp0MoveDownExcelColumn",
        "action": "exportMoveDown",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.exportVisibleMoveDownColumn"
        }
      },
      "Awp0ShowCompactLayoutHandler": {
        "id": "Awp0ShowCompactLayout",
        "action": "setCompactLayout",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.isCompactLayout"
        }
      },
      "Awp0ShowComfyLayoutHandler": {
        "id": "Awp0ShowComfyLayout",
        "action": "setComfyLayout",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.isComfyLayout"
        }
      },
      "Awp0EditGroupCommandHandler": {
        "id": "Awp0EditGroup",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awp0ManageGroupCommandHandler": {
        "id": "Awp0ManageGroup",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awp0NewGroupCommandHandler": {
        "id": "Awp0NewGroup",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awp0ShareGroupCommandHandler": {
        "id": "Awp0ShareGroup",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awp0ViewGroupCommandHandler": {
        "id": "Awp0ViewGroup",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awp0GoFavoritesHandler": {
        "id": "Awp0GoFavorites",
        "action": "showFavorites",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0HelpHandler": {
        "id": "Awp0Help",
        "action": "showHelp",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0HelpAboutHandler": {
        "id": "Awp0HelpAbout",
        "action": "showHelpAbout",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0ShowObjectCellTitleHandler": {
        "id": "Awp0ShowObjectCellTitle",
        "action": "showHoveredObject",
        "activeWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition"
        }
      },
      "Awp0ShowObjectCellTitleDatasetHandler": {
        "id": "Awp0ShowObjectCellTitle",
        "action": "getModelObjectFromCommandContextVmo",
        "activeWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellDatasetBaseVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.cmdAwp0ShowObjectCellDatasetBaseVisibleCondition"
        }
      },
      "Awp0OpenInNewTabCellTitleCommandHandler": {
        "id": "Awp0OpenInNewTabCellTitle",
        "action": "openInNewTabCellTitle",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0OpenInNewWindowCellTitleCommandHandler": {
        "id": "Awp0OpenInNewWindowCellTitle",
        "action": "openInNewWindowCellTitle",
        "activeWhen": true,
        "visibleWhen": true
      },
      "openArrangePanelCommandHandler": {
        "id": "openArrangePanel",
        "action": "processArrangeSettings",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isOpenArrangePanelEnabled"
        },
        "visibleWhen": {
          "condition": "conditions.isOpenArrangePanelVisible"
        }
      },
      "Awp0AddorRemoveLocalesHandler": {
        "id": "Awp0AddorRemoveLocales",
        "action": "addorRemoveLocalesAction",
        "activeWhen": true,
        "enableWhen": true,
        "visibleWhen": true
      },
      "Awp0RemoveLocaleHandler": {
        "id": "Awp0RemoveLocale",
        "action": "removeLocaleAction",
        "activeWhen": true,
        "enableWhen": true,
        "visibleWhen": true
      },
      "Awp0EditLocalizationSingleHandler": {
        "id": "Awp0EditLocalizationSingle",
        "action": "isDirtyOnEditLocalization",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isPropertyLocalizable"
        },
        "visibleWhen": {
          "condition": "conditions.isPropertyLocalizable"
        }
      },
      "removeProjCellCommandHandler": {
        "id": "Awp0RemoveProjectsCell",
        "action": "removeProjectCellCmdAction",
        "activeWhen": {
          "condition": "conditions.removeProjectsCmdCond"
        },
        "visibleWhen": {
          "condition": "conditions.removeProjectsCmdCond"
        }
      },
      "uvCheckoutHandler": {
        "id": "uvCheckout",
        "action": "preCheckoutViewer",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.uvCheckoutCmdCondition"
        }
      },
      "uvCancelCheckoutHandler": {
        "id": "uvCancelCheckout",
        "action": "preCancelCheckoutViewer",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.uvCancelCheckoutCmdCondition"
        }
      },
      "uvCheckinHandler": {
        "id": "uvCheckin",
        "action": "preCheckinViewer",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.uvCheckinCmdCondition"
        }
      },
      "fullViewModeHandler": {
        "id": "fullViewMode",
        "action": "fullViewModeAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.fullViewModeCmdCondition"
        }
      },
      "uvWordWrapHandler": {
        "id": "uvWordWrap",
        "action": "uvWordWrapAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.uvWordWrapCmdVisible"
        },
        "selectWhen": {
          "condition": "conditions.uvWordWrapCmdSelected"
        }
      },
      "Awp0ShowObjectForUVCommandHandler": {
        "id": "Awp0ShowObjectForUV",
        "action": "showDataSetForUV",
        "activeWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        }
      },
      "Awp0ViewFileForUVCommandHandler": {
        "id": "Awp0ViewFileForUV",
        "action": "getModelObjectFromVMOForUV",
        "activeWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        }
      },
      "Awp0OpenInNewWindowForUVCommandHandler": {
        "id": "Awp0OpenInNewWindowForUV",
        "action": "openInNewWindowForUV",
        "activeWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        }
      },
      "Awp0OpenInNewTabForUVCommandHandler": {
        "id": "Awp0OpenInNewTabForUV",
        "action": "openInNewTabForUV",
        "activeWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.universalViewerPopupCommandsActive"
        }
      },
      "objectSetListViewMode": {
        "id": "objectSetListViewMode",
        "action": "changeObjectSetListView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.objectSetSupportsListView"
        },
        "selectWhen": {
          "condition": "conditions.isObjectSetListView"
        }
      },
      "objectSetTableViewMode": {
        "id": "objectSetTableViewMode",
        "action": "changeObjectSetTableView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.objectSetSupportsTableView"
        },
        "selectWhen": {
          "condition": "conditions.isObjectSetTableView"
        }
      },
      "objectSetCompareViewMode": {
        "id": "objectSetCompareViewMode",
        "action": "changeObjectSetCompareView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.objectSetSupportsCompareView"
        },
        "selectWhen": {
          "condition": "conditions.isObjectSetCompareView"
        }
      },
      "objectSetImageViewMode": {
        "id": "objectSetImageViewMode",
        "action": "changeObjectSetImageView",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.objectSetSupportsImageView"
        },
        "selectWhen": {
          "condition": "conditions.isObjectSetImageView"
        }
      },
      "ShowObjectTablePropertyHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "showHoveredObject",
        "activeWhen": {
          "condition": "conditions.showObjectTablePropertyActive"
        },
        "visibleWhen": false
      },
      "GcShowStartEditHandler": {
        "id": "GcStartEdit",
        "action": "startEdit",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isGcStartEditCommandVisible"
        }
      },
      "GcShowExitEditHandler": {
        "id": "GcExitEdit",
        "action": "exitEdit",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isGcExitEditCommandVisible"
        }
      },
      "GcShowLegendHandler": {
        "id": "graphLegend",
        "action": "GcShowLegendPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isGcVisibleLegend"
        }
      },
      "GcLayoutCommandGroupHandler": {
        "id": "GcLayoutCommandGroup",
        "activeWhen": true,
        "selectWhen": {
          "condition": "conditions.cmdGcLayoutCommandGroupSelected"
        }
      },
      "GcTopToBottomLayoutHandler": {
        "id": "GcTopToBottomLayout",
        "action": "setActiveLayoutAsTopToBottom",
        "activeWhen": {
          "condition": "conditions.cmdGcTopToBottomLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcTopToBottomLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcTopToBottomLayoutSelected"
        }
      },
      "GcRightToLeftLayoutHandler": {
        "id": "GcRightToLeftLayout",
        "action": "setActiveLayoutAsRightToLeft",
        "activeWhen": {
          "condition": "conditions.cmdGcRightToLeftLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcRightToLeftLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcRightToLeftLayoutSelected"
        }
      },
      "GcLeftToRightLayoutHandler": {
        "id": "GcLeftToRightLayout",
        "action": "setActiveLayoutAsLeftToRight",
        "activeWhen": {
          "condition": "conditions.cmdGcRightToLeftLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcLeftToRightLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcLeftToRightLayoutSelected"
        }
      },
      "GcBottomToTopLayoutHandler": {
        "id": "GcBottomToTopLayout",
        "action": "setActiveLayoutAsBottomToTop",
        "activeWhen": {
          "condition": "conditions.cmdGcBottomToTopLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcBottomToTopLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcBottomToTopLayoutSelected"
        }
      },
      "GcOrganicLayoutHandler": {
        "id": "GcOrganicLayout",
        "action": "setActiveLayoutAsOrganic",
        "activeWhen": {
          "condition": "conditions.cmdGcOrganicLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcOrganicLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcOrganicLayoutSelected"
        }
      },
      "GcBalloonLayoutHandler": {
        "id": "GcBalloonLayout",
        "action": "setActiveLayoutAsBalloon",
        "activeWhen": {
          "condition": "conditions.cmdGcBalloonLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcBalloonLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcBalloonLayoutSelected"
        }
      },
      "GcSnakeLayoutHandler": {
        "id": "GcSnakeLayout",
        "action": "setActiveLayoutAsSnake",
        "activeWhen": {
          "condition": "conditions.cmdGcSnakeLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcSnakeLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcSnakeLayoutSelected"
        }
      },
      "GcIncrementalLayoutHandler": {
        "id": "GcIncrementalLayout",
        "action": "setActiveLayoutAsIncremental",
        "activeWhen": {
          "condition": "conditions.cmdGcIncrementalLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdGcIncrementalLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdGcIncrementalLayoutSelected"
        }
      },
      "UseTransparencyOnCommandHandler": {
        "id": "Awv0UseTransparency",
        "action": "toggleUseTransparency",
        "activeWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        },
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.useTransparencySelectionDisplay"
        },
        "enableWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        }
      },
      "MeasurementFilterGroupCommandHandler": {
        "id": "MeasurementFilterGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "ViewNavigationGroupCommandHandler": {
        "id": "ViewNavigationGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "SetNavigationRotateCommandHandler": {
        "id": "Awv0Rotate",
        "action": "setNavigationModeRotate",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        },
        "selectWhen": {
          "condition": "conditions.isRotate"
        }
      },
      "SetNavigationPanCommandHandler": {
        "id": "Awv0Pan",
        "action": "setNavigationModePan",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        },
        "selectWhen": {
          "condition": "conditions.isPan"
        }
      },
      "SetStructureCompViewerNavigationPanCommandHandler": {
        "id": "Awv0Pan",
        "action": "setStructureCompViewerNavigationModePan",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isStructureCompViewerRevealedAndIn3DMode"
        },
        "selectWhen": {
          "condition": "conditions.isStructureCompViewerPan"
        }
      },
      "SetNavigationZoomCommandHandler": {
        "id": "Awv0Zoom",
        "action": "setNavigationModeZoom",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        },
        "selectWhen": {
          "condition": "conditions.isZoom"
        }
      },
      "SetAreaSelectCommandHandler": {
        "id": "Awv0AreaSelect",
        "action": "setNavigationModeAreaSelect",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        },
        "selectWhen": {
          "condition": "conditions.isAreaSelect"
        },
        "enableWhen": {
          "condition": "conditions.isMMVDisabledForView"
        }
      },
      "UvViewNavigationGroupCommandHandler": {
        "id": "UvViewNavigationGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "UvSetNavigationRotateCommandHandler": {
        "id": "Awv0UvRotate",
        "action": "setUvNavigationModeRotate",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvSetNavigationPanCommandHandler": {
        "id": "Awv0UvPan",
        "action": "setUvNavigationModePan",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvSetNavigationZoomCommandHandler": {
        "id": "Awv0UvZoom",
        "action": "setUvNavigationModeZoom",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "Awv0ViewerSettingsCommandHandler": {
        "id": "Awv0ViewerSettings",
        "action": "showAwv0ViewerSettingsPanel",
        "activeWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode"
        }
      },
      "viewOrientationCommandHandler": {
        "id": "Awv0ViewOrientationGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "orientIsometricCommandHandler": {
        "id": "Awv0OrientIsometric",
        "action": "executeOrientIsometricCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientTrimetricCommandHandler ": {
        "id": "Awv0OrientTrimetric",
        "action": "executeOrientTrimetricCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientTopCommandHandler": {
        "id": "Awv0OrientTop",
        "action": "executeOrientTopCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientFrontCommandHandler": {
        "id": "Awv0OrientFront",
        "action": "executeOrientFrontCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientRightCommandHandler": {
        "id": "Awv0OrientRight",
        "action": "executeOrientRightCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientBackCommandHandler": {
        "id": "Awv0OrientBack",
        "action": "executeOrientBackCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientBottomCommandHandler": {
        "id": "Awv0OrientBottom",
        "action": "executeOrientBottomCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "orientLeftCommandHandler": {
        "id": "Awv0OrientLeft",
        "action": "executeOrientLeftCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility"
        }
      },
      "UvviewOrientationCommandHandler": {
        "id": "UvAwv0ViewOrientationGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "UvorientIsometricCommandHandler": {
        "id": "UvAwv0OrientIsometric",
        "action": "UvexecuteOrientIsometricCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientTrimetricCommandHandler ": {
        "id": "UvAwv0OrientTrimetric",
        "action": "UvexecuteOrientTrimetricCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientTopCommandHandler": {
        "id": "UvAwv0OrientTop",
        "action": "UvexecuteOrientTopCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientFrontCommandHandler": {
        "id": "UvAwv0OrientFront",
        "action": "UvexecuteOrientFrontCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientRightCommandHandler": {
        "id": "UvAwv0OrientRight",
        "action": "UvexecuteOrientRightCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientBackCommandHandler": {
        "id": "UvAwv0OrientBack",
        "action": "UvexecuteOrientBackCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientBottomCommandHandler": {
        "id": "UvAwv0OrientBottom",
        "action": "UvexecuteOrientBottomCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "UvorientLeftCommandHandler": {
        "id": "UvAwv0OrientLeft",
        "action": "UvexecuteOrientLeftCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
        }
      },
      "viewerConvenienceCommandHandler": {
        "id": "Awv0ViewerConvenienceCommandGroup",
        "activeWhen": true,
        "visibleWhen": true
      },
      "allOnCommandHandler": {
        "id": "Awv0AllOn",
        "action": "executeAllOnCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.allOnCommandVisibility"
        }
      },
      "allOffCommandHandler": {
        "id": "Awv0AllOff",
        "action": "executeAllOffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.allOffCommandVisibility"
        }
      },
      "selectedOffCommandHandler": {
        "id": "Awv0SelectedOff",
        "action": "executeSelectedOffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectedOffCommandVisibility"
        }
      },
      "selectedOnCommandHandler": {
        "id": "Awv0SelectedOn",
        "action": "executeSelectedOnCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectedOnCommandVisibility"
        }
      },
      "selectedOnlyCommandHandler": {
        "id": "Awv0SelectedOnly",
        "action": "executeSelectedOnlyCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectedOnlyCommandVisibility"
        }
      },
      "contextOffCommandHandler": {
        "id": "Awv0ContextOff",
        "action": "executeContextOffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.contextOffCommandVisibility"
        }
      },
      "contextOnCommandHandler": {
        "id": "Awv0ContextOn",
        "action": "executeContextOnCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.contextOnCommandVisibility"
        }
      },
      "contextOnlyCommandHandler": {
        "id": "Awv0ContextOnly",
        "action": "executeContextOnlyCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.contextOnlyCommandVisibility"
        }
      },
      "selectContextCommandHandler": {
        "id": "Awv0SelectContext",
        "action": "executeSelectContextCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectContextCommandVisibility"
        }
      },
      "removeAnalysisResultCommandHandler": {
        "id": "Awv0RemoveAnalysisResult",
        "action": "confirmRemoveAnalysisResult",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.removeAnalysisResultCommandVisibility"
        }
      },
      "fitCommandHandler": {
        "id": "Awv0Fit",
        "action": "executeFitCommand",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.fitCommandVisibility"
        }
      },
      "UseTransparencyOnCommandHandler_scv": {
        "id": "Awv0UseTransparency_scv",
        "action": "toggleUseTransparency_scv",
        "activeWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        },
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.useTransparencySelectionDisplay_scv"
        },
        "enableWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        }
      },
      "MeasurementFilterGroupCommandHandler_scv": {
        "id": "MeasurementFilterGroup_scv",
        "activeWhen": true,
        "visibleWhen": true
      },
      "ViewNavigationGroupCommandHandler_scv": {
        "id": "ViewNavigationGroup_scv",
        "activeWhen": true,
        "visibleWhen": true
      },
      "SetNavigationRotateCommandHandler_scv": {
        "id": "Awv0Rotate_scv",
        "action": "setNavigationModeRotate_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        },
        "selectWhen": {
          "condition": "conditions.isRotate_scv"
        }
      },
      "SetNavigationPanCommandHandler_scv": {
        "id": "Awv0Pan_scv",
        "action": "setNavigationModePan_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        },
        "selectWhen": {
          "condition": "conditions.isPan_scv"
        }
      },
      "SetNavigationZoomCommandHandler_scv": {
        "id": "Awv0Zoom_scv",
        "action": "setNavigationModeZoom_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        },
        "selectWhen": {
          "condition": "conditions.isZoom_scv"
        }
      },
      "SetAreaSelectCommandHandler_scv": {
        "id": "Awv0AreaSelect_scv",
        "action": "setNavigationModeAreaSelect_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        },
        "selectWhen": {
          "condition": "conditions.isAreaSelect_scv"
        },
        "enableWhen": {
          "condition": "conditions.isMMVDisabledForView_scv"
        }
      },
      "Awv0ViewerSettingsCommandHandler_scv": {
        "id": "Awv0ViewerSettings_scv",
        "action": "showAwv0ViewerSettingsPanel_scv",
        "activeWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isViewerRevealedAndIn3DMode_scv"
        }
      },
      "viewOrientationCommandHandler_scv": {
        "id": "Awv0ViewOrientationGroup_scv",
        "activeWhen": true,
        "visibleWhen": true
      },
      "orientIsometricCommandHandler_scv": {
        "id": "Awv0OrientIsometric_scv",
        "action": "executeOrientIsometricCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientTrimetricCommandHandler_scv": {
        "id": "Awv0OrientTrimetric_scv",
        "action": "executeOrientTrimetricCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientTopCommandHandler_scv": {
        "id": "Awv0OrientTop_scv",
        "action": "executeOrientTopCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientFrontCommandHandler_scv": {
        "id": "Awv0OrientFront_scv",
        "action": "executeOrientFrontCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientRightCommandHandler_scv": {
        "id": "Awv0OrientRight_scv",
        "action": "executeOrientRightCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientBackCommandHandler_scv": {
        "id": "Awv0OrientBack_scv",
        "action": "executeOrientBackCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientBottomCommandHandler_scv": {
        "id": "Awv0OrientBottom_scv",
        "action": "executeOrientBottomCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "orientLeftCommandHandler_scv": {
        "id": "Awv0OrientLeft_scv",
        "action": "executeOrientLeftCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.viewOrientationCommandVisibility_scv"
        }
      },
      "viewerConvenienceCommandHandler_scv": {
        "id": "Awv0ViewerConvenienceCommandGroup_scv",
        "activeWhen": true,
        "visibleWhen": true
      },
      "allOnCommandHandler_scv": {
        "id": "Awv0AllOn_scv",
        "action": "executeAllOnCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.allOnCommandVisibility_scv"
        }
      },
      "allOffCommandHandler_scv": {
        "id": "Awv0AllOff_scv",
        "action": "executeAllOffCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.allOffCommandVisibility_scv"
        }
      },
      "selectedOffCommandHandler_scv": {
        "id": "Awv0SelectedOff_scv",
        "action": "executeSelectedOffCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectedOffCommandVisibility_scv"
        }
      },
      "selectedOnCommandHandler_scv": {
        "id": "Awv0SelectedOn_scv",
        "action": "executeSelectedOnCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectedOnCommandVisibility_scv"
        }
      },
      "selectedOnlyCommandHandler_scv": {
        "id": "Awv0SelectedOnly_scv",
        "action": "executeSelectedOnlyCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectedOnlyCommandVisibility_scv"
        }
      },
      "contextOffCommandHandler_scv": {
        "id": "Awv0ContextOff_scv",
        "action": "executeContextOffCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.contextOffCommandVisibility_scv"
        }
      },
      "contextOnCommandHandler_scv": {
        "id": "Awv0ContextOn_scv",
        "action": "executeContextOnCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.contextOnCommandVisibility_scv"
        }
      },
      "contextOnlyCommandHandler_scv": {
        "id": "Awv0ContextOnly_scv",
        "action": "executeContextOnlyCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.contextOnlyCommandVisibility_scv"
        }
      },
      "selectContextCommandHandler_scv": {
        "id": "Awv0SelectContext_scv",
        "action": "executeSelectContextCommand_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.selectContextCommandVisibility_scv"
        }
      },
      "removeAnalysisResultCommandHandler_scv": {
        "id": "Awv0RemoveAnalysisResult_scv",
        "action": "confirmRemoveAnalysisResult_scv",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.removeAnalysisResultCommandVisibility_scv"
        }
      },
      "fitCommandHandler_scv": {
        "id": "Awv0Fit_scv",
        "action": "executeFitCommand_scv",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.fitCommandVisibility_scv"
        }
      },
      "awv0ShowMarkupsCommandHandler": {
        "id": "Awp0ShowMarkups",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupHighlightCommandHandler": {
        "id": "Awp0MarkupHighlight",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupFreehandCommandHandler": {
        "id": "Awp0MarkupFreehand",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupShapeCommandHandler": {
        "id": "Awp0MarkupShape",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupCommandHandler": {
        "id": "Awp0ShowMarkupPanel",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupRectangleCommandHandler": {
        "id": "Awp0MarkupRectangle",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupEllipseCommandHandler": {
        "id": "Awp0MarkupEllipse",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupArrowCommandHandler": {
        "id": "Awp0MarkupArrow",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupGdntCommandHandler": {
        "id": "Awp0MarkupGdnt",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupStampCommandHandler": {
        "id": "Awp0MarkupStamp",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "awv0MarkupPrintCommandHandler": {
        "id": "Awp0MarkupPrint",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "Awv0ShowObjectCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "showSnapShotViewData",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awv0OpenTabCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "openSnapShotViewDataInNewTab",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awv0OpenWindowCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "openSnapShotViewDataInNewWindow",
        "activeWhen": {
          "condition": "conditions.hasPVData"
        },
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awv0Close3DSubCommandsToolbarCommandHandler": {
        "id": "Awv0Close3DSubCommandsToolbar",
        "action": "close3DSubCommandsToolbar",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awv0Close3DSubCommandsToolbarCommandHandler_scv": {
        "id": "Awv0Close3DSubCommandsToolbar_scv",
        "action": "close3DSubCommandsToolbar",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "rotatePdfCWHandler": {
        "id": "rotateCW",
        "action": "rotatePdfCWAction",
        "activeWhen": {
          "condition": "conditions.rotatePdfActive"
        },
        "visibleWhen": {
          "condition": "conditions.rotateCmdVisible"
        }
      },
      "rotatePdfCCWHandler": {
        "id": "rotateCCW",
        "action": "rotatePdfCCWAction",
        "activeWhen": {
          "condition": "conditions.rotatePdfActive"
        },
        "visibleWhen": {
          "condition": "conditions.rotateCmdVisible"
        }
      },
      "rotateCWHandler": {
        "id": "rotateCW",
        "action": "rotateCWAction",
        "activeWhen": {
          "condition": "conditions.rotateImageActive"
        },
        "visibleWhen": {
          "condition": "conditions.rotateCmdVisible"
        }
      },
      "rotateCCWHandler": {
        "id": "rotateCCW",
        "action": "rotateCCWAction",
        "activeWhen": {
          "condition": "conditions.rotateImageActive"
        },
        "visibleWhen": {
          "condition": "conditions.rotateCmdVisible"
        }
      },
      "Awp0OpenVVICommandHandler": {
        "id": "Awp0OpenVVI",
        "action": "executeOpenInVisCommand",
        "activeWhen": {
          "condition": "conditions.Awp0OpenVVICmdCond"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0OpenVVICmdCond"
        }
      },
      "Awp0ShowHomeFolderCommandHandler": {
        "id": "Awp0ShowHomeFolder",
        "action": "getHomeFolderProperty",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.showHomeFolderVisibility"
        }
      },
      "Awp0UnPinObjectHandler": {
        "id": "Awp0UnPinObject",
        "action": "getUnPinInputs",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0UnPinObjectVisible"
        }
      },
      "Awp0PinObjectHandler": {
        "id": "Awp0PinObject",
        "action": "getPinInputs",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0PinObjectVisible"
        }
      },
      "removeAllFiltersCommandHandler": {
        "id": "removeAllFilters",
        "action": "removeAllFilters",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isRemoveAllFiltersEnabled"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveAllFiltersVisible"
        }
      },
      "toggleDynamicRowHeightCommandHandler": {
        "id": "toggleDynamicRowHeight",
        "action": "toggleDynamicRowHeight",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.toggleDynamicRowHeightEnabled"
        },
        "visibleWhen": {
          "condition": "conditions.toggleDynamicRowHeightVisible"
        },
        "selectWhen": {
          "condition": "conditions.toggleDynamicRowHeightSelected"
        }
      },
      "Awp0ChangeThemeHandler": {
        "id": "Awp0ChangeTheme",
        "activeWhen": true
      },
      "Awp0ShowLightThemeHandler": {
        "id": "Awp0ShowLightTheme",
        "action": "setLightTheme",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsLightTheme"
        },
        "selectWhen": {
          "condition": "conditions.isLightTheme"
        }
      },
      "Awp0ShowDarkThemeHandler": {
        "id": "Awp0ShowDarkTheme",
        "action": "setDarkTheme",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.supportsDarkTheme"
        },
        "selectWhen": {
          "condition": "conditions.isDarkTheme"
        }
      },
      "Awp0ColumnConfigHandler": {
        "id": "Awp0ColumnConfig",
        "action": "launchArrangePanel",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0TaskbarFullScreenHandler": {
        "id": "Awp0TaskbarFullScreen",
        "action": "Awp0TaskbarFullScreenToggleAction",
        "activeWhen": {
          "condition": "conditions.Awp0TaskbarFullScreenCmdCondition"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0TaskbarFullScreenCmdCondition"
        }
      },
      "Awp0TaskbarExitFullScreenHandler": {
        "id": "Awp0TaskbarExitFullScreen",
        "action": "Awp0TaskbarFullScreenToggleAction",
        "activeWhen": {
          "condition": "conditions.Awp0TaskbarExitFullScreenCmdCondition"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0TaskbarExitFullScreenCmdCondition"
        }
      },
      "Awp0GoBackHandler": {
        "id": "Awp0GoBack",
        "action": "goBack",
        "activeWhen": true,
        "visibleWhen": true
      },
      "addObjectPanelSetPinCommandHandler": {
        "id": "AddObjectPanelSetPin",
        "action": "addObjectPanelSetPin",
        "activeWhen": {
          "condition": "conditions.isAddObjectPanelPanelPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isAddObjectPanelPanelPinned"
        }
      },
      "addObjectPanelSetUnPinCommandHandler": {
        "id": "AddObjectPanelSetUnPin",
        "action": "addObjectPanelSetUnPin",
        "activeWhen": {
          "condition": "conditions.isAddObjectPanelPanelUnPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isAddObjectPanelPanelUnPinned"
        }
      },
      "uiwidgetAddcmdHandler": {
        "id": "uiwidgetAddcmd",
        "action": "uiwidgetAddActivateCmdPanel",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0ColumnConfigPreHandler": {
        "id": "Awp0ColumnConfigPre",
        "action": "openArrangePanel",
        "activeWhen": true,
        "visibleWhen": true
      }
    },
    "commandPlacements": {
      "DigitalAssetsPanel": {
        "id": "DigitalAssetsPanel",
        "uiAnchor": "aw_rightWall",
        "priority": 130,
        "parentGroupId": "Awp0ViewGroup"
      },
      "DigitalAssetsPanelFooterToolbar": {
        "id": "DigitalAssetsPanel",
        "uiAnchor": "aw_footer",
        "priority": 0.5
      },
      "ImagePanel": {
        "id": "ImagePanel",
        "uiAnchor": "aw_rightWall",
        "priority": 130,
        "parentGroupId": "Awp0ViewGroup"
      },
      "ImagePanelFooterToolbar": {
        "id": "ImagePanel",
        "uiAnchor": "aw_footer",
        "priority": 0.5
      },
      "cmdReplaceDigitalAssetPlacement": {
        "id": "cmdReplaceDigitalAsset",
        "uiAnchor": "adobe_cell_commands_updatesList",
        "priority": 200,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "cmdDeleteDigitalAssetPlacement": {
        "id": "cmdDeleteDigitalAsset",
        "uiAnchor": "adobe_cell_commands_inUseList",
        "priority": 200,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "showObjectCell1": {
        "id": "showObjectCell1",
        "uiAnchor": "adobe_cell_commands_updatesList",
        "priority": 100,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "showObjectCell2": {
        "id": "showObjectCell2",
        "uiAnchor": "adobe_cell_commands_inUseList",
        "priority": 100,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "OpenInIllustratorOneStep": {
        "id": "openInIllustrator",
        "uiAnchor": "aw_rightWall",
        "priority": 999,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0AddToFavoritesOnStep": {
        "id": "Awp0AddToFavorites",
        "uiAnchor": "aw_rightWall",
        "priority": 310,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0RemoveFromFavoritesOneStep": {
        "id": "Awp0RemoveFromFavorites",
        "uiAnchor": "aw_rightWall",
        "priority": 310,
        "parentGroupId": "Awp0ManageGroup"
      },
      "HostingSetRevisionRuleDisplay": {
        "id": "HostingSetRevisionRule",
        "uiAnchor": "none",
        "priority": 1
      },
      "Awp0OpenHosted-classic": {
        "id": "Awp0OpenHosted",
        "uiAnchor": "aw_oneStep",
        "parentGroupId": "Awp0OpenGroup",
        "priority": 50
      },
      "Awp0OpenHosted": {
        "id": "Awp0OpenHosted",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0OpenGroup",
        "priority": 20
      },
      "Awp0OpenNewViewHosted-classic": {
        "id": "Awp0OpenNewViewHosted",
        "uiAnchor": "aw_oneStep",
        "parentGroupId": "Awp0OpenGroup",
        "priority": 51
      },
      "Awp0OpenNewViewHosted": {
        "id": "Awp0OpenNewViewHosted",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0OpenGroup",
        "priority": 140
      },
      "Awp0AddComponentHosted-classic": {
        "id": "Awp0AddComponentHosted",
        "uiAnchor": "aw_oneStep",
        "parentGroupId": "Awp0OpenGroup",
        "priority": 52
      },
      "Awp0AddComponentHosted": {
        "id": "Awp0AddComponentHosted",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0NewGroup",
        "priority": 200
      },
      "inboxFilterNavigation": {
        "id": "Awp0ReplaceDataset",
        "uiAnchor": "aw_rightWall",
        "priority": 440,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0ShowFileVersionsPlacement": {
        "id": "Awp0ShowFileVersions",
        "parentGroupId": "Awp0ViewGroup",
        "priority": 680
      },
      "Awp0CreateAlternateIdPlacement": {
        "id": "Awp0CreateAlternateId",
        "uiAnchor": "aw_rightWall",
        "priority": 680,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0CreateAliasIdPlacement": {
        "id": "Awp0CreateAliasId",
        "uiAnchor": "aw_rightWall",
        "priority": 700,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0CreateDispRulePlacement": {
        "id": "Awp0CreateDispRule",
        "uiAnchor": "aw_rightWall",
        "priority": 690,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0IdDispRuleAdminInfoCommandPlacement": {
        "id": "Awp0IdDispRuleAdminInfo",
        "uiAnchor": "aw_iddisprule_cell_commands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "selected": true,
          "position": "MIDDLE_RIGHT"
        }
      },
      "Awp0CopyToolsAndInfo": {
        "id": "Awp0Copy",
        "uiAnchor": "aw_viewerCommands",
        "priority": 200
      },
      "cmdShowObjectDevConfigNavigationDisplay": {
        "id": "cmdShowObjectDevConfig",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 180
      },
      "cmdQuickAccessPlacementDisplay": {
        "id": "cmdQuickAccess",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 150
      },
      "Awp0StartEditToolsAndInfo": {
        "id": "Awp0StartEdit",
        "uiAnchor": "aw_staticToolsAndInfo",
        "priority": 50
      },
      "saveEditsToolsAndInfo": {
        "id": "Awp0SaveEdits",
        "uiAnchor": "aw_staticToolsAndInfo",
        "relativeTo": "Awp0CancelEdits",
        "priority": -1
      },
      "cancelEditsToolsAndInfo": {
        "id": "Awp0CancelEdits",
        "uiAnchor": "aw_staticToolsAndInfo",
        "relativeTo": "Awp0Checkout",
        "priority": -1
      },
      "Awp0ShowObjectToolsAndInfo": {
        "id": "Awp0ShowObject",
        "uiAnchor": "aw_staticToolsAndInfo",
        "priority": 1,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0PasteToolsAndInfo": {
        "id": "Awp0Paste",
        "uiAnchor": "aw_staticToolsAndInfo",
        "priority": 3
      },
      "cmdSignOutUserLink": {
        "id": "cmdSignOut",
        "uiAnchor": "aw_userLink",
        "priority": 20
      },
      "cmdViewProfileUserLink": {
        "id": "cmdViewProfile",
        "uiAnchor": "aw_userLink",
        "priority": 10
      },
      "Awp0CloseCommandPanelPlacement": {
        "id": "Awp0CloseCommandPanel",
        "uiAnchor": "aw_commandPanel",
        "priority": 50
      },
      "cmdShowObjectDevConfigNavigation": {
        "id": "cmdShowObjectDevConfig",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 180
      },
      "Awp0FullScreenPlacement": {
        "id": "Awp0FullScreen",
        "uiAnchor": "aw_toolbarRight",
        "priority": 1
      },
      "Awp0ExitFullScreenPlacement": {
        "id": "Awp0ExitFullScreen",
        "uiAnchor": "aw_toolbarRight",
        "priority": 1
      },
      "checkoutOneStep": {
        "id": "Awp0Checkout",
        "uiAnchor": "aw_rightWall",
        "priority": 200,
        "parentGroupId": "Awp0EditGroup"
      },
      "checkoutFooter": {
        "id": "Awp0Checkout",
        "uiAnchor": "aw_footer",
        "priority": 50
      },
      "checkinOneStep": {
        "id": "Awp0Checkin",
        "uiAnchor": "aw_rightWall",
        "priority": 220,
        "parentGroupId": "Awp0EditGroup"
      },
      "checkinFooter": {
        "id": "Awp0Checkin",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0SaveEdits",
        "priority": -1
      },
      "redLineModeOneStep": {
        "id": "Awp0RedLineMode",
        "uiAnchor": "aw_rightWall",
        "priority": 220,
        "parentGroupId": "Awp0ViewGroup"
      },
      "cancelCheckoutOneStep": {
        "id": "Awp0CancelCheckout",
        "uiAnchor": "aw_rightWall",
        "priority": 240,
        "parentGroupId": "Awp0EditGroup"
      },
      "cancelCheckoutFooter": {
        "id": "Awp0CancelCheckout",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0Checkin",
        "priority": 1
      },
      "saveAsorRevise": {
        "id": "Awp0ShowSaveAs",
        "uiAnchor": "aw_rightWall",
        "priority": 670,
        "parentGroupId": "Awp0NewGroup"
      },
      "saveAsOnly": {
        "id": "Awp0ShowSaveAsOnly",
        "uiAnchor": "aw_rightWall",
        "priority": 671,
        "parentGroupId": "Awp0NewGroup"
      },
      "revise": {
        "id": "Awp0ShowRevise",
        "uiAnchor": "aw_rightWall",
        "priority": 672,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0GoHomeGlobalToolbar": {
        "id": "Awp0GoHome",
        "uiAnchor": "aw_globalToolbar",
        "relativeTo": "Awp0ChangeTheme",
        "priority": -1
      },
      "Awp0GoHomeFooterToolbar": {
        "id": "Awp0GoHome",
        "uiAnchor": "aw_footer",
        "priority": -1
      },
      "Awp0SignOutFooterToolbar": {
        "id": "Awp0SignOut",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0Search",
        "priority": -1
      },
      "Awp0CutOneStep": {
        "id": "Awp0Cut",
        "uiAnchor": "aw_rightWall",
        "priority": 30
      },
      "Awp0CutContextMenuCmdPlacement": {
        "id": "Awp0CutContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 1
      },
      "Awp0ShowObjectOneStep-classic": {
        "id": "Awp0ShowObject",
        "uiAnchor": "aw_oneStep",
        "priority": 1,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0ShowObjectOneStep": {
        "id": "Awp0ShowObject",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenInNewTabOneStep-classic": {
        "id": "Awp0OpenInNewTab",
        "uiAnchor": "aw_oneStep",
        "priority": 3,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenInNewTabOneStep": {
        "id": "Awp0OpenInNewTab",
        "uiAnchor": "aw_rightWall",
        "priority": 2,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenInNewWindowOneStep-classic": {
        "id": "Awp0OpenInNewWindow",
        "uiAnchor": "aw_oneStep",
        "priority": 2,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenInNewWindowOneStep": {
        "id": "Awp0OpenInNewWindow",
        "uiAnchor": "aw_rightWall",
        "priority": 3,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenInRACOneStep-classic": {
        "id": "Awp0OpenInRAC",
        "uiAnchor": "aw_oneStep",
        "priority": 4,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenInRACOneStep": {
        "id": "Awp0OpenInRAC",
        "uiAnchor": "aw_rightWall",
        "priority": 210,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0ViewFileOneStep": {
        "id": "Awp0ViewFile",
        "uiAnchor": "aw_rightWall",
        "priority": 20,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Awp0ShareURLOneStep": {
        "id": "Awp0ShareURL",
        "priority": 10,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Awp0ShowObjectCellForObjectNavigationOnHover": {
        "id": "Awp0ShowObjectCellForObjectNavigation",
        "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectObjectNavigationCellListActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0ShowObjectCellDatasetForObjectNavigationOnHover": {
        "id": "Awp0ShowObjectCellDataset",
        "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectObjectNavigationCellListActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0ShowObjectCellOnHoverList": {
        "id": "Awp0ShowObjectCell",
        "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0ShowObjectCellDatasetOnHoverList": {
        "id": "Awp0ShowObjectCellDataset",
        "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0ShowObjectCellOnHoverDataGrid": {
        "id": "Awp0ShowObjectCell",
        "uiAnchor": "com.siemens.splm.clientfx.ui.modelObjectDataGridActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0ShowObjectCellDatasetOnHoverDataGrid": {
        "id": "Awp0ShowObjectCellDataset",
        "uiAnchor": "com.siemens.splm.clientfx.ui.modelObjectDataGridActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0NavigateObjectCellOnHover": {
        "id": "Awp0NavigateObject",
        "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectObjectNavigationCellListActionCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "BOTTOM_RIGHT",
          "selected": true
        }
      },
      "Awp0NavigateObjectBreadCrumbCell": {
        "id": "Awp0NavigateObject",
        "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectNavigationBreadCrumbCellListActionCommands",
        "priority": 1,
        "cellDisplay": {
          "position": "BOTTOM_RIGHT"
        }
      },
      "Awp0ShowObjectFooter": {
        "id": "Awp0ShowObject",
        "uiAnchor": "aw_footer",
        "priority": 1,
        "parentGroupId": "OpenGroupCommandFooter"
      },
      "Awp0OpenInNewTabFooter": {
        "id": "Awp0OpenInNewTab",
        "uiAnchor": "aw_footer",
        "priority": 3,
        "parentGroupId": "OpenGroupCommandFooter"
      },
      "Awp0OpenInNewWindowFooter": {
        "id": "Awp0OpenInNewWindow",
        "uiAnchor": "aw_footer",
        "priority": 2,
        "parentGroupId": "OpenGroupCommandFooter"
      },
      "Awp0OpenInRACFooter": {
        "id": "Awp0OpenInRAC",
        "uiAnchor": "aw_footer",
        "priority": 4,
        "parentGroupId": "OpenGroupCommandFooter"
      },
      "Awp0ViewFileFooter": {
        "id": "Awp0ViewFile",
        "uiAnchor": "aw_footer",
        "priority": 5,
        "parentGroupId": "OpenGroupCommandFooter"
      },
      "Awp0ShareURLFooter": {
        "id": "Awp0ShareURL",
        "uiAnchor": "aw_footer",
        "priority": 7,
        "parentGroupId": "OpenGroupCommandFooter"
      },
      "Awp0StartEditOneStep": {
        "id": "Awp0StartEdit",
        "uiAnchor": "aw_rightWall",
        "priority": 10,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0StartEditFooter": {
        "id": "Awp0StartEdit",
        "uiAnchor": "aw_footer",
        "priority": 50
      },
      "Awp0StartEditSummaryOneStep-classic": {
        "id": "Awp0StartEditSummary",
        "uiAnchor": "aw_oneStep",
        "priority": 1,
        "parentGroupId": "StartEditGroupCommand"
      },
      "Awp0StartEditSummaryOneStep": {
        "id": "Awp0StartEditSummary",
        "uiAnchor": "aw_rightWall",
        "priority": 20,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0StartEditTableOneStep-classic": {
        "id": "Awp0StartEditTable",
        "uiAnchor": "aw_oneStep",
        "priority": 2,
        "parentGroupId": "StartEditGroupCommand"
      },
      "Awp0StartEditTablePrimaryWorkArea": {
        "id": "Awp0StartEditTable",
        "uiAnchor": "aw_workArea_right",
        "priority": 30
      },
      "Awp0TablePropertyCreateXrtSection": {
        "id": "Awp0TablePropertyCreate",
        "uiAnchor": "aw_tablePropertyXrtSection",
        "priority": 1
      },
      "Awp0TablePropertyRemoveXrtSection": {
        "id": "Awp0TablePropertyRemove",
        "uiAnchor": "aw_tablePropertyXrtSection",
        "priority": 2
      },
      "Awp0TablePropertyDuplicateXrtSection": {
        "id": "Awp0TablePropertyDuplicate",
        "uiAnchor": "aw_tablePropertyXrtSection",
        "priority": 3
      },
      "Awp0NameValueCreateXRTSection": {
        "id": "Awp0NameValueCreateXRT",
        "uiAnchor": "aw_nameValuePropertyXrtSection",
        "priority": 2
      },
      "Awp0NameValueCreateXRT_TnFSection": {
        "id": "Awp0NameValueCreate",
        "uiAnchor": "aw_rightWall",
        "priority": 170,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0NameValueRemoveXrtSection": {
        "id": "Awp0NameValueRemoveXRT",
        "uiAnchor": "aw_nameValuePropertyXrtSection",
        "priority": 1
      },
      "OpenGroupCommandOneStep": {
        "id": "Awp0OpenGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 20
      },
      "OpenGroupCommandOneStepFooter": {
        "id": "OpenGroupCommandFooter",
        "uiAnchor": "aw_footer",
        "priority": -1,
        "relativeTo": "Awp0Checkout"
      },
      "Awp0ModelObjListDisplayTogglesDisplay": {
        "id": "Awp0ModelObjListDisplayToggles",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 10,
        "showGroupSelected": false
      },
      "Awp0ShowImageViewDisplay-classic": {
        "id": "Awp0ShowImageView",
        "uiAnchor": "aw_display",
        "priority": 9,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowImageViewDisplay": {
        "id": "Awp0ShowImageView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 140,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowListViewDisplay-classic": {
        "id": "Awp0ShowListView",
        "uiAnchor": "aw_display",
        "priority": 2,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowListViewDisplay": {
        "id": "Awp0ShowListView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 80,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowSummaryViewDisplay-classic": {
        "id": "Awp0ShowSummaryView",
        "uiAnchor": "aw_display",
        "priority": 1,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowSummaryViewDisplay": {
        "id": "Awp0ShowSummaryView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 40,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTableSummaryViewDisplay-classic": {
        "id": "Awp0ShowTableSummaryView",
        "uiAnchor": "aw_display",
        "priority": 4,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTableSummaryViewDisplay": {
        "id": "Awp0ShowTableSummaryView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 100,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTableViewDisplay-classic": {
        "id": "Awp0ShowTableView",
        "uiAnchor": "aw_display",
        "priority": 3,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTableViewDisplay": {
        "id": "Awp0ShowTableView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 90,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTreeSummaryViewDisplay-classic": {
        "id": "Awp0ShowTreeSummaryView",
        "uiAnchor": "aw_display",
        "priority": 6,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTreeSummaryViewDisplay": {
        "id": "Awp0ShowTreeSummaryView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 120,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTreeViewDisplay-classic": {
        "id": "Awp0ShowTreeView",
        "uiAnchor": "aw_display",
        "priority": 5,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "Awp0ShowTreeViewDisplay": {
        "id": "Awp0ShowTreeView",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 110,
        "parentGroupId": "Awp0ModelObjListDisplayToggles"
      },
      "saveEditsOneStep": {
        "id": "Awp0SaveEdits",
        "uiAnchor": "aw_rightWall",
        "priority": 100,
        "parentGroupId": "Awp0EditGroup"
      },
      "saveEditsPrimaryWorkArea": {
        "id": "Awp0SaveEditsPWA",
        "uiAnchor": "aw_workArea_right",
        "priority": 100
      },
      "cancelEditsOneStep": {
        "id": "Awp0CancelEdits",
        "uiAnchor": "aw_rightWall",
        "priority": 180,
        "parentGroupId": "Awp0EditGroup"
      },
      "cancelEditsPrimaryWorkArea": {
        "id": "Awp0CancelEditsPWA",
        "uiAnchor": "aw_workArea_right",
        "priority": 110
      },
      "cancelEditsFooter": {
        "id": "Awp0CancelEdits",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0Checkout",
        "priority": -1
      },
      "saveEditsFooter": {
        "id": "Awp0SaveEdits",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0CancelEdits",
        "priority": -1
      },
      "Awp0CommandLabelTogglePlacement": {
        "id": "Awp0CommandLabelToggle",
        "uiAnchor": "aw_globalToolbar",
        "priority": 5,
        "parentGroupId": "Awp0ChangeTheme"
      },
      "Awp0AddReference": {
        "id": "Awp0AddReference",
        "uiAnchor": "aw_rightWall",
        "priority": 270,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0AddProfilePicture": {
        "id": "Awp0AddProfilePicture",
        "uiAnchor": "awp0_addProfilePictureCommands",
        "isIcon": true,
        "priority": 1
      },
      "Awp0ObjectInfoDisplay": {
        "id": "Awp0ObjectInfo",
        "uiAnchor": "aw_rightWall",
        "priority": 10
      },
      "Awp0ChangePasswordDisplay": {
        "id": "Awp0ChangePassword",
        "uiAnchor": "aw_rightWall",
        "priority": 635,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0SelectAllDisplay": {
        "id": "Awp0SelectAll",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 146
      },
      "Awp0DeselectAllDisplay": {
        "id": "Awp0DeselectAll",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 146
      },
      "Awp0SelectAllObjectSetDisplay": {
        "id": "Awp0SelectAllObjectSet",
        "uiAnchor": "aw_objectSet",
        "priority": 7
      },
      "Awp0DeselectAllObjectSetDisplay": {
        "id": "Awp0DeselectAllObjectSet",
        "uiAnchor": "aw_objectSet",
        "priority": 7
      },
      "Awp0EnableMultiSelectDisplay-classic": {
        "id": "Awp0EnableMultiSelect",
        "uiAnchor": "aw_display",
        "priority": 6
      },
      "Awp0DisableMultiSelectDisplay-classic": {
        "id": "Awp0DisableMultiSelect",
        "uiAnchor": "aw_display",
        "priority": 6
      },
      "Awp0EnableMultiSelectDisplay": {
        "id": "Awp0EnableMultiSelect",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 145
      },
      "Awp0DisableMultiSelectDisplay": {
        "id": "Awp0DisableMultiSelect",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 145
      },
      "Awp0EnableMultiSelectObjectSetDisplay": {
        "id": "Awp0EnableMultiSelectObjectSet",
        "uiAnchor": "aw_objectSet",
        "priority": 6
      },
      "Awp0DisableMultiSelectObjectSetDisplay": {
        "id": "Awp0DisableMultiSelectObjectSet",
        "uiAnchor": "aw_objectSet",
        "priority": 6
      },
      "Awp0ShowCreateObjectToolsInfo": {
        "id": "Awp0ShowCreateObject",
        "uiAnchor": "aw_rightWall",
        "priority": 120,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0ShowCreateObjectFooter": {
        "id": "Awp0ShowCreateObject",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0GoHome",
        "priority": 1
      },
      "Awp0DeleteOneStep": {
        "id": "Awp0Delete",
        "uiAnchor": "aw_rightWall",
        "priority": 500,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0ExportDelete": {
        "id": "Awp0ExportDelete",
        "uiAnchor": "awp0_exportToExcelDelete",
        "priority": 300,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0CopyOneStep": {
        "id": "Awp0Copy",
        "uiAnchor": "aw_rightWall",
        "priority": 40
      },
      "Awp0CopyContextMenuCmdPlacement": {
        "id": "Awp0CopyContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 2
      },
      "Awp0CopyDownloadLinkContextMenu": {
        "id": "Awp0CopyDownloadLink",
        "uiAnchor": "aw_contextMenu2",
        "priority": 4
      },
      "arrangeShowAllCommandPlacement": {
        "id": "arrangeShowAll",
        "uiAnchor": "arrangeCommandbar",
        "priority": 300
      },
      "arrangeResetCommandPlacement": {
        "id": "arrangeReset",
        "uiAnchor": "arrangeCommandbar",
        "priority": 200
      },
      "arrangeMoveUpCommandPlacement": {
        "id": "arrangeMoveUp",
        "uiAnchor": "arrangeCommandbar",
        "priority": 400
      },
      "arrangeMoveDownCommandPlacement": {
        "id": "arrangeMoveDown",
        "uiAnchor": "arrangeCommandbar",
        "priority": 500
      },
      "arrangeAddColumnsCommandPlacement": {
        "id": "arrangeAddColumns",
        "uiAnchor": "arrangeTwoPanelCommandbar",
        "priority": 100
      },
      "arrangeRemoveColumnsCommandPlacement": {
        "id": "arrangeRemoveColumns",
        "uiAnchor": "arrangeTwoPanelCommandbar",
        "priority": 200
      },
      "arrangeViewConfigsCommandPlacement": {
        "id": "arrangeViewConfigs",
        "uiAnchor": "arrangeCommandbar",
        "priority": 600
      },
      "deleteNamedColumnConfigPlacement": {
        "id": "deleteNamedColumnConfig",
        "uiAnchor": "viewColumnConfigsCommands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0ChangeOwnerToolsAndInfo": {
        "id": "Awp0ChangeOwner",
        "uiAnchor": "aw_rightWall",
        "priority": 630,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0PasteDisplay": {
        "id": "Awp0Paste",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0PasteGroup",
        "priority": 10
      },
      "Awp0PasteContextMenuCmdPlacement": {
        "id": "Awp0PasteContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 3
      },
      "Awp0PasteObjectSetDisplay-classic": {
        "id": "Awp0Paste",
        "uiAnchor": "aw_objectSet_right",
        "priority": 2
      },
      "Awp0ExportToExcelObjectSetPlacement": {
        "id": "Awp0ExportToExcel",
        "uiAnchor": "aw_objectSet_right",
        "priority": 3
      },
      "Awp0MoveUpExcelColumnPlacement": {
        "id": "Awp0MoveUpExcelColumn",
        "uiAnchor": "exportSelectedColumnsCommands",
        "priority": 90
      },
      "Awp0MoveDownExcelColumnPlacement": {
        "id": "Awp0MoveDownExcelColumn",
        "uiAnchor": "exportSelectedColumnsCommands",
        "priority": 100
      },
      "Awp0ExportSelectedColumnsAddPlacement": {
        "id": "Awp0ExportSelectedColumnsAdd",
        "uiAnchor": "exportSelectedColumnsCommands",
        "priority": 101
      },
      "Awp0ShowCompactLayoutPlacement": {
        "id": "Awp0ShowCompactLayout",
        "uiAnchor": "aw_globalToolbar",
        "priority": 3,
        "parentGroupId": "Awp0ChangeTheme"
      },
      "Awp0ShowComfyLayoutPlacement": {
        "id": "Awp0ShowComfyLayout",
        "uiAnchor": "aw_globalToolbar",
        "priority": 4,
        "parentGroupId": "Awp0ChangeTheme"
      },
      "Awp0EditGroupPlacement": {
        "id": "Awp0EditGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 2000
      },
      "Awp0ManageGroupPlacement": {
        "id": "Awp0ManageGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 3000
      },
      "Awp0NewGroupPlacement": {
        "id": "Awp0NewGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 1000
      },
      "Awp0ShareGroupPlacement": {
        "id": "Awp0ShareGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 4000
      },
      "Awp0ViewGroupPlacement": {
        "id": "Awp0ViewGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 5000
      },
      "Awp0PasteGroupPlacement": {
        "id": "Awp0PasteGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 400
      },
      "Awp0GoHomeGlobalNavigationbar": {
        "id": "Awp0GoHome",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 20
      },
      "Awp0ShowHomeFolderGlobalNavigationbar": {
        "id": "Awp0ShowHomeFolder",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 50
      },
      "Awp0GoFavoritesGlobalNavigationbar": {
        "id": "Awp0GoFavorites",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 140
      },
      "Awp0HelpUserSessionbar": {
        "id": "Awp0Help",
        "uiAnchor": "aw_userSessionbar",
        "priority": 40,
        "parentGroupId": "Awp0HelpGroup",
        "showGroupSelected": false
      },
      "Awp0HelpGroupUserSessionbar": {
        "id": "Awp0HelpGroup",
        "uiAnchor": "aw_userSessionbar",
        "priority": 4
      },
      "Awp0HelpAboutUserSessionbar": {
        "id": "Awp0HelpAbout",
        "uiAnchor": "aw_userSessionbar",
        "priority": 50,
        "parentGroupId": "Awp0HelpGroup",
        "showGroupSelected": false
      },
      "openArrangePanelPlacement": {
        "id": "openArrangePanel",
        "priority": 200,
        "uiAnchor": "aw_gridMenu"
      },
      "Awp0EditLocalizationSinglePlacement": {
        "id": "Awp0EditLocalizationSingle",
        "priority": 20,
        "uiAnchor": "aw_multiLanguageProperty"
      },
      "Awp0AddorRemoveLocalesPlacement": {
        "id": "Awp0AddorRemoveLocales",
        "priority": 20,
        "uiAnchor": "aw_addRemoveLocales"
      },
      "Awp0RemoveLocalePlacement": {
        "id": "Awp0RemoveLocale",
        "priority": 20,
        "uiAnchor": "aw_removeLocale"
      },
      "awp0RemoveProjCellCommandPlacement": {
        "id": "Awp0RemoveProjectsCell",
        "uiAnchor": "aw_removeProjectCellCommandAction",
        "areas": [
          "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
        ],
        "priority": 300,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "uvCheckoutPlacement-classic": {
        "id": "uvCheckout",
        "uiAnchor": "aw_viewerCommands",
        "priority": 200
      },
      "uvCheckoutPlacement": {
        "id": "uvCheckout",
        "uiAnchor": "aw_universalViewer",
        "priority": 200
      },
      "uvCancelCheckoutPlacement-classic": {
        "id": "uvCancelCheckout",
        "uiAnchor": "aw_viewerCommands",
        "priority": 200
      },
      "uvCancelCheckoutPlacement": {
        "id": "uvCancelCheckout",
        "uiAnchor": "aw_universalViewer",
        "priority": 200
      },
      "uvCheckinPlacement-classic": {
        "id": "uvCheckin",
        "uiAnchor": "aw_viewerCommands",
        "priority": 300
      },
      "uvCheckinPlacement": {
        "id": "uvCheckin",
        "uiAnchor": "aw_universalViewer",
        "priority": 300
      },
      "fullViewModePlacement-classic": {
        "id": "fullViewMode",
        "uiAnchor": "aw_viewerCommands",
        "priority": 400
      },
      "fullViewModePlacement": {
        "id": "fullViewMode",
        "uiAnchor": "aw_viewerRightSide",
        "priority": 1
      },
      "exitFullViewModePlacement": {
        "id": "Awp0ExitFullScreen",
        "uiAnchor": "aw_viewerRightSide",
        "priority": 1
      },
      "uvWordWrapPlacement-classic": {
        "id": "uvWordWrap",
        "uiAnchor": "aw_viewerCommands",
        "priority": 100
      },
      "uvWordWrapPlacement": {
        "id": "uvWordWrap",
        "uiAnchor": "aw_universalViewer",
        "priority": 500
      },
      "Awp0ShowObjectUV": {
        "id": "Awp0ShowObjectForUV",
        "uiAnchor": "aw_universalViewerLink",
        "priority": 1
      },
      "Awp0ViewFileUV": {
        "id": "Awp0ViewFileForUV",
        "uiAnchor": "aw_universalViewerLink",
        "priority": 2
      },
      "Awp0OpenInNewWindowUV": {
        "id": "Awp0OpenInNewWindowForUV",
        "uiAnchor": "aw_universalViewerLink",
        "priority": 3
      },
      "Awp0OpenInNewTabUV": {
        "id": "Awp0OpenInNewTabForUV",
        "uiAnchor": "aw_universalViewerLink",
        "priority": 4
      },
      "objectSetViewModeGroup": {
        "id": "objectSetViewModeGroup",
        "uiAnchor": "aw_objectSet",
        "priority": 0
      },
      "objectSetListViewMode": {
        "id": "objectSetListViewMode",
        "priority": 100,
        "parentGroupId": "objectSetViewModeGroup"
      },
      "objectSetTableViewMode": {
        "id": "objectSetTableViewMode",
        "priority": 200,
        "parentGroupId": "objectSetViewModeGroup"
      },
      "objectSetCompareViewMode": {
        "id": "objectSetCompareViewMode",
        "priority": 300,
        "parentGroupId": "objectSetViewModeGroup"
      },
      "objectSetImageViewMode": {
        "id": "objectSetImageViewMode",
        "priority": 400,
        "parentGroupId": "objectSetViewModeGroup"
      },
      "GcShowStartEdit": {
        "id": "GcStartEdit",
        "uiAnchor": "aw_oneStep",
        "priority": 149
      },
      "GcShowExitEdit": {
        "id": "GcExitEdit",
        "uiAnchor": "aw_oneStep",
        "priority": 149
      },
      "GcShowLegend": {
        "id": "graphLegend",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 0
      },
      "GcLayoutCommandGroupOneStep": {
        "id": "GcLayoutCommandGroup",
        "uiAnchor": "aw_oneStep",
        "priority": 150
      },
      "GcTopToBottomLayoutOneStep": {
        "id": "GcTopToBottomLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcBottomToTopLayoutOneStep": {
        "id": "GcBottomToTopLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcRightToLeftLayoutOneStep": {
        "id": "GcRightToLeftLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcLeftToRightLayoutOneStep": {
        "id": "GcLeftToRightLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcIncrementalLayoutOneStep": {
        "id": "GcIncrementalLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcOrganicLayoutOneStep": {
        "id": "GcOrganicLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcBalloonLayoutOneStep": {
        "id": "GcBalloonLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "GcSnakeLayoutOneStep": {
        "id": "GcSnakeLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "useTransparencyOnOneStep": {
        "id": "Awv0UseTransparency",
        "uiAnchor": "aw_3dViewer",
        "relativeTo": "Awv0ViewOrientationGroup",
        "priority": 2
      },
      "MeasurementFilterGroupOneStep": {
        "id": "MeasurementFilterGroup",
        "uiAnchor": "aw_3dViewer",
        "priority": 15
      },
      "ViewNavigationGroupOneStep": {
        "id": "ViewNavigationGroup",
        "uiAnchor": "aw_3dViewer",
        "relativeTo": "Awv0ViewOrientationGroup",
        "priority": 4
      },
      "Awv0RotateOneStep-classic": {
        "id": "Awv0Rotate",
        "uiAnchor": "aw_oneStep",
        "priority": 200,
        "parentGroupId": "ViewNavigationGroup"
      },
      "Awv0RotateOneStep": {
        "id": "Awv0Rotate",
        "uiAnchor": "aw_3dViewer",
        "priority": 152,
        "parentGroupId": "ViewNavigationGroup"
      },
      "Awv0PanOneStep-classic": {
        "id": "Awv0Pan",
        "uiAnchor": "aw_oneStep",
        "priority": 200,
        "parentGroupId": "ViewNavigationGroup"
      },
      "Awv0PanOneStep": {
        "id": "Awv0Pan",
        "uiAnchor": "aw_3dViewer",
        "priority": 151,
        "parentGroupId": "ViewNavigationGroup"
      },
      "Awv0ZoomOneStep-classic": {
        "id": "Awv0Zoom",
        "uiAnchor": "aw_oneStep",
        "priority": 200,
        "parentGroupId": "ViewNavigationGroup"
      },
      "Awv0ZoomOneStep": {
        "id": "Awv0Zoom",
        "uiAnchor": "aw_3dViewer",
        "priority": 153,
        "parentGroupId": "ViewNavigationGroup"
      },
      "Awv0AreaSelectOneStep": {
        "id": "Awv0AreaSelect",
        "uiAnchor": "aw_3dViewer",
        "relativeTo": "Awv0ViewOrientationGroup",
        "priority": 6
      },
      "UvViewNavigationGroupOneStep": {
        "id": "UvViewNavigationGroup",
        "uiAnchor": "aw_universalViewer",
        "priority": 200
      },
      "Awv0UvRotateOneStep-classic": {
        "id": "Awv0UvRotate",
        "uiAnchor": "aw_oneStep",
        "priority": 200,
        "parentGroupId": "UvViewNavigationGroup"
      },
      "Awv0UvRotateOneStep": {
        "id": "Awv0UvRotate",
        "uiAnchor": "aw_universalViewer",
        "priority": 200,
        "parentGroupId": "UvViewNavigationGroup"
      },
      "Awv0UvPanOneStep-classic": {
        "id": "Awv0UvPan",
        "uiAnchor": "aw_oneStep",
        "priority": 200,
        "parentGroupId": "UvViewNavigationGroup"
      },
      "Awv0UvPanOneStep": {
        "id": "Awv0UvPan",
        "uiAnchor": "aw_universalViewer",
        "priority": 200,
        "parentGroupId": "UvViewNavigationGroup"
      },
      "Awv0UvZoomOneStep-classic": {
        "id": "Awv0UvZoom",
        "uiAnchor": "aw_oneStep",
        "priority": 200,
        "parentGroupId": "UvViewNavigationGroup"
      },
      "Awv0UvZoomOneStep": {
        "id": "Awv0UvZoom",
        "uiAnchor": "aw_universalViewer",
        "priority": 200,
        "parentGroupId": "UvViewNavigationGroup"
      },
      "Awv0ViewerSettingsToolsAndInfo": {
        "id": "Awv0ViewerSettings",
        "uiAnchor": "aw_3dViewer",
        "relativeTo": "Awv0ViewOrientationGroup",
        "priority": 5
      },
      "Awv0ViewOrientationGroupOneStep": {
        "id": "Awv0ViewOrientationGroup",
        "uiAnchor": "aw_3dViewer",
        "priority": 20
      },
      "Awv0OrientIsometricOneStep-classic": {
        "id": "Awv0OrientIsometric",
        "uiAnchor": "aw_oneStep",
        "priority": 119,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientIsometricOneStep": {
        "id": "Awv0OrientIsometric",
        "uiAnchor": "aw_3dViewer",
        "priority": 119,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientTrimetricOneStep-classic": {
        "id": "Awv0OrientTrimetric",
        "uiAnchor": "aw_oneStep",
        "priority": 120,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientTrimetricOneStep": {
        "id": "Awv0OrientTrimetric",
        "uiAnchor": "aw_3dViewer",
        "priority": 120,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientTopOneStep-classic": {
        "id": "Awv0OrientTop",
        "uiAnchor": "aw_oneStep",
        "priority": 113,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientTopOneStep": {
        "id": "Awv0OrientTop",
        "uiAnchor": "aw_3dViewer",
        "priority": 113,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientFrontOneStep-classic": {
        "id": "Awv0OrientFront",
        "uiAnchor": "aw_oneStep",
        "priority": 117,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientFrontOneStep": {
        "id": "Awv0OrientFront",
        "uiAnchor": "aw_3dViewer",
        "priority": 117,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientRightOneStep-classic": {
        "id": "Awv0OrientRight",
        "uiAnchor": "aw_oneStep",
        "priority": 116,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientRightOneStep": {
        "id": "Awv0OrientRight",
        "uiAnchor": "aw_3dViewer",
        "priority": 116,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientBackOneStep-classic": {
        "id": "Awv0OrientBack",
        "uiAnchor": "aw_oneStep",
        "priority": 118,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientBackOneStep": {
        "id": "Awv0OrientBack",
        "uiAnchor": "aw_3dViewer",
        "priority": 118,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientBottomOneStep-classic": {
        "id": "Awv0OrientBottom",
        "uiAnchor": "aw_oneStep",
        "priority": 114,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientBottomOneStep": {
        "id": "Awv0OrientBottom",
        "uiAnchor": "aw_3dViewer",
        "priority": 114,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientLeftOneStep-classic": {
        "id": "Awv0OrientLeft",
        "uiAnchor": "aw_oneStep",
        "priority": 115,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "Awv0OrientLeftOneStep": {
        "id": "Awv0OrientLeft",
        "uiAnchor": "aw_3dViewer",
        "priority": 115,
        "parentGroupId": "Awv0ViewOrientationGroup"
      },
      "UvAwv0ViewOrientationGroupOneStep": {
        "id": "UvAwv0ViewOrientationGroup",
        "uiAnchor": "aw_universalViewer",
        "priority": 200
      },
      "UvAwv0OrientIsometricOneStep-classic": {
        "id": "UvAwv0OrientIsometric",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientIsometricOneStep": {
        "id": "UvAwv0OrientIsometric",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientTrimetricOneStep-classic": {
        "id": "UvAwv0OrientTrimetric",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientTrimetricOneStep": {
        "id": "UvAwv0OrientTrimetric",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientTopOneStep-classic": {
        "id": "UvAwv0OrientTop",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientTopOneStep": {
        "id": "UvAwv0OrientTop",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientFrontOneStep-classic": {
        "id": "UvAwv0OrientFront",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientFrontOneStep": {
        "id": "UvAwv0OrientFront",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientRightOneStep-classic": {
        "id": "UvAwv0OrientRight",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientRightOneStep": {
        "id": "UvAwv0OrientRight",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientBackOneStep-classic": {
        "id": "UvAwv0OrientBack",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientBackOneStep": {
        "id": "UvAwv0OrientBack",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientBottomOneStep-classic": {
        "id": "UvAwv0OrientBottom",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientBottomOneStep": {
        "id": "UvAwv0OrientBottom",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientLeftOneStep-classic": {
        "id": "UvAwv0OrientLeft",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "UvAwv0OrientLeftOneStep": {
        "id": "UvAwv0OrientLeft",
        "uiAnchor": "aw_universalViewer",
        "priority": 100,
        "parentGroupId": "UvAwv0ViewOrientationGroup"
      },
      "Awv0ViewerConvenienceCommandGroupOneStep": {
        "id": "Awv0ViewerConvenienceCommandGroup",
        "uiAnchor": "aw_3dViewer",
        "relativeTo": "Awv0ViewOrientationGroup",
        "priority": 1
      },
      "Awv0AllOnOneStep-classic": {
        "id": "Awv0AllOn",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0AllOnOneStep": {
        "id": "Awv0AllOn",
        "uiAnchor": "aw_3dViewer",
        "priority": 121,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0AllOffOneStep-classic": {
        "id": "Awv0AllOff",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0AllOffOneStep": {
        "id": "Awv0AllOff",
        "uiAnchor": "aw_3dViewer",
        "priority": 122,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectedOffOneStep-classic": {
        "id": "Awv0SelectedOff",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectedOffOneStep": {
        "id": "Awv0SelectedOff",
        "uiAnchor": "aw_3dViewer",
        "priority": 127,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectedOnOneStep-classic": {
        "id": "Awv0SelectedOn",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectedOnOneStep": {
        "id": "Awv0SelectedOn",
        "uiAnchor": "aw_3dViewer",
        "priority": 126,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectedOnlyOneStep-classic": {
        "id": "Awv0SelectedOnly",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectedOnlyOneStep": {
        "id": "Awv0SelectedOnly",
        "uiAnchor": "aw_3dViewer",
        "priority": 129,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0ContextOffOneStep-classic": {
        "id": "Awv0ContextOff",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0ContextOffOneStep": {
        "id": "Awv0ContextOff",
        "uiAnchor": "aw_3dViewer",
        "priority": 125,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0ContextOnOneStep-classic": {
        "id": "Awv0ContextOn",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0ContextOnOneStep": {
        "id": "Awv0ContextOn",
        "uiAnchor": "aw_3dViewer",
        "priority": 123,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0ContextOnlyOneStep-classic": {
        "id": "Awv0ContextOnly",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0ContextOnlyOneStep": {
        "id": "Awv0ContextOnly",
        "uiAnchor": "aw_3dViewer",
        "priority": 124,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectContextOneStep-classic": {
        "id": "Awv0SelectContext",
        "uiAnchor": "aw_oneStep",
        "priority": 100,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0SelectContextOneStep": {
        "id": "Awv0SelectContext",
        "uiAnchor": "aw_3dViewer",
        "priority": 128,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0RemoveAnalysisResultOneStep": {
        "id": "Awv0RemoveAnalysisResult",
        "uiAnchor": "aw_3dViewer",
        "priority": 129,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
      },
      "Awv0FitOneStep": {
        "id": "Awv0Fit",
        "uiAnchor": "aw_3dViewer",
        "relativeTo": "Awv0ViewOrientationGroup",
        "priority": 3
      },
      "useTransparencyOnOneStep_scv": {
        "id": "Awv0UseTransparency_scv",
        "uiAnchor": "aw_3dViewerRight",
        "relativeTo": "Awv0ViewOrientationGroup_scv",
        "priority": 2
      },
      "MeasurementFilterGroupOneStep_scv": {
        "id": "MeasurementFilterGroup_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 15
      },
      "ViewNavigationGroupOneStep_scv": {
        "id": "ViewNavigationGroup_scv",
        "uiAnchor": "aw_3dViewerRight",
        "relativeTo": "Awv0ViewOrientationGroup_scv",
        "priority": 4
      },
      "Awv0RotateOneStep_scv": {
        "id": "Awv0Rotate_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 152,
        "parentGroupId": "ViewNavigationGroup_scv"
      },
      "Awv0PanOneStep_scv": {
        "id": "Awv0Pan_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 151,
        "parentGroupId": "ViewNavigationGroup_scv"
      },
      "Awv0ZoomOneStep_scv": {
        "id": "Awv0Zoom_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 153,
        "parentGroupId": "ViewNavigationGroup_scv"
      },
      "Awv0AreaSelectOneStep_scv": {
        "id": "Awv0AreaSelect_scv",
        "uiAnchor": "aw_3dViewerRight",
        "relativeTo": "Awv0ViewOrientationGroup_scv",
        "priority": 6
      },
      "Awv0ViewOrientationGroupOneStep_scv": {
        "id": "Awv0ViewOrientationGroup_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 20
      },
      "Awv0OrientIsometricOneStep_scv": {
        "id": "Awv0OrientIsometric_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 119,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientTrimetricOneStep_scv": {
        "id": "Awv0OrientTrimetric_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 120,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientTopOneStep_scv": {
        "id": "Awv0OrientTop_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 113,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientFrontOneStep_scv": {
        "id": "Awv0OrientFront_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 117,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientRightOneStep_scv": {
        "id": "Awv0OrientRight_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 116,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientBackOneStep_scv": {
        "id": "Awv0OrientBack_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 118,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientBottomOneStep_scv": {
        "id": "Awv0OrientBottom_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 114,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0OrientLeftOneStep_scv": {
        "id": "Awv0OrientLeft_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 115,
        "parentGroupId": "Awv0ViewOrientationGroup_scv"
      },
      "Awv0ViewerConvenienceCommandGroupOneStep_scv": {
        "id": "Awv0ViewerConvenienceCommandGroup_scv",
        "uiAnchor": "aw_3dViewerRight",
        "relativeTo": "Awv0ViewOrientationGroup_scv",
        "priority": 1
      },
      "Awv0AllOnOneStep_scv": {
        "id": "Awv0AllOn_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 121,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0AllOffOneStep_scv": {
        "id": "Awv0AllOff_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 122,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0SelectedOffOneStep_scv": {
        "id": "Awv0SelectedOff_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 127,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0SelectedOnOneStep_scv": {
        "id": "Awv0SelectedOn_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 126,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0SelectedOnlyOneStep_scv": {
        "id": "Awv0SelectedOnly_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 129,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0ContextOffOneStep_scv": {
        "id": "Awv0ContextOff_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 125,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0ContextOnOneStep_scv": {
        "id": "Awv0ContextOn_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 123,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0ContextOnlyOneStep_scv": {
        "id": "Awv0ContextOnly_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 124,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0SelectContextOneStep_scv": {
        "id": "Awv0SelectContext_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 128,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0RemoveAnalysisResultOneStep_scv": {
        "id": "Awv0RemoveAnalysisResult_scv",
        "uiAnchor": "aw_3dViewerRight",
        "priority": 129,
        "parentGroupId": "Awv0ViewerConvenienceCommandGroup_scv"
      },
      "Awv0FitOneStep_scv": {
        "id": "Awv0Fit_scv",
        "uiAnchor": "aw_3dViewerRight",
        "relativeTo": "Awv0ViewOrientationGroup_scv",
        "priority": 3
      },
      "Awv0ViewerSettingsToolsAndInfo_scv": {
        "id": "Awv0ViewerSettings_scv",
        "uiAnchor": "aw_3dViewerRight",
        "relativeTo": "Awv0ViewOrientationGroup_scv",
        "priority": 5
      },
      "Awv0Close3DSubCommandsToolbarOneStep": {
        "id": "Awv0Close3DSubCommandsToolbar",
        "uiAnchor": "aw_3dViewerSubCommandsSecondAnchor",
        "priority": 9
      },
      "Awv0Close3DSubCommandsToolbarOneStep_scv": {
        "id": "Awv0Close3DSubCommandsToolbar_scv",
        "uiAnchor": "aw_3dViewerSubCommandsSecondAnchorRight",
        "priority": 9
      },
      "rotateCCWPlacement": {
        "id": "rotateCCW",
        "uiAnchor": "aw_universalViewer",
        "priority": 410
      },
      "rotateCWPlacement": {
        "id": "rotateCW",
        "uiAnchor": "aw_universalViewer",
        "priority": 411
      },
      "Awp0OpenVVIOneStep-classic": {
        "id": "Awp0OpenVVI",
        "uiAnchor": "aw_oneStep",
        "priority": 3,
        "parentGroupId": "Awp0OpenGroup"
      },
      "Awp0OpenVVIOneStep": {
        "id": "Awp0OpenVVI",
        "uiAnchor": "aw_rightWall",
        "priority": 280,
        "parentGroupId": "Awp0OpenGroup"
      },
      "showHomeFolder": {
        "id": "Awp0ShowHomeFolder",
        "uiAnchor": "test",
        "priority": 1
      },
      "Awp0UnPinObjectOneStep": {
        "id": "Awp0UnPinObject",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0ManageGroup",
        "priority": 210
      },
      "Awp0PinObjectOneStep": {
        "id": "Awp0PinObject",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0ManageGroup",
        "priority": 140
      },
      "removeAllFiltersPlacement": {
        "id": "removeAllFilters",
        "priority": 300,
        "uiAnchor": "aw_gridMenu"
      },
      "toggleDynamicRowHeightPlacement": {
        "id": "toggleDynamicRowHeight",
        "priority": 400,
        "uiAnchor": "aw_gridMenu"
      },
      "Awp0ChangeThemePlacement": {
        "id": "Awp0ChangeTheme",
        "uiAnchor": "aw_globalToolbar",
        "priority": -1,
        "showGroupSelected": false
      },
      "Awp0TaskbarFullScreenPlacement": {
        "id": "Awp0TaskbarFullScreen",
        "uiAnchor": "toolbarRightSlot",
        "priority": 1
      },
      "Awp0TaskbarExitFullScreenPlacement": {
        "id": "Awp0TaskbarExitFullScreen",
        "uiAnchor": "toolbarRightSlot",
        "priority": 1
      },
      "Awp0GoBackGlobalNavigationbar": {
        "id": "Awp0GoBack",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 1
      },
      "Awp0GoBackFooterToolbar": {
        "id": "Awp0GoBack",
        "uiAnchor": "aw_footer",
        "relativeTo": "Awp0GoHome",
        "priority": -1
      },
      "Awp0ChangeThemeSessionbar": {
        "id": "Awp0ChangeTheme",
        "uiAnchor": "aw_userSessionbar",
        "priority": 2,
        "showGroupSelected": false
      },
      "addObjectPanelSetPinPlacement": {
        "id": "AddObjectPanelSetPin",
        "uiAnchor": "addObjectPanel_oneStepPinCommands",
        "priority": 100
      },
      "addObjectPanelSetUnPinPlacement": {
        "id": "AddObjectPanelSetUnPin",
        "uiAnchor": "addObjectPanel_oneStepPinCommands",
        "priority": 100
      },
      "uiwidgetAddcmdPlacement": {
        "id": "uiwidgetAddcmd",
        "uiAnchor": "uiwidget_projectSectionCommands",
        "priority": 150
      },
      "Awp0ColumnConfigPrePlacement": {
        "id": "Awp0ColumnConfigPre",
        "uiAnchor": "aw_compare",
        "priority": 0
      }
    },
    "actions": {
      "DigitalAssetsPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "DigitalAssetsPanel",
          "location": "aw_toolsAndInfo"
        }
      },
      "performDigitalAssetReplacement": {
        "actionType": "JSFunction",
        "method": "fireCommand",
        "deps": "js/digitalAssetPanelService",
        "inputData": {
          "commandId": "cmdReplaceDigitalAsset",
          "selection": "{{commandContext.vmo}}"
        }
      },
      "performDigitalAssetDelete": {
        "actionType": "JSFunction",
        "method": "fireCommand",
        "deps": "js/digitalAssetPanelService",
        "inputData": {
          "commandId": "cmdDeleteDigitalAsset",
          "selection": "{{commandContext.vmo}}"
        }
      },
      "performOpenObject": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/showObjectCommandHandler",
        "inputData": {
          "vmo": "{{item}}",
          "dataCtxNode": "{{ctx}}",
          "openInEditMode": false
        }
      },
      "openInIllustratorCommandAction": {
        "actionType": "Navigate",
        "navigateTo": "launcher/openinillustrator",
        "navigationParams": {
          "-s": "226TCSession",
          "-o": "{{ctx.selected.uid}}",
          "-attach": "true"
        },
        "navigateIn": "newTab"
      },
      "updateFavorites": {
        "actionType": "JSFunctionAsync",
        "method": "getFavorites",
        "inputData": {
          "refreshFromServer": true
        },
        "events": {
          "success": [
            {
              "condition": "ctx.visibleServerCommands.Awp0AddToFavorites === true",
              "name": "favorites.add"
            },
            {
              "condition": "ctx.visibleServerCommands.Awp0RemoveFromFavorites === true",
              "name": "favorites.remove"
            }
          ]
        },
        "deps": "js/favoritesService"
      },
      "addFavorites": {
        "actionType": "JSFunctionAsync",
        "method": "addFavorites",
        "inputData": {
          "selectedObjects": {
            "$adapt": "{{ctx.mselected}}"
          }
        },
        "outputData": {
          "ctx.visibleServerCommands.Awp0AddToFavorites": false,
          "ctx.visibleServerCommands.Awp0RemoveFromFavorites": true
        },
        "events": {
          "success": [
            {
              "name": "favorites.changed"
            }
          ]
        },
        "deps": "js/favoritesService"
      },
      "removeFavorites": {
        "actionType": "JSFunctionAsync",
        "method": "removeFavorites",
        "inputData": {
          "selectedObjects": {
            "$adapt": "{{ctx.mselected}}"
          }
        },
        "outputData": {
          "ctx.visibleServerCommands.Awp0AddToFavorites": true,
          "ctx.visibleServerCommands.Awp0RemoveFromFavorites": false
        },
        "events": {
          "success": [
            {
              "name": "favorites.changed"
            }
          ]
        },
        "deps": "js/favoritesService"
      },
      "HostingSetRevisionRuleAction": {
        "actionType": "JSFunction",
        "method": "setRevisionRule",
        "deps": "js/hosting/inf/services/hostSession_2014_07",
        "inputData": {
          "uid": "{{hosting.revRuleUid}}"
        }
      },
      "HostingSetRevisionRuleActionSoa": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2013-05-LOV",
        "method": "validateLOVValueSelections",
        "inputData": {
          "lovInput": {
            "boName": "UserSession",
            "operationName": "Edit",
            "owningObject": {
              "type": "UserSession",
              "uid": "{{hosting.userSessionUid}}"
            },
            "propertyValues": {
              "awp0RevRule": [
                "{{hosting.revRuleUid}}"
              ]
            }
          },
          "propName": "awp0RevRule",
          "uidOfSelectedRows": []
        },
        "events": {
          "success": [
            {
              "name": "aw.revisionRuleChangeEvent",
              "eventData": {
                "revisionRuleName": "{{hosting.revRuleName}}",
                "revisionRuleUID": "{{hosting.revRuleUid}}",
                "isSourceHosting": true
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "revRuleChangeSucess"
            }
          ],
          "failure": [
            {
              "message": "revRuleChangeFailed"
            }
          ]
        }
      },
      "Awp0OpenHostedAction": {
        "actionType": "JSFunction",
        "method": "openInHost",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "deps": "js/hosting/hostOpenService"
      },
      "Awp0OpenNewViewHostedAction": {
        "actionType": "JSFunction",
        "method": "openNewShowObjectViewInHost",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "deps": "js/hosting/hostOpenService"
      },
      "Awp0AddComponentHostedAction": {
        "actionType": "JSFunction",
        "method": "addComponentInHost",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "deps": "js/hosting/hostOpenService"
      },
      "isDSMEnabled": {
        "actionType": "JSFunction",
        "method": "isDSMUsable",
        "deps": "js/dsmUtils",
        "outputData": {
          "ctx.selectedDataset.isDSMUsable": ""
        },
        "events": {
          "success": [
            {
              "name": "replaceFile.isDSMEnabled",
              "condition": "ctx.selectedDataset.isDSMUsable"
            },
            {
              "name": "replaceFile.syncronousReplace",
              "condition": "!ctx.selectedDataset.isDSMUsable"
            }
          ]
        }
      },
      "loadPlmdReplaceOperationData": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2018-05-FileMgmt",
        "method": "loadPlmdTicketForReplace",
        "deps": "js/Awp0ReplaceDatasetService",
        "inputData": {
          "infos": "{{function:createInputForDSM}}"
        },
        "outputData": {
          "fmsTicket": "output[1][0].ticket",
          "ctx.selectedDataset.isMultipleReference": "output[1][0].referenceCount",
          "ctx.selectedDataset.datasetDisplayName": "output[1][0].datasetName",
          "ctx.selectedDataset.fileNameExt": "output[1][0].fileNameExt",
          "ctx.selectedDataset.fileNames": "output[1][0].fileNames",
          "mapPartialErrors": "{{function:isPlatformSupported}}"
        },
        "events": {
          "success": [
            {
              "name": "replaceFile.EvaluateCondition"
            }
          ],
          "failure": [
            {
              "name": "replaceFile.syncronousReplace",
              "condition": "mapPartialErrors"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "errorCode.code===14167",
              "message": "invalidInputObject"
            },
            {
              "condition": "errorCode.code===14165",
              "message": "uploadInProgress"
            },
            {
              "condition": "errorCode.code===141170",
              "message": "platformnotsupported"
            }
          ]
        }
      },
      "evaluateCondition": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "replaceFile.syncronousReplace",
              "condition": "ctx.selectedDataset.isDSMUsable === false"
            },
            {
              "name": "replaceFile.openSinglePLmdFile",
              "condition": "ctx.selectedDataset.isDSMUsable === true && ctx.selectedDataset.isMultipleReference === 1 && data.fmsTicket !== ''"
            },
            {
              "name": "imanfile.displayReplacePanel",
              "condition": "ctx.selectedDataset.isDSMUsable === true && ctx.selectedDataset.isMultipleReference > 1"
            }
          ]
        }
      },
      "nullEventCheck": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "dataset.ref_listIsNull",
              "condition": "ctx.selected.props.ref_list === null || ctx.selected.props.ref_list === undefined"
            },
            {
              "name": "dataset.ref_listIsNotNull",
              "condition": "ctx.selected.props.ref_list != null && ctx.selected.props.ref_list != undefined"
            }
          ]
        }
      },
      "getPropertyRefListSOA": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "attributes": [
            "ref_list",
            "ref_names"
          ],
          "objects": [
            "{{ctx.selected}}"
          ]
        },
        "policy": {
          "types": [
            {
              "name": "Dataset",
              "properties": [
                {
                  "name": "ref_list",
                  "modifiers": [
                    {
                      "Value": "true",
                      "name": "withProperties"
                    }
                  ]
                },
                {
                  "name": "ref_names"
                }
              ]
            },
            {
              "name": "ImanFile",
              "properties": [
                {
                  "name": "original_file_name",
                  "modifiers": [
                    {
                      "Value": "true",
                      "name": "withProperties"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "replaceFile.loadPlmdObjects",
              "condition": "ctx.selectedDataset.isDSMUsable"
            },
            {
              "name": "dataset.getDatasetObject",
              "condition": "!ctx.selectedDataset.isDSMUsable"
            }
          ]
        }
      },
      "getDatasetObjectJS": {
        "actionType": "JSFunction",
        "method": "getObject",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "dataset": "{{ctx.selected.uid}}"
        },
        "outputData": {
          "originalFileName": "props.ref_list.dbValues[0].original_file_name",
          "ctx.selectedDataset.datasetDisplayName": "props.object_string.dbValues[0]",
          "objects": "props.ref_list.dbValues"
        },
        "events": {
          "success": [
            {
              "name": "imanfile.originalfilenamenull",
              "condition": "data.originalFileName === undefined || data.originalFileName === null"
            },
            {
              "name": "imanfile.originalfilenamenotnull",
              "condition": "data.originalFileName !== undefined && data.originalFileName !== null"
            }
          ]
        }
      },
      "getOriginalFilenameSOA": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "attributes": [
            "original_file_name"
          ],
          "objects": "{{function:getObjects}}"
        },
        "events": {
          "success": [
            {
              "name": "imanfile.originalfilenamenotnull"
            }
          ]
        }
      },
      "getOriginalFileNameObjectsJS": {
        "actionType": "JSFunction",
        "method": "getObjects",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "dataset": "{{data.objects}}"
        },
        "outputData": {
          "objects": "",
          "originalFileName": "0.props.original_file_name"
        },
        "events": {
          "success": [
            {
              "name": "imanfile.populateFileNames"
            }
          ]
        }
      },
      "populateFileNames": {
        "actionType": "JSFunction",
        "method": "populateFileNames",
        "deps": "js/Awp0ReplaceDatasetService",
        "inputData": {
          "data": "{{data}}"
        },
        "outputData": {
          "validFileList": ""
        },
        "events": {
          "success": [
            {
              "name": "imanfile.replaceDataset",
              "condition": "data.validFileList.length > 0"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.validFileList.length === 0",
              "message": "dataSetCannotBeReplacedMessage"
            }
          ]
        }
      },
      "replaceDataset": {
        "actionType": "JSFunction",
        "method": "getFileExtension",
        "deps": "js/awFileNameUtils",
        "inputData": {
          "fileName": "{{data.originalFileName.dbValues[0]}}"
        },
        "outputData": {
          "ctx.selectedDataset.fileNameExt": ""
        },
        "events": {
          "success": [
            {
              "name": "imanfile.displayReplacePanel"
            }
          ]
        }
      },
      "replacePanelDisplay": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ReplaceDataset",
          "location": "aw_toolsAndInfo"
        }
      },
      "openPlmdFile": {
        "actionType": "openFile",
        "inputData": {
          "fileTicket": "{{data.fmsTicket}}"
        },
        "events": {
          "success": [
            {
              "name": "complete"
            }
          ]
        }
      },
      "openFileVersionsPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ShowFileVersions",
          "location": "aw_toolsAndInfo",
          "context": {
            "vmo": "{{ctx.selected}}",
            "parent": "{{ctx.pselected}}"
          },
          "push": false,
          "closeWhenCommandHidden": true,
          "config": {
            "width": "WIDE"
          }
        }
      },
      "openCreateAlternateIdPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0CreateAlternateId",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "openCreateAliasIdPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0CreateAliasId",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "openCreateDispRulePanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0CreateDispRule",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "handleRedLineMode": {
        "actionType": "JSFunction",
        "method": "toggleRedLineMode",
        "inputData": {},
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.selected}}"
                ]
              }
            }
          ]
        },
        "deps": "js/xrtParser.service"
      },
      "signOut": {
        "actionType": "JSFunction",
        "method": "terminateSession",
        "deps": "js/sessionManager.service",
        "events": {
          "success": [
            {
              "name": "awPopupWidget.close"
            }
          ]
        }
      },
      "viewProfile": {
        "actionType": "JSFunction",
        "method": "go",
        "inputData": {
          "transitionTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
          "toParams": {
            "uid": "{{ctx.user.uid}}"
          }
        },
        "deps": "js/locationNavigation.service",
        "events": {
          "success": [
            {
              "name": "awPopupWidget.close"
            }
          ]
        }
      },
      "closeCommandPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "complete",
              "eventData": {
                "source": "toolAndInfoPanel"
              }
            },
            {
              "name": "complete",
              "eventData": {
                "source": "navigationPanel"
              }
            }
          ]
        }
      },
      "activateShowObjectDevConfigNavPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "cmdShowObjectDevConfig",
          "location": "aw_navigation"
        }
      },
      "quickAccessAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "cmdQuickAccess",
          "location": "aw_navigation"
        }
      },
      "goHome": {
        "actionType": "JSFunction",
        "method": "go",
        "deps": "js/locationNavigation.service",
        "inputData": {
          "defaultRoutePath": "{{ctx.defaultRoutePath}}"
        }
      },
      "Awp0FullScreenAction": {
        "actionType": "JSFunction",
        "method": "toggleApplicationFullScreenMode",
        "deps": "js/fullViewModeService",
        "inputData": {
          "fullViewModeActiveFromContext": "{{ctx.fullscreen}}"
        }
      },
      "performCutOnDelete": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "cut.performCutOperation"
            }
          ]
        }
      },
      "refreshSelectedObject": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            }
          ]
        }
      },
      "cutConfiguredRevs": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "cut.getUnderlyingObjects",
              "condition": "((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid ))"
            },
            {
              "name": "cut.performCutOperation",
              "condition": "!((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid ))"
            }
          ]
        }
      },
      "getUnderlyingObjects": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2020-05-DataManagement",
        "method": "getRelatedObjsForConfiguredRevision",
        "deps": "js/cutUtils",
        "inputData": {
          "input": "{{function:cutInputs}}"
        },
        "outputData": {
          "cutInput": "response"
        },
        "events": {
          "success": [
            {
              "name": "cut.performCutOnUnderlyingObjects"
            }
          ]
        }
      },
      "performCutOnUnderlyingObjects": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "deps": "js/cutUtils",
        "inputData": {
          "inputData": "{{data.cutInput}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedCutInput}}",
                "createdObjects": "",
                "childObjects": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cutToAwClipboard"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleSuccessful"
            }
          ],
          "failure": [
            {
              "message": "cutCommandFailure"
            }
          ]
        }
      },
      "performCutOperation": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "deps": "js/cutUtils",
        "inputData": {
          "inputData": "{{function:cutInputs}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedCutInput}}",
                "createdObjects": "",
                "childObjects": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cutToAwClipboard"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleSuccessful"
            }
          ],
          "failure": [
            {
              "message": "performCutFailure"
            }
          ]
        }
      },
      "cutToAwClipboard": {
        "actionType": "JSFunction",
        "method": "setContents",
        "deps": "js/tcClipboardService",
        "inputData": {
          "uid": "{{ctx.mselected}}"
        }
      },
      "saveAsorReviseCommandAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      },
      "saveAsorReviseContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "SaveAsReviseWorkSpaceAdaptSuccessful"
            }
          ]
        }
      },
      "saveAsOnlyCommandAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ShowSaveAsOnly",
          "location": "aw_toolsAndInfo"
        }
      },
      "reviseCommandAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ShowRevise",
          "location": "aw_toolsAndInfo"
        }
      },
      "saveAsOnlyContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "SaveAsOnlyWorkSpaceAdaptSuccessful"
            }
          ]
        }
      },
      "reviseContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "ReviseWorkSpaceAdaptSuccessful"
            }
          ]
        }
      },
      "showObject": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}"
        }
      },
      "showObjectFromCommandArgs": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{commandContext.vmo.uid}}",
          "edit": "{{commandContext.commandArgs.edit}}"
        }
      },
      "showHoveredObject": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{commandContext.vmo}}",
            "path": "uid"
          }
        }
      },
      "getSelObjsForMultipleFileDwnld": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "inputModelObjects": ""
        },
        "events": {
          "success": [
            {
              "name": "datasets.getFileNamesAndTickets"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "initiateMultipleFileDownload": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2020-05-FileMgmt",
        "method": "getFileNamesWithTicketInfo",
        "inputData": {
          "businessObjectsIn": "{{data.inputModelObjects}}"
        },
        "outputData": {
          "fileNamesAndTickets": "output",
          "unprocessedInputsWhileDownload": "ServiceData.partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "datasets.openFilesFromTickets"
            }
          ],
          "failure": [
            {
              "name": "datasets.openFilesFromTickets"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.unprocessedInputsWhileDownload === undefined && data.inputModelObjects.length === 1 ",
              "message": "singleObjectWasDownloaded"
            },
            {
              "condition": "data.unprocessedInputsWhileDownload === undefined && data.inputModelObjects.length > 1 ",
              "message": "multipleObjectsWereDownloaded"
            }
          ],
          "failure": [
            {
              "message": "multipleObjectsWereDownloadedFailure"
            }
          ]
        }
      },
      "openMultipleFilesFromTickets": {
        "actionType": "JSFunction",
        "method": "openFiles",
        "deps": "js/fmsUtils",
        "inputData": {
          "fileTickets": "{{data.fileNamesAndTickets}}"
        }
      },
      "getRefListModelObject": {
        "actionType": "JSFunction",
        "method": "getObjects",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "dataset": "{{data.datasetModelObject.props.ref_list.dbValues}}"
        },
        "outputData": {
          "modelObject": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.downloadFile"
            }
          ]
        }
      },
      "checkIsDSMUsable": {
        "actionType": "JSFunction",
        "method": "isDSMUsable",
        "deps": "js/dsmUtils",
        "outputData": {
          "isDSMUsableFlag": ""
        },
        "events": {
          "success": [
            {
              "condition": "data.isDSMUsableFlag",
              "name": "dataset.getPropertyForDSM"
            },
            {
              "condition": "!data.isDSMUsableFlag",
              "name": "dataset.datasetObjectLoaded"
            }
          ]
        }
      },
      "downloadSelectedDatasetForDSM": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Core-2014-10-FileManagement",
        "method": "getPlmdFileTicketForDownload",
        "inputData": {
          "infos": [
            {
              "dataset": "{{data.datasetModelObject}}",
              "imanFile": "{{data.modelObject}}",
              "absoluteFilePath": ""
            }
          ]
        },
        "outputData": {
          "downloadedFile": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.openFileFromTicketForDSM"
            }
          ]
        }
      },
      "downloadSelectedDataset": {
        "actionType": "JSFunctionAsync",
        "method": "getFileReadTickets",
        "deps": "soa/fileManagementService",
        "inputData": {
          "files": {
            "$adapt": "{{data.modelObject}}"
          }
        },
        "outputData": {
          "downloadedFile": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.openFileFromTicket"
            }
          ]
        }
      },
      "getModelObjectFromCommandContextVmo": {
        "actionType": "JSFunction",
        "method": "getObject",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "uid": {
            "$adapt": "{{commandContext.vmo}}",
            "path": "uid"
          }
        },
        "outputData": {
          "datasetModelObject": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.checkIsDSMUsable"
            }
          ]
        }
      },
      "getDatasetRefProperties": {
        "actionType": "JSFunctionAsync",
        "method": "getProperties",
        "deps": "soa/dataManagementService",
        "inputData": {
          "uids": [
            "{{data.datasetModelObject.uid}}"
          ],
          "propNames": [
            "ref_list",
            "release_status_list"
          ]
        },
        "events": {
          "success": [
            {
              "condition": "data.datasetModelObject.props.ref_list.dbValues.length > 0",
              "name": "dataset.getRefListModelObject"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.datasetModelObject.props.ref_list.dbValues.length === 0",
              "message": "dataSetCannotBeDownloadedMessage"
            }
          ]
        }
      },
      "getPropertyForDSM": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "attributes": [
            "ref_list",
            "ref_names"
          ],
          "objects": [
            "{{data.datasetModelObject}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "dataset.getRefListCDM"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "Dataset",
              "properties": [
                {
                  "name": "ref_list",
                  "modifiers": [
                    {
                      "Value": "true",
                      "name": "withProperties"
                    }
                  ]
                },
                {
                  "name": "ref_names"
                }
              ]
            },
            {
              "name": "ImanFile",
              "properties": [
                {
                  "name": "original_file_name",
                  "modifiers": [
                    {
                      "Value": "true",
                      "name": "withProperties"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "getRefListObject": {
        "actionType": "JSFunction",
        "method": "getObject",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "dataset": "{{data.datasetModelObject.props.ref_list.dbValues[0]}}"
        },
        "outputData": {
          "modelObject": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.downloadSelectedDatasetForDSM"
            }
          ]
        }
      },
      "getDatasetTicketAndOpen": {
        "actionType": "JSFunctionAsync",
        "method": "getFileReadTickets",
        "deps": "soa/fileManagementService",
        "inputData": {
          "files": "{{data.modelObject}}"
        },
        "outputData": {
          "downloadedFile": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.openFileFromTicket"
            }
          ]
        }
      },
      "openDatasetFileFromTicketForDSM": {
        "actionType": "openFile",
        "inputData": {
          "fileTicket": "{{data.downloadedFile.ticket}}",
          "openFileName": ""
        }
      },
      "openDatasetFileFromTicket": {
        "actionType": "openFile",
        "inputData": {
          "fileTicket": "{{data.downloadedFile.tickets[1][0]}}",
          "openFileName": "{{data.downloadedFile.tickets[0][0].props.original_file_name.dbValues[0]}}"
        }
      },
      "prepareAndCopyDatasetDownloadURL": {
        "actionType": "JSFunction",
        "method": "prepareAndCopyFileDownloadURLToClipboard",
        "deps": "js/tcClipboardService",
        "inputData": {
          "selectedObjUid": "{{ctx.mselected[0].uid}}"
        },
        "outputData": {},
        "actionMessages": {
          "success": [
            {
              "message": "copyDownloadableFileUrlSuccessful"
            }
          ],
          "failure": [
            {
              "message": "copyDownloadableFileUrlFailure"
            }
          ]
        }
      },
      "navigateHoveredFolder": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/navigateObjectCommandHandler",
        "inputData": {
          "context": "{{commandContext.vmo}}"
        }
      },
      "openInNewTab": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}"
        },
        "navigateIn": "newTab"
      },
      "openInNewWindow": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}"
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "Awp0OpenInRACCommndAction": {
        "actionType": "Navigate",
        "navigateTo": "launcher/openinrac",
        "navigationParams": {
          "-s": "226TCSession",
          "-o": "{{ctx.selected.uid}}",
          "-attach": "true"
        },
        "navigateIn": "newTab"
      },
      "shareURL": {
        "actionType": "Copy",
        "method": "copyUrlToClipboard",
        "inputData": {
          "objectToCopy": "{{ctx.mselected}}",
          "copyType": "URL"
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "copySingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "copyMultipleSuccessful"
            }
          ]
        }
      },
      "startEditSummary": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/startEditGroupCommandService",
        "inputData": {
          "handleContext": "",
          "view": "{{ctx.ViewModeContext.ViewModeContext}}"
        }
      },
      "startEditTable": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/startEditGroupCommandService",
        "inputData": {
          "handleContext": "TABLE_CONTEXT"
        }
      },
      "isDirty": {
        "actionType": "JSFunctionAsync",
        "method": "isDirty",
        "outputData": {
          "dirty": "isDirty"
        },
        "events": {
          "success": [
            {
              "condition": "!data.dirty",
              "name": "checkEditInProgress"
            },
            {
              "condition": "data.dirty",
              "name": "leaveConfirmation.success"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "checkEditInProgressBeforeCheckin": {
        "actionType": "JSFunction",
        "method": "editInProgress",
        "outputData": {
          "editInProgress": "editInProgress"
        },
        "events": {
          "success": [
            {
              "condition": "!data.editInProgress",
              "name": "retrieveCheckinInputs"
            },
            {
              "condition": "data.editInProgress",
              "name": "saveEditsAndCheckin"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "editInProgress": {
        "actionType": "JSFunction",
        "method": "editInProgress",
        "outputData": {
          "editInProgress": "editInProgress"
        },
        "events": {
          "success": [
            {
              "condition": "!data.editInProgress",
              "name": "retrieveSelectedObjects"
            },
            {
              "condition": "data.editInProgress",
              "name": "checkOutOnCancelEdits"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "checkOutOnCancelEdits": {
        "actionType": "JSFunction",
        "method": "cancelEdits",
        "events": {
          "success": [
            {
              "name": "retrieveSelectedObjects"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "isDirtyOnCancelEdits": {
        "actionType": "JSFunctionAsync",
        "method": "isDirty",
        "outputData": {
          "dirty": "isDirty"
        },
        "events": {
          "success": [
            {
              "condition": "!data.dirty",
              "name": "cancelEdits"
            },
            {
              "condition": "data.dirty",
              "name": "cancelEditsPreferenceCheck"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "cancelEditsLeaveConfirmationAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {}
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "cancelEditsLeaveConfirmationMessage"
            }
          ]
        }
      },
      "cancelEdits": {
        "actionType": "JSFunction",
        "method": "cancelEdits",
        "deps": "js/editHandlerService",
        "events": {
          "success": [
            {
              "name": "updateURLParam"
            }
          ]
        }
      },
      "cancelEditsPreferenceCheck": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "cancelEditsPreferenceSetTrue",
              "condition": "data.preferences.AWC_CancelEdit_Confirmation[0] === 'true'"
            },
            {
              "name": "cancelEdits",
              "condition": "data.preferences.AWC_CancelEdit_Confirmation[0] !== 'true'"
            }
          ]
        }
      },
      "getSelectedObjects": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "checkoutInput": ""
        },
        "events": {
          "success": [
            {
              "name": "checkItOut"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "updateEditStateInURL": {
        "actionType": "JSFunction",
        "method": "updateEditStateInURL",
        "deps": "js/Awp0ShowSaveAsService"
      },
      "getCheckinInputs": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "checkinInput": ""
        },
        "events": {
          "success": [
            {
              "name": "checkIn"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "getCancelCheckoutInputs": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "cancelCheckoutInput": ""
        },
        "events": {
          "success": [
            {
              "name": "cancelCheckout"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "performCheckout": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-Reservation",
        "method": "checkout",
        "inputData": {
          "objects": "{{data.checkoutInput}}"
        },
        "outputData": {
          "checkOutPartialErrors": "partialErrors"
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "checkoutFailureSingle"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "checkoutFailureMultiple"
            }
          ]
        }
      },
      "performCheckin": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-Reservation",
        "method": "checkin",
        "inputData": {
          "objects": "{{data.checkinInput}}"
        },
        "outputData": {
          "checkinPartialErrors": "partialErrors"
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "checkinFailureSingle"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "checkinFailureMultiple"
            }
          ]
        }
      },
      "performCancelCheckout": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-Reservation",
        "method": "cancelCheckout",
        "inputData": {
          "objects": "{{data.cancelCheckoutInput}}"
        },
        "outputData": {
          "cancelCheckOutPartialErrors": "partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{ctx.mselected}}"
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "cancelCheckoutSuccess"
            }
          ],
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cancelCheckoutFailureSingle"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cancelCheckoutFailureMultiple"
            }
          ]
        }
      },
      "leaveConfirmation": {
        "actionType": "JSFunctionAsync",
        "method": "leaveConfirmation",
        "events": {
          "success": [
            {
              "name": "retrieveSelectedObjects"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "switchToListView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "ListView"
        }
      },
      "switchToTableView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "TableView"
        }
      },
      "switchToSummaryView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "SummaryView"
        }
      },
      "switchToTableSummaryView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "TableSummaryView"
        }
      },
      "switchToImageView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "ImageView"
        }
      },
      "switchToTreeView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "TreeView"
        }
      },
      "switchToTreeSummaryView": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "TreeSummaryView"
        }
      },
      "saveEditsAndCheckin": {
        "actionType": "JSFunctionAsync",
        "method": "saveEdits",
        "deps": "js/editHandlerService",
        "inputData": {},
        "events": {
          "success": [
            {
              "name": "retrieveCheckinInputs"
            }
          ]
        }
      },
      "saveEdits": {
        "actionType": "JSFunction",
        "method": "updateRedlineProps",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {},
        "events": {
          "success": [
            {
              "name": "save.performOperation"
            }
          ]
        }
      },
      "performSaveOperation": {
        "actionType": "JSFunctionAsync",
        "method": "saveEdits",
        "deps": "js/editHandlerService",
        "inputData": {},
        "events": {
          "success": [
            {
              "name": "updateURLParam"
            }
          ]
        }
      },
      "createTableProperty": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2016-04-DataManagement",
        "method": "getInitialTableRowData",
        "inputData": {
          "owningObject": "{{ctx.TablePropertyInitialRowDataInput.owningObject}}",
          "tablePropertyName": "{{ctx.TablePropertyInitialRowDataInput.tablePropertyName}}"
        },
        "outputData": {
          "tableRows": ""
        },
        "events": {
          "success": [
            {
              "name": "TablePropertyInitialRowData.createSuccessful",
              "eventData": {
                "tableRowData": "{{data.tableRows}}"
              }
            }
          ]
        }
      },
      "duplicateTableProperty": {
        "actionType": "JSFunction",
        "method": "duplicateRowOnTable",
        "deps": "js/tablePropertyDuplicateService",
        "inputData": {
          "selectedVMO": "{{ctx.tablePropertyEditData}}"
        }
      },
      "removeTableProperty": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "TablePropertyRowData.remove",
              "eventData": {
                "selectedObjects": "{{ctx.TablePropertySelection.selectedObjects}}"
              }
            }
          ]
        }
      },
      "createNameValuePropertyXRT": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0NameValueCreate",
          "location": "aw_toolsAndInfo"
        }
      },
      "createNameValueProperty": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0NameValueCreate",
          "location": "aw_toolsAndInfo"
        }
      },
      "toggleCommandLabels": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/commandLabelToggleService",
        "inputData": {},
        "events": {
          "success": [
            {
              "name": "commandBarResized"
            }
          ]
        }
      },
      "removeNameValueProperty": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "NameValueRowData.remove",
              "eventData": {
                "selectedObjects": "{{ctx.NameValueSelection.selectedObjects}}"
              }
            }
          ]
        }
      },
      "Awp0ObjectInfoCommandAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ObjectInfo",
          "location": "aw_toolsAndInfo"
        }
      },
      "Awp0IdDispRuleAdminInfoCommandAction": {
        "actionType": "JSFunction",
        "method": "setUnSetInContextIdDisplayRule",
        "deps": "js/idDisplayRuleMgmntUtils",
        "inputData": {
          "context": {
            "idDisplayRuleContext": "{{commandContext.vmo}}"
          }
        },
        "outputData": {
          "isIdDispRuleInfoReadyToLaunch": ""
        },
        "events": {
          "success": [
            {
              "name": "idDisplayRule.contextSet",
              "condition": "data.isIdDispRuleInfoReadyToLaunch === true"
            }
          ]
        }
      },
      "launchIdDispRuleInfoPanelAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0IdDispRuleAdminInfo",
          "location": "aw_navigation"
        }
      },
      "addProfilePicture": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0AddProfilePicture",
          "location": "aw_toolsAndInfo"
        }
      },
      "Awp0ChangePasswordCommandAction": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ChangePassword",
          "location": "aw_toolsAndInfo"
        }
      },
      "Awp0SelectAllCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "primaryWorkarea.selectAction",
              "eventData": {
                "selectAll": true
              }
            }
          ]
        }
      },
      "Awp0DeselectAllCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "primaryWorkarea.selectAction",
              "eventData": {
                "selectAll": false
              }
            }
          ]
        }
      },
      "Awp0SelectAllObjectSetCommandAction": {
        "actionType": "JSFunction",
        "method": "selectAll",
        "deps": "js/dataProviderFactory",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}"
        }
      },
      "Awp0DeselectAllObjectSetCommandAction": {
        "actionType": "JSFunction",
        "method": "selectNone",
        "deps": "js/dataProviderFactory",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}"
        }
      },
      "Awp0EnableMultiSelectCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "primaryWorkarea.multiSelectAction",
              "eventData": {
                "multiSelect": true
              }
            }
          ]
        }
      },
      "Awp0DisableMultiSelectCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "primaryWorkarea.multiSelectAction",
              "eventData": {
                "multiSelect": false
              }
            }
          ]
        }
      },
      "Awp0EnableMultiSelectObjectSetCommandAction": {
        "actionType": "JSFunction",
        "method": "dataProviderEnableMultiSelect",
        "deps": "js/dataProviderFactory",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}"
        }
      },
      "Awp0DisableMultiSelectObjectSetCommandAction": {
        "actionType": "JSFunction",
        "method": "dataProviderDisableMultiSelect",
        "deps": "js/dataProviderFactory",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}"
        }
      },
      "registerAddContext": {
        "actionType": "JSFunction",
        "method": "updateAddObjectContext",
        "deps": "js/addObjectUtils",
        "inputData": {
          "0": {
            "types": "{{ctx.state.params.cmdArg}}",
            "showConfiguredRevision": "{{ctx.search.criteria.showConfiguredRev}}",
            "isConfRevPWAEnabledThroughPref": "{{data.preferences.AWC_display_configured_revs_for_pwa[0]}}"
          }
        },
        "events": {
          "success": [
            {
              "name": "addObject.ensureFilterTypesLoaded"
            },
            {
              "name": "addObject.open"
            }
          ]
        }
      },
      "ensureFilterTypesLoaded": {
        "actionType": "JSFunctionAsync",
        "method": "ensureModelTypesLoaded",
        "inputData": {
          "typeNames": "{{ctx.addObject.typeFilterNamesArray}}"
        },
        "deps": "soa/kernel/soaService"
      },
      "registerAddToContext": {
        "actionType": "JSFunction",
        "method": "updateAddObjectContext",
        "deps": "js/addObjectUtils",
        "inputData": {
          "0": {
            "target": "{{commandContext.vmo}}",
            "relationMap": "{{commandContext.modelTypeRelationListMap}}",
            "searchFilter": "{{commandContext.parameterMap.Awp0ShowAddObject.searchFilter}}",
            "panelActive": "{{ctx.activeToolsAndInfoCommand.commandId === 'Awp0ShowCreateObject'}}",
            "visibleTabs": "{{commandContext.parameterMap.Awp0ShowAddObject.visibleTabs}}",
            "objectSetSourceHasDataset": "{{commandContext.objectSetSourceHasDataset}}",
            "showConfiguredRevision": "{{commandContext.searchCriteria.showConfiguredRev}}"
          }
        },
        "events": {
          "success": [
            {
              "name": "addObject.ensureFilterTypesLoaded"
            },
            {
              "name": "addObject.openObjectSet"
            }
          ]
        }
      },
      "openAddPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ShowCreateObject",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "openAddPanelObjectSet": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ShowAddObject",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "Awp0DeleteCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmDeleteEvent",
              "condition": "(ctx.mselected && ctx.mselected.length === 1)"
            },
            {
              "name": "confirmMultipleDeleteEvent",
              "condition": "(ctx.mselected && ctx.mselected.length > 1)"
            }
          ]
        }
      },
      "Awp0ExportDeleteCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "exportExcel.removeColumn",
              "eventData": {
                "column": "{{commandContext.vmo}}"
              }
            }
          ]
        }
      },
      "performDelete": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": {
            "$adapt": "{{ctx.mselected}}"
          }
        },
        "outputData": {
          "deleteObjectsPartialErrors": "partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "deleteObjectsSingleFailureMessage"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "deleteObjectsMultipleFailureMessage"
            }
          ]
        }
      },
      "initiateDeleteAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "delete.initiateDeleteWithConfRevContext",
              "condition": "((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0)"
            },
            {
              "name": "delete.initiateRegularDeleteOperation",
              "condition": "!((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid ))"
            }
          ]
        }
      },
      "getSelObjsHavingUnderlyingItem": {
        "actionType": "JSFunction",
        "method": "cutInputs",
        "deps": "js/cutUtils",
        "inputData": {
          "isConfRevContext": "true"
        },
        "outputData": {
          "objsHavingUnderlyingItem": ""
        },
        "events": {
          "success": [
            {
              "name": "delete.haveConfRevsToCut",
              "condition": "data.objsHavingUnderlyingItem.length !== 0"
            },
            {
              "name": "delete.initiateUnlinkDeleteOperation",
              "condition": "data.objsHavingUnderlyingItem.length === 0"
            }
          ]
        }
      },
      "getUnderlyingObjsForConfRevs": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2020-05-DataManagement",
        "method": "getRelatedObjsForConfiguredRevision",
        "deps": "js/cutUtils",
        "inputData": {
          "input": "{{data.objsHavingUnderlyingItem}}"
        },
        "outputData": {
          "underlyingObjsInfo": "response"
        },
        "events": {
          "success": [
            {
              "name": "delete.cutUnderlyingItemFromParent"
            }
          ]
        }
      },
      "cutConfRevsFromTheirItem": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "deps": "js/cutUtils",
        "inputData": {
          "inputData": "{{data.underlyingObjsInfo}}"
        },
        "events": {
          "success": [
            {
              "name": "delete.initiateUnlinkDeleteOperation"
            }
          ]
        }
      },
      "performDeleteWithConfRevContext": {
        "actionType": "JSFunctionAsync",
        "method": "executePerformUnlinkDelete",
        "deps": "js/cutUtils",
        "inputData": {
          "selectedObjects": {
            "$adapt": "{{ctx.mselected}}"
          },
          "isConfRevContextApplied": "{{((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0)}}"
        },
        "outputData": {
          "returnMsg": "",
          "deleteObjectsPartialErrors": "partialErrors",
          "objectsFailedToDelete": "{{function:getDeleteObjectsPartialErrors}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            }
          ],
          "failure": [
            {
              "name": "confirmSingleCutOrCancelEvent",
              "condition": "data.objectsFailedToDelete.totalSelected === 1"
            },
            {
              "name": "confirmMultipleCutOrCancelEvent",
              "condition": "data.objectsFailedToDelete.totalSelected > 1"
            }
          ]
        }
      },
      "performUnlinkAndDelete": {
        "actionType": "JSFunctionAsync",
        "method": "executePerformUnlinkDelete",
        "deps": "js/cutUtils",
        "inputData": {
          "selectedObjects": {
            "$adapt": "{{ctx.mselected}}"
          },
          "isConfRevContextApplied": "{{((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0)}}"
        },
        "outputData": {
          "returnMsg": "",
          "deleteObjectsPartialErrors": "partialErrors",
          "objectsFailedToDelete": "{{function:getDeleteObjectsPartialErrors}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "condition": "data.returnMsg !== 'ServiceUnavailable' && ctx.pselected",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedCutInput}}",
                "createdObjects": "",
                "childObjects": "{{ctx.mselected}}"
              }
            },
            {
              "name": "primaryWorkarea.reset",
              "condition": "data.returnMsg !== 'ServiceUnavailable'"
            },
            {
              "name": "performDelete",
              "condition": "data.returnMsg === 'ServiceUnavailable'"
            }
          ],
          "failure": [
            {
              "name": "confirmSingleCutOrCancelEvent",
              "condition": "!(ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0) && data.objectsFailedToDelete.totalSelected === 1"
            },
            {
              "name": "confirmMultipleCutOrCancelEvent",
              "condition": "!(ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0) && data.objectsFailedToDelete.totalSelected > 1"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "deleteObjectsSingleFailureMessage",
              "condition": "ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0"
            }
          ]
        }
      },
      "copyObject": {
        "actionType": "Copy",
        "method": "copyUrlToClipboard",
        "inputData": {
          "objectToCopy": "{{ctx.mselected}}",
          "copyType": "Object"
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "copySingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "copyMultipleSuccessful"
            }
          ]
        }
      },
      "pasteContentsFromClipboard": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/pasteService",
        "inputData": {
          "targetObject": "{{ctx.selected}}",
          "sourceObjects": {
            "$adapt": "{{ctx.awClipBoardProvider}}"
          },
          "relationType": ""
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selected}}"
                ],
                "createdObjects": "{{function:adaptedClipboardObjectsInput}}"
              }
            }
          ],
          "failure": [
            {
              "name": "cdm.relatedModified",
              "condition": "errorCode.code === 6007 || errorCode.code === 35010 || errorCode.code === 89009",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selected}}"
                ],
                "createdObjects": "{{function:adaptedClipboardObjectsInput}}"
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.awClipBoardProvider.length === 1",
              "message": "pasteSuccessMessage"
            },
            {
              "condition": "ctx.awClipBoardProvider.length > 1",
              "message": "pasteMultipleSuccessMessage"
            }
          ]
        }
      },
      "getModelTypeRelationForPaste": {
        "actionType": "JSFunction",
        "method": "getModelTypeRelationsWithValidSourceObjects",
        "deps": "js/xrtObjectSetService",
        "inputData": {
          "sourceObjects": {
            "$adapt": "{{ctx.awClipBoardProvider}}"
          },
          "modelTypeRelations": "{{commandContext.modelTypeRelationListMap}}",
          "showConfiguredRevision": "{{commandContext.searchCriteria.showConfiguredRev}}"
        },
        "outputData": {
          "modelTypeRelationObject": ""
        },
        "events": {
          "success": [
            {
              "name": "pasteToObjectSet"
            }
          ]
        }
      },
      "pasteContentsFromClipboardToObjectSet": {
        "actionType": "JSFunction",
        "method": "executeWithMultipleRelations",
        "deps": "js/pasteService",
        "inputData": {
          "targetObject": {
            "$adapt": "{{ctx.selected}}"
          },
          "relationTypeToSources": "{{data.modelTypeRelationObject.relationTypeToSources}}"
        },
        "outputData": {
          "response": ""
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedPasteInput}}",
                "createdObjects": "{{data.modelTypeRelationObject.validSourceObjects}}"
              }
            }
          ],
          "failure": [
            {
              "name": "cdm.relatedModified",
              "condition": "errorCode.code === 6007 || errorCode.code === 35010 || errorCode.code === 89009",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedPasteInput}}",
                "createdObjects": "{{data.modelTypeRelationObject.validSourceObjects}}"
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.modelTypeRelationObject.validSourceObjects.length === 1",
              "message": "pasteToObjectSetSuccessMessage"
            },
            {
              "condition": "data.modelTypeRelationObject.validSourceObjects.length > 1",
              "message": "pasteToObjectSetMultipleSuccessMessage"
            }
          ]
        }
      },
      "activateExportToExcelPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ExportToExcel",
          "location": "aw_toolsAndInfo",
          "context": {
            "providerName": "{{commandContext.providerName}}",
            "dataProvider": "{{commandContext.dataProvider}}",
            "columnProvider": "{{commandContext.columnProvider}}",
            "searchCriteria": "{{commandContext.searchCriteria}}",
            "displayTitle": "{{commandContext.displayTitle}}",
            "vmo": "{{commandContext.vmo}}"
          }
        }
      },
      "exportSelectedColumnsAddPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awp0ExportAddPropertiesSub",
                "title": "{{i18n.exportAddPropertiesTitle}}",
                "providerName": "{{ctx.panelContext.providerName}}",
                "dataProvider": "{{ctx.panelContext.dataProvider}}",
                "columnProvider": "{{ctx.panelContext.columnProvider}}",
                "searchCriteria": "{{ctx.panelContext.searchCriteria}}",
                "isolateMode": true,
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "exportMoveDown": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0ExportMoveDown"
            }
          ]
        }
      },
      "exportMoveUp": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0ExportMoveUp"
            }
          ]
        }
      },
      "arrangeShowAll": {
        "actionType": "JSFunction",
        "method": "showAll",
        "inputData": {
          "0": "{{context.arrangeData}}"
        },
        "deps": "js/tcarrange.service"
      },
      "arrangeReset": {
        "actionType": "JSFunction",
        "method": "reset",
        "inputData": {
          "0": "{{context.arrangeData}}"
        },
        "deps": "js/arrange.service"
      },
      "arrangeMoveUp": {
        "actionType": "JSFunction",
        "method": "moveUp",
        "deps": "js/arrange.service",
        "inputData": {
          "0": "{{context.arrangeData}}",
          "1": "{{context.dataProviders.dataProviderColumnConfigs}}"
        },
        "events": {
          "success": [
            {
              "name": "dataProviderColumnConfigs.focusSelection"
            }
          ]
        }
      },
      "arrangeMoveDown": {
        "actionType": "JSFunction",
        "method": "moveDown",
        "deps": "js/arrange.service",
        "inputData": {
          "0": "{{context.arrangeData}}",
          "1": "{{context.dataProviders.dataProviderColumnConfigs}}"
        },
        "events": {
          "success": [
            {
              "name": "dataProviderColumnConfigs.focusSelection"
            }
          ]
        }
      },
      "arrangeAddColumns": {
        "actionType": "JSFunction",
        "method": "addColumns",
        "deps": "js/arrange.service",
        "inputData": {
          "0": "{{context.arrangeData}}",
          "1": "{{context.dataProviders}}"
        }
      },
      "arrangeRemoveColumns": {
        "actionType": "JSFunction",
        "method": "removeColumns",
        "deps": "js/arrange.service",
        "inputData": {
          "0": "{{context.arrangeData}}",
          "1": "null",
          "2": "{{context.dataProviders}}"
        }
      },
      "arrangeViewConfigs": {
        "actionType": "JSFunction",
        "method": "show",
        "inputData": {
          "data": {
            "declView": "viewColumnConfigs",
            "options": {
              "width": 195,
              "reference": "button[button-id='arrangeViewConfigs']",
              "hasArrow": true,
              "customClass": "aw-arrange-balloon",
              "clickOutsideToClose": true,
              "placement": [
                "bottom",
                "top",
                "left",
                "right"
              ]
            },
            "subPanelContext": {
              "savedColumnConfigs": "{{context.arrangeData.savedColumnConfigs}}"
            }
          }
        },
        "deps": "js/popupService"
      },
      "deleteNamedColumnConfigCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "arrangePanel.deleteNamedColumnConfig",
              "eventData": {
                "namedColumnConfig": "{{commandContext.vmo}}"
              }
            }
          ]
        }
      },
      "openChangeOwnerPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ChangeOwner",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "setCompactLayout": {
        "actionType": "JSFunction",
        "method": "setLayout",
        "inputData": {
          "0": "compact"
        },
        "deps": "js/layout.service"
      },
      "setComfyLayout": {
        "actionType": "JSFunction",
        "method": "setLayout",
        "inputData": {
          "0": "comfy"
        },
        "deps": "js/layout.service"
      },
      "showFavorites": {
        "actionType": "Navigate",
        "navigateTo": "myFavorites",
        "navigationParams": {}
      },
      "showHelp": {
        "actionType": "Navigate",
        "navigateIn": "newTab",
        "navigateTo": "https://docs.sw.siemens.com/en-US/product/282219420/doc/PL20211116078066359.xid1899337/html/xid1899339",
        "navigationParams": {}
      },
      "showHelpAbout": {
        "actionType": "JSFunction",
        "method": "showHelpAbout",
        "deps": "js/helpAboutService"
      },
      "openInNewTabCellTitle": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{commandContext.vmo}}",
            "path": "uid"
          }
        },
        "navigateIn": "newTab"
      },
      "openInNewWindowCellTitle": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{commandContext.vmo}}",
            "path": "uid"
          }
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "openArrangePanelBasic": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel2",
        "deps": "js/commandPanel.service",
        "inputData": {
          "inputObj": {
            "commandId": "arrange",
            "location": "aw_toolsAndInfo",
            "config": {
              "width": "EXTRAWIDE"
            }
          }
        }
      },
      "processArrangeSettings": {
        "actionType": "JSFunction",
        "method": "processArrangeSettings",
        "deps": "js/columnArrangeService",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}",
          "gridId": "{{commandContext.gridId}}",
          "gridOptions": "{{commandContext.gridOptions}}"
        },
        "events": {
          "success": [
            {
              "name": "openArrangePanelBasic"
            }
          ]
        }
      },
      "isDirtyOnEditLocalization": {
        "actionType": "JSFunctionAsync",
        "method": "isDirty",
        "outputData": {
          "dirtyOnEditLocalization": "isDirty"
        },
        "events": {
          "success": [
            {
              "condition": "!data.dirtyOnEditLocalization",
              "name": "checkEditInProgressBeforeEditLocalization"
            },
            {
              "condition": "data.dirtyOnEditLocalization",
              "name": "leaveConfirmationBeforeEditLocalization"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "leaveConfirmationBeforeEditLocalization": {
        "actionType": "JSFunctionAsync",
        "method": "leaveConfirmation",
        "events": {
          "success": [
            {
              "name": "openEditLocalizationSinglePanel"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "editInProgressBeforeEditLocalization": {
        "actionType": "JSFunction",
        "method": "editInProgress",
        "outputData": {
          "editInProgress": "editInProgress"
        },
        "events": {
          "success": [
            {
              "condition": "!data.editInProgress",
              "name": "openEditLocalizationSinglePanel"
            },
            {
              "condition": "data.editInProgress",
              "name": "cancelEditsBeforeEditLocalization"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "cancelEditsBeforeEditLocalization": {
        "actionType": "JSFunction",
        "method": "cancelEdits",
        "deps": "js/editHandlerService",
        "events": {
          "success": [
            {
              "name": "openEditLocalizationSinglePanel"
            }
          ]
        }
      },
      "openEditLocalizationSinglePanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "editLocalizationSingleProperty",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}",
          "config": {
            "width": "WIDE"
          }
        }
      },
      "addorRemoveLocalesAction": {
        "actionType": "JSFunction",
        "method": "show",
        "inputData": {
          "data": {
            "declView": "viewLocaleLanguages",
            "options": {
              "width": 195,
              "reference": ".aw-commandId-Awp0AddorRemoveLocales",
              "hasArrow": true,
              "customClass": "aw-arrange-balloon",
              "clickOutsideToClose": true,
              "placement": [
                "bottom",
                "top",
                "left",
                "right"
              ]
            },
            "subPanelContext": {
              "languageProps": "{{context}}"
            }
          }
        },
        "deps": "js/popupService"
      },
      "removeLocaleAction": {
        "actionType": "JSFunction",
        "method": "fireRemoveLocaleEvent",
        "inputData": {
          "propertyName": "{{commandContext.prop.propertyName}}"
        },
        "deps": "js/multiLanguagePropertyService"
      },
      "checkIsDSMUsableForDownload": {
        "actionType": "JSFunction",
        "method": "isDSMUsable",
        "deps": "js/dsmUtils",
        "outputData": {
          "isDSMUsableFlag": ""
        },
        "events": {
          "success": [
            {
              "condition": "data.isDSMUsableFlag",
              "name": "getModelObjectFromVMO"
            },
            {
              "condition": "!data.isDSMUsableFlag",
              "name": "getSelObjsForMultipleFileDwnld"
            }
          ]
        }
      },
      "getModelObjectFromVMO": {
        "actionType": "JSFunction",
        "method": "getObjects",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "uid": {
            "$adapt": "{{ctx.mselected}}",
            "path": "uid"
          }
        },
        "outputData": {
          "datasetModelObject": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.getRefListForMultipleFileDwnldForDSM"
            }
          ]
        }
      },
      "getRefListForMultipleFileDwnldForDSM": {
        "actionType": "JSFunction",
        "method": "getObjects",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "dataset": {
            "$adapt": "{{data.datasetModelObject}}",
            "path": "props.ref_list.dbValues"
          }
        },
        "outputData": {
          "modelObject": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.getPlmdFileTicketForMultipleDwnldForDSM"
            }
          ]
        }
      },
      "getPlmdFileTicketForMultipleDwnldForDSM": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Core-2014-10-FileManagement",
        "method": "getPlmdFileTicketForDownload",
        "inputData": {
          "infos": "{{function:getDsmDownloadInfo}}"
        },
        "outputData": {
          "downloadedFile": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.openFileFromTicketForDSM"
            }
          ]
        },
        "deps": "js/dsmUtils"
      },
      "removeProjectCellCmdAction": {
        "actionType": "JSFunction",
        "method": "execute",
        "inputData": {
          "vmo": "{{commandContext.vmo}}",
          "scope": "{{$parent.$$childHead}}"
        },
        "deps": "js/removeObjectCellCommandHandler"
      },
      "preCheckoutViewer": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "uvCommand.executed",
              "eventData": {
                "callback": "preCheckout",
                "vmo": "{{ctx.viewerContext.vmo}}"
              }
            }
          ]
        }
      },
      "preCancelCheckoutViewer": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "uvCommand.executed",
              "eventData": {
                "callback": "preCancelCheckout",
                "vmo": "{{ctx.viewerContext.vmo}}"
              }
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "Dataset",
              "properties": [
                {
                  "name": "is_modifiable"
                },
                {
                  "name": "fnd0IsCheckoutable"
                },
                {
                  "name": "last_mod_date"
                }
              ]
            }
          ]
        }
      },
      "preCheckinViewer": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "uvCommand.executed",
              "eventData": {
                "callback": "preCheckin",
                "vmo": "{{ctx.viewerContext.vmo}}"
              }
            }
          ]
        }
      },
      "fullViewModeAction": {
        "actionType": "JSFunction",
        "method": "toggleViewerFullScreenMode",
        "deps": "js/fullViewModeService",
        "inputData": {}
      },
      "uvWordWrapAction": {
        "actionType": "JSFunction",
        "method": "toggleWordWrap",
        "deps": "js/Awp0ViewerGalleryUtils"
      },
      "showDataSetForUV": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.viewerContext.vmo.uid}}"
        }
      },
      "getModelObjectFromVMOForUV": {
        "actionType": "JSFunction",
        "method": "getObjects",
        "deps": "soa/kernel/clientDataModel",
        "inputData": {
          "dataset": "{{ctx.viewerContext.vmo.props.ref_list.dbValues}}"
        },
        "outputData": {
          "modelObject": ""
        },
        "events": {
          "success": [
            {
              "name": "dataset.downloadSelectedDataset"
            }
          ]
        }
      },
      "openInNewTabForUV": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.viewerContext.vmo.uid}}"
        },
        "navigateIn": "newTab"
      },
      "openInNewWindowForUV": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.viewerContext.vmo.uid}}"
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "changeObjectSetListView": {
        "actionType": "JSFunction",
        "method": "set",
        "deps": "lodash",
        "inputData": {
          "0": "{{commandContext}}",
          "1": "currentDisplay",
          "2": "listDisplay"
        }
      },
      "changeObjectSetTableView": {
        "actionType": "JSFunction",
        "method": "set",
        "deps": "lodash",
        "inputData": {
          "0": "{{commandContext}}",
          "1": "currentDisplay",
          "2": "tableDisplay"
        }
      },
      "changeObjectSetCompareView": {
        "actionType": "JSFunction",
        "method": "set",
        "deps": "lodash",
        "inputData": {
          "0": "{{commandContext}}",
          "1": "currentDisplay",
          "2": "compareDisplay"
        }
      },
      "changeObjectSetImageView": {
        "actionType": "JSFunction",
        "method": "set",
        "deps": "lodash",
        "inputData": {
          "0": "{{commandContext}}",
          "1": "currentDisplay",
          "2": "thumbnailDisplay"
        }
      },
      "setActiveLayoutAsTopToBottom": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcTopToBottomLayout"
        }
      },
      "setActiveLayoutAsBottomToTop": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcBottomToTopLayout"
        }
      },
      "setActiveLayoutAsRightToLeft": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcRightToLeftLayout"
        }
      },
      "setActiveLayoutAsLeftToRight": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcLeftToRightLayout"
        }
      },
      "setActiveLayoutAsIncremental": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcIncrementalLayout"
        }
      },
      "setActiveLayoutAsOrganic": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcOrganicLayout"
        }
      },
      "setActiveLayoutAsBalloon": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcBalloonLayout"
        }
      },
      "setActiveLayoutAsSnake": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "GcSnakeLayout"
        }
      },
      "startEdit": {
        "actionType": "JSFunction",
        "method": "startEdit",
        "deps": "js/graphCommandService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}"
        }
      },
      "exitEdit": {
        "actionType": "JSFunction",
        "method": "exitEdit",
        "deps": "js/graphCommandService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "legendState": "{{ctx.graph.legendState}}"
        }
      },
      "GcShowLegendPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "graphLegend",
          "location": "aw_toolsAndInfo"
        }
      },
      "toggleUseTransparency": {
        "actionType": "JSFunction",
        "method": "toggleUseTransparency",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer"
        }
      },
      "setNavigationModeRotate": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "navigationModeStr": "ROTATE"
        }
      },
      "setNavigationModePan": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "navigationModeStr": "PAN"
        }
      },
      "setNavigationModeZoom": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "navigationModeStr": "ZOOM"
        }
      },
      "setNavigationModeAreaSelect": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "navigationModeStr": "AREA_SELECT"
        }
      },
      "setUvNavigationModeRotate": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "navigationModeStr": "ROTATE"
        }
      },
      "setUvNavigationModePan": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "navigationModeStr": "PAN"
        }
      },
      "setUvNavigationModeZoom": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "navigationModeStr": "ZOOM"
        }
      },
      "showAwv0ViewerSettingsPanel": {
        "actionType": "JSFunction",
        "method": "activateViewerCommandPanel",
        "deps": "js/viewerContext.service",
        "inputData": {
          "commandId": "Awv0ViewerSettings",
          "location": "aw_toolsAndInfo",
          "viewerCtxNamespace": "awDefaultViewer"
        }
      },
      "executeOrientIsometricCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "ISOMETRIC"
        }
      },
      "executeOrientTrimetricCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "TRIMETRIC"
        }
      },
      "executeOrientTopCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "TOP"
        }
      },
      "executeOrientFrontCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "FRONT"
        }
      },
      "executeOrientRightCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "RIGHT"
        }
      },
      "executeOrientBackCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "BACK"
        }
      },
      "executeOrientBottomCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "BOTTOM"
        }
      },
      "executeOrientLeftCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "cameraOrientation": "LEFT"
        }
      },
      "UvexecuteOrientIsometricCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "ISOMETRIC"
        }
      },
      "UvexecuteOrientTrimetricCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "TRIMETRIC"
        }
      },
      "UvexecuteOrientTopCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "TOP"
        }
      },
      "UvexecuteOrientFrontCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "FRONT"
        }
      },
      "UvexecuteOrientRightCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "RIGHT"
        }
      },
      "UvexecuteOrientBackCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "BACK"
        }
      },
      "UvexecuteOrientBottomCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "BOTTOM"
        }
      },
      "UvexecuteOrientLeftCommand": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awUniversalViewer",
          "cameraOrientation": "LEFT"
        }
      },
      "executeAllOnCommand": {
        "actionType": "JSFunction",
        "method": "executeAllOnCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer"
        }
      },
      "executeAllOffCommand": {
        "actionType": "JSFunction",
        "method": "executeAllOffCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer"
        }
      },
      "executeSelectedOffCommand": {
        "actionType": "JSFunction",
        "method": "executeSelectedOffCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "allSelectedCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}",
          "partitionSelectedCSIDS": "{{ctx.awDefaultViewer.viewerPartitionSelectionCSIDS}}"
        }
      },
      "executeSelectedOnCommand": {
        "actionType": "JSFunction",
        "method": "executeSelectedOnCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "allSelectedCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}",
          "partitionSelectedCSIDS": "{{ctx.awDefaultViewer.viewerPartitionSelectionCSIDS}}"
        }
      },
      "executeSelectedOnlyCommand": {
        "actionType": "JSFunction",
        "method": "executeSelectedOnlyCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "allSelectedCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}",
          "partitionSelectedCSIDS": "{{ctx.awDefaultViewer.viewerPartitionSelectionCSIDS}}"
        }
      },
      "executeContextOffCommand": {
        "actionType": "JSFunction",
        "method": "executeContextOffCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "allSelectedCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeContextOnCommand": {
        "actionType": "JSFunction",
        "method": "executeContextOnCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "allSelectedCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeContextOnlyCommand": {
        "actionType": "JSFunction",
        "method": "executeContextOnlyCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "allSelectedCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeSelectContextCommand": {
        "actionType": "JSFunction",
        "method": "executeSelectContextCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer",
          "contextCSIDS": "{{ctx.awDefaultViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeFitCommand": {
        "actionType": "JSFunction",
        "method": "executeFitCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer"
        }
      },
      "toggleUseTransparency_scv": {
        "actionType": "JSFunction",
        "method": "toggleUseTransparency",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer"
        }
      },
      "confirmRemoveAnalysisResult": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "showConfirmRemoveAnalysisResultMessage"
            }
          ]
        }
      },
      "removeAnalysisResultAction": {
        "actionType": "JSFunction",
        "method": "executeRemoveAnalysisResultCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awDefaultViewer"
        }
      },
      "confirmRemoveAnalysisResult_scv": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "showConfirmRemoveAnalysisResultMessage_scv"
            }
          ]
        }
      },
      "removeAnalysisResultAction_scv": {
        "actionType": "JSFunction",
        "method": "executeRemoveAnalysisResultCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer"
        }
      },
      "setNavigationModeRotate_scv": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "navigationModeStr": "ROTATE"
        }
      },
      "setNavigationModePan_scv": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "navigationModeStr": "PAN"
        }
      },
      "setNavigationModeZoom_scv": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "navigationModeStr": "ZOOM"
        }
      },
      "setNavigationModeAreaSelect_scv": {
        "actionType": "JSFunction",
        "method": "setNavigationMode",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "navigationModeStr": "AREA_SELECT"
        }
      },
      "showAwv0ViewerSettingsPanel_scv": {
        "actionType": "JSFunction",
        "method": "activateViewerCommandPanel",
        "deps": "js/viewerContext.service",
        "inputData": {
          "commandId": "Awv0ViewerSettings",
          "location": "aw_toolsAndInfo",
          "viewerCtxNamespace": "awStructureCompareViewer"
        }
      },
      "executeOrientIsometricCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "ISOMETRIC"
        }
      },
      "executeOrientTrimetricCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "TRIMETRIC"
        }
      },
      "executeOrientTopCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "TOP"
        }
      },
      "executeOrientFrontCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "FRONT"
        }
      },
      "executeOrientRightCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "RIGHT"
        }
      },
      "executeOrientBackCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "BACK"
        }
      },
      "executeOrientBottomCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "BOTTOM"
        }
      },
      "executeOrientLeftCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeViewOrientationCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "cameraOrientation": "LEFT"
        }
      },
      "executeAllOnCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeAllOnCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer"
        }
      },
      "executeAllOffCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeAllOffCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer"
        }
      },
      "executeSelectedOffCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeSelectedOffCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "allSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}",
          "partitionSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerPartitionSelectionCSIDS}}"
        }
      },
      "executeSelectedOnCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeSelectedOnCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "allSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}",
          "partitionSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerPartitionSelectionCSIDS}}"
        }
      },
      "executeSelectedOnlyCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeSelectedOnlyCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "allSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}",
          "partitionSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerPartitionSelectionCSIDS}}"
        }
      },
      "executeContextOffCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeContextOffCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "allSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeContextOnCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeContextOnCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "allSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeContextOnlyCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeContextOnlyCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "allSelectedCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeSelectContextCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeSelectContextCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer",
          "contextCSIDS": "{{ctx.awStructureCompareViewer.viewerSelectionCSIDS}}"
        }
      },
      "executeFitCommand_scv": {
        "actionType": "JSFunction",
        "method": "executeFitCommand",
        "deps": "js/viewerContext.service",
        "inputData": {
          "viewerContextNamespace": "awStructureCompareViewer"
        }
      },
      "showSnapShotViewData": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}",
          "page": "{{i18n.threeDPageTitle}}",
          "pageId": "tc_xrt_jt_viewer"
        }
      },
      "openSnapShotViewDataInNewTab": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}",
          "page": "{{i18n.threeDPageTitle}}",
          "pageId": "tc_xrt_jt_viewer"
        },
        "navigateIn": "newTab"
      },
      "openSnapShotViewDataInNewWindow": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}",
          "page": "{{i18n.threeDPageTitle}}",
          "pageId": "tc_xrt_jt_viewer"
        },
        "navigateIn": "newWindow"
      },
      "close3DSubCommandsToolbar": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "threeDViewer.hideSubCommandsToolbar",
              "eventData": {
                "viewerCtxNamespace": "{{commandContext.viewerCtxNamespace}}"
              }
            }
          ]
        }
      },
      "rotatePdfCWAction": {
        "actionType": "JSFunction",
        "method": "rotateCW",
        "deps": "js/pdfViewerUtils"
      },
      "rotatePdfCCWAction": {
        "actionType": "JSFunction",
        "method": "rotateCCW",
        "deps": "js/pdfViewerUtils"
      },
      "rotateCWAction": {
        "actionType": "JSFunction",
        "method": "rotateCW",
        "deps": "js/ImgViewer"
      },
      "rotateCCWAction": {
        "actionType": "JSFunction",
        "method": "rotateCCW",
        "deps": "js/ImgViewer"
      },
      "executeOpenInVisCommand": {
        "actionType": "JSFunction",
        "method": "executeOpenInVisCommand",
        "deps": "js/Awv0VisualizationService"
      },
      "getHomeFolderProperty": {
        "actionType": "JSFunction",
        "method": "getProperties",
        "deps": "soa/dataManagementService",
        "inputData": {
          "uids": [
            "{{ctx.user.uid}}"
          ],
          "propNames": [
            "home_folder"
          ]
        },
        "outputData": {
          "ctx.user": "{{dataParseDefinitions:updateUserCtx}}"
        },
        "events": {
          "success": [
            {
              "name": "showHomeFolder"
            }
          ]
        }
      },
      "showHomeFolder": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.user.props.home_folder.dbValues[0]}}",
          "cmdId": "{{commandContext.cmdId}}",
          "cmdArg": "{{commandContext.cmdArgs}}"
        }
      },
      "getUnPinInputs": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "unpinInput": ""
        },
        "events": {
          "success": [
            {
              "name": "unPinObject"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "getPinInputs": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "pinInput": ""
        },
        "events": {
          "success": [
            {
              "name": "pinObject"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "getPinDelegateInputs": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "pinDelegateInput": ""
        },
        "events": {
          "success": [
            {
              "name": "pinDelegateObject",
              "eventData": {
                "pinDelegateParams": "{{data.eventData.pinDelegateParamString}}"
              }
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "unpinSelectedObject": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2018-05-DataManagement",
        "method": "unpinObjects",
        "inputData": {
          "uidsToUnpin": [
            "{{data.unpinInput[0].uid}}"
          ],
          "returnGateway": false
        },
        "outputData": {},
        "events": {
          "success": [
            {
              "name": "cdm.updated",
              "eventData": {
                "updatedObjects": [
                  "{{data.unpinInput[0]}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "unpinFailure"
            }
          ]
        }
      },
      "pinSelectedObject": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2018-05-DataManagement",
        "method": "pinObjects",
        "inputData": {
          "input": [
            {
              "uid": "{{data.pinInput[0].uid}}",
              "actionParams": "",
              "templateId": ""
            }
          ]
        },
        "outputData": {},
        "events": {
          "success": [
            {
              "name": "cdm.updated",
              "eventData": {
                "updatedObjects": [
                  "{{data.pinInput[0]}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "pinFailure"
            }
          ]
        }
      },
      "pinSelectedObjectDelegateAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2018-05-DataManagement",
        "method": "pinObjects",
        "inputData": {
          "input": [
            {
              "uid": "{{data.pinDelegateInput[0].uid}}",
              "actionParams": "{{data.eventData.pinDelegateParams}}",
              "templateId": ""
            }
          ]
        },
        "outputData": {},
        "events": {
          "success": [
            {
              "name": "cdm.updated",
              "eventData": {
                "updatedObjects": [
                  "{{data.pinDelegateInput[0]}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "pinFailure"
            }
          ]
        }
      },
      "removeAllFilters": {
        "actionType": "JSFunction",
        "method": "removeAllFilters",
        "deps": "js/awColumnFilterService",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}",
          "columnProvider": "{{commandContext.columnProvider}}",
          "gridId": "{{commandContext.gridId}}"
        }
      },
      "toggleDynamicRowHeight": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "plTable.toggleDynamicRowHeight",
              "eventData": {
                "gridId": "{{commandContext.gridId}}"
              }
            }
          ]
        }
      },
      "setLightTheme": {
        "actionType": "JSFunction",
        "method": "setTheme",
        "inputData": {
          "0": "ui-lightTheme"
        },
        "deps": "js/theme.service"
      },
      "setDarkTheme": {
        "actionType": "JSFunction",
        "method": "setTheme",
        "inputData": {
          "0": "ui-darkTheme"
        },
        "deps": "js/theme.service"
      },
      "launchArrangePanel": {
        "actionType": "JSFunction",
        "deps": "js/compareService",
        "method": "openArrangePanel",
        "inputData": {
          "0": "{{gridOptions.columnDefs}}",
          "1": "{{gridOptions}}",
          "2": "{{gridId}}",
          "3": "{{columnConfigId}}",
          "4": "{{showFirstColumnInArrange}}"
        }
      },
      "Awp0TaskbarFullScreenToggleAction": {
        "actionType": "modifyCtx",
        "inputData": {
          "methodType": "register",
          "name": "taskbarfullscreen",
          "value": "{{!(ctx.taskbarfullscreen === 'true')}}"
        }
      },
      "goBack": {
        "actionType": "JSFunction",
        "method": "goBack",
        "deps": "js/locationNavigation.service"
      },
      "addObjectPanelSetPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addObjectPanelCommand.addObjectPanelSetPin"
            }
          ]
        }
      },
      "addObjectPanelSetUnPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addObjectPanelCommand.addObjectPanelSetUnPin"
            }
          ]
        }
      },
      "uiwidgetAddActivateCmdPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "assignProjectSub",
                "title": "{{i18n.addProjectButtonTitle}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "openArrangePanel": {
        "actionType": "JSFunction",
        "deps": "js/compareService",
        "method": "openArrangePanel",
        "inputData": {
          "0": "{{columns}}",
          "1": "{{gridOptions}}",
          "2": "{{localContext.columnProvider.columnConfigId}}",
          "3": null,
          "4": "{{showFirstColumnInArrange}}"
        }
      }
    },
    "conditions": {
      "DigitalAssetsPanelCommandCondition": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Pka0ArtwkDesignRevision' ) > -1 && ctx.aw_host_type.localeCompare('ADOBE') === 0"
      },
      "ImagePanelCommandCondition": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Ret0RetailProductRevision' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Ret02DCADRevision' ) > -1) && ctx.aw_host_type.localeCompare('ADOBE') === 0"
      },
      "OpenInIllustratorCondition": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.aw_host_type.localeCompare('ADOBE') !== 0 && ctx.isMobileOS !== true && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
      },
      "AddToFavoritesVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0AddToFavorites === true"
      },
      "RemoveFromFavoritesVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0RemoveFromFavorites === true"
      },
      "IsHostingEnabled": {
        "expression": "ctx.aw_hosting_enabled"
      },
      "OpenHostedEnabled": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.aw_hosting_enabled",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.aw_hosting_config.SuppressSendToCommand",
              "$query": {
                "$eq": false
              }
            },
            {
              "$or": [
                {
                  "$source": "ctx.aw_hosting_hostServices.HS_HOST_OPEN__VERSION_2014_02",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "ctx.aw_hosting_hostServices.HS_HOST_OPEN__VERSION_2015_10",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": "{{ctx.aw_hosting_sendToTypes}}"
                }
              }
            }
          ]
        }
      },
      "OpenNewViewHostedEnabled": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.aw_hosting_enabled",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.aw_hosting_config.SuppressSendToNewViewCommand",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.aw_hosting_hostServices.HS_HOST_OPEN_NEW_VIEW_SVC__VERSION_2016_04",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": "{{ctx.aw_hosting_sendToTypes}}"
                }
              }
            }
          ]
        }
      },
      "AddComponentHostedEnabled": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.aw_hosting_enabled",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.aw_hosting_config.SuppressAddComponentHostedCommand",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.aw_hosting_hostServices.HS_HOST_ADD_COMPONENT__VERSION_2014_02",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": "{{ctx.aw_hosting_sendToTypes}}"
                }
              }
            }
          ]
        }
      },
      "alertReplaceCommandVisible": {
        "expression": "ctx.visibleServerCommands.Awp0ReplaceDataset && ctx.selected.props.ref_list.dbValues.length > 0"
      },
      "isDatasetSelected": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.selected.modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Dataset"
                ]
              }
            }
          ]
        }
      },
      "cmdShowAlternateIdCommand": {
        "expression": "ctx.visibleServerCommands.Awp0CreateAlternateID === true"
      },
      "cmdShowAliasIdCommand": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.selected.modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Item"
                ]
              }
            },
            {
              "$source": "ctx.selected.modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "ItemRevision"
                ]
              }
            }
          ]
        }
      },
      "cmdShowDisplayRuleCommand": {
        "expression": "ctx.sublocation.clientScopeURI === 'Awp0MyIdDisplayRules'"
      },
      "isDisableRedLineCmdVisible": {
        "expression": "ctx.isRedLineMode === 'true' "
      },
      "isRedLineFeatureEnabled": {
        "expression": "ctx.preferences.AWC_Enable_RedLine_feature[0] === 'true' "
      },
      "isRedLineCmdVisible": {
        "expression": {
          "$query": {
            "$and": [
              {
                "$source": "ctx.selected",
                "$query": {
                  "$source": "modelType.typeHierarchyArray",
                  "$query": {
                    "$in": [
                      "ItemRevision"
                    ]
                  }
                }
              },
              {
                "$source": "ctx.locationContext['ActiveWorkspace:SubLocation']",
                "$query": {
                  "$eq": "showObject"
                }
              }
            ]
          }
        }
      },
      "signOutVisible": {
        "expression": "!ctx.signOutDisabled"
      },
      "goHomeVisibility": {
        "expression": "!ctx.goHomeDisabled && !ctx.embeddedLocationView"
      },
      "cutVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && (ctx.relationContext.relationInfo[0].relationType !== 'ps_parents' && ctx.relationContext.relationInfo[0].relationType !== 'Awp0ReferencesProvider')"
      },
      "signOutVisibility": {
        "expression": "ctx.sublocation.nameToken === 'showGateway' && !ctx.signOutDisabled"
      },
      "Awp0FullScreenCmdCondition": {
        "expression": "!ctx.fullscreenDisabled && !ctx.fullscreen && !ctx.hostingFullscreenDisabled"
      },
      "Awp0ExitFullScreenCmdCondition": {
        "expression": "ctx.fullscreenDisabled !== true && ctx.fullscreen === true"
      },
      "saveAsorRevise": {
        "expression": "ctx.visibleServerCommands.Awp0ShowSaveAs === true"
      },
      "saveAsorOnly": {
        "expression": "ctx.visibleServerCommands.Awp0ShowSaveAs === true"
      },
      "revise": {
        "expression": "ctx.visibleServerCommands.Awp0ShowSaveAs === true"
      },
      "cmdShowObjectDevConfigCommandActive": {
        "expression": "ctx.sublocation.historyNameToken==='showObjectDev'"
      },
      "checkoutVisibility": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.visibleServerCommands.Awp0Checkout",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": {
                "$adapt": "ctx.mselected"
              },
              "$query": {
                "$source": "props.owning_site.dbValues.0.length",
                "$query": {
                  "$isNull": true
                }
              }
            }
          ]
        }
      },
      "checkinVisibility": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.visibleServerCommands.Awp0Checkin",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": {
                "$adapt": "ctx.mselected"
              },
              "$query": {
                "$source": "props.owning_site.dbValues.0.length",
                "$query": {
                  "$isNull": true
                }
              }
            }
          ]
        }
      },
      "cancelCheckoutVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0CancelCheckout === true"
      },
      "checkSelections": {
        "expression": "(ctx.mselected && ctx.mselected.length > 0)"
      },
      "cmdOpenBaseVisibleCondition": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && ( 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' !== ctx.locationContext['ActiveWorkspace:Location'] || ( ctx.state.processed && ctx.selected.uid !== ctx.state.processed.uid ) )"
      },
      "cmdOpenFromCommandArgsActiveCondition": {
        "expression": "ctx.selected && commandContext && commandContext.vmo && ctx.selected.uid !== commandContext.vmo.uid"
      },
      "cmdOpenInNewTabCommandActive": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && !ctx.aw_hosting_enabled"
      },
      "cmdOpenInNewWindowCommandActive": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && !ctx.aw_hosting_enabled"
      },
      "cmdAwp0ShowObjectCellBaseVisibleCondition": {
        "expression": {
          "$source": {
            "$adapt": "commandContext.vmo"
          },
          "$query": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$notin": [
                "Dataset"
              ]
            }
          }
        }
      },
      "cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Folder' ) === -1"
      },
      "cmdAwp0ShowObjectCellDatasetBaseVisibleCondition": {
        "expression": {
          "$source": {
            "$adapt": "commandContext.vmo"
          },
          "$query": {
            "$and":[
              {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Dataset"
                  ]
                }
              },
              {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "CATProduct",
                    "CATPart",
                    "CATDrawing"
                  ]
                }
              }
            ]
          }
        }
      },
      "cmdAwp0ViewFileBaseVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$gt": 0
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": { 
                "$and":[
                  {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Dataset"
                      ]
                    }
                  },
                  {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$notin": [
                        "CATProduct",
                        "CATPart",
                        "CATDrawing"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "$source": "ctx.visibleServerCommands.Awp0ViewFile",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "cmdNavigateObjectBaseVisibleCondition": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Folder' ) != -1 && !conditions.isTreeView && !conditions.isTreeSummaryView"
      },
      "notFullScreen": {
        "expression": "ctx.fullscreen !== true"
      },
      "supportsListView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.ListView && conditions.notFullScreen"
      },
      "supportsTableView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.TableView && conditions.notFullScreen"
      },
      "supportsSummaryView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.SummaryView && conditions.notFullScreen"
      },
      "supportsTableSummaryView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.TableSummaryView && conditions.notFullScreen"
      },
      "supportsImageView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.ImageView && conditions.notFullScreen"
      },
      "supportsTreeView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.TreeView && conditions.notFullScreen"
      },
      "supportsTreeSummaryView": {
        "expression": "ctx.ViewModeContext.supportedViewModes.TreeSummaryView && conditions.notFullScreen"
      },
      "isListView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'ListView'"
      },
      "isTableView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TableView'"
      },
      "isSummaryView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'SummaryView'"
      },
      "isNoneView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'None'"
      },
      "isTableSummaryView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TableSummaryView'"
      },
      "isImageView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'ImageView'"
      },
      "isTreeView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeView'"
      },
      "isTreeSummaryView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
      },
      "isTableContextNotActive": {
        "expression": "ctx.TABLE_CONTEXT && ctx['TABLE_CONTEXT'].editInProgress()"
      },
      "isNoneContextNotActive": {
        "expression": "ctx.NONE && ctx['NONE'].editInProgress()"
      },
      "isTableContextActive": {
        "expression": "ctx.TABLE_CONTEXT && !ctx['TABLE_CONTEXT'].editInProgress()"
      },
      "isNoneContextActive": {
        "expression": "ctx.NONE && !ctx['NONE'].editInProgress()"
      },
      "isAnyContextActive": {
        "expression": "conditions.isNoneContextActive || conditions.isTableContextActive"
      },
      "isEditInProgressInTableOrTreeWithSummary": {
        "expression": "!ctx['NONE'].editInProgress() && !ctx['TABLE_CONTEXT'].editInProgress()"
      },
      "isEditAccessGranted": {
        "expression": "ctx['NONE'].canStartEdit() || ctx['TABLE_CONTEXT'].canStartEdit()"
      },
      "isStartEditAllowed": {
        "expression": "conditions.isEditAccessGranted && (conditions.isSummaryView || conditions.isNoneView) && conditions.isEditInProgressInTableOrTreeWithSummary && ctx.visibleServerCommands.Awp0StartEdit"
      },
      "isStartEditGroupCommandAllowed": {
        "expression": "conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isEditAccessGranted && (conditions.isTreeSummaryView || conditions.isTableSummaryView)"
      },
      "isStartEditSummaryAllowed": {
        "expression": "conditions.isStartEditGroupCommandAllowed && conditions.isNoneContextActive && ctx.visibleServerCommands.Awp0StartEdit && ctx['NONE'].canStartEdit()"
      },
      "isStartEditTableAllowed": {
        "expression": "conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isEditAccessGranted && ctx.visibleServerCommands.Awp0StartEditTable && ( ctx.search && ctx.search.totalFound !== undefined ? ( ctx.search.totalFound > 0 ) : true) && ctx['TABLE_CONTEXT'].canStartEdit()"
      },
      "saveEditsCommandActive": {
        "expression": "conditions.isNoneContextNotActive"
      },
      "saveEditsPWACommandActive": {
        "expression": "!conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isTableContextNotActive"
      },
      "cancelEditsCommandActive": {
        "expression": "conditions.isNoneContextNotActive"
      },
      "cancelEditsPWACommandActive": {
        "expression": "!conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isTableContextNotActive"
      },
      "cmdTablePropertyCreateActive": {
        "expression": "ctx.editInProgress"
      },
      "cmdNameValuePropertyCreateActive": {
        "expression": "ctx.editInProgress"
      },
      "cmdTablePropertyDuplicateActive": {
        "expression": "ctx.editInProgress && ctx.tablePropertyEditData && ctx.tablePropertyEditData.gridId === gridId"
      },
      "cmdTablePropertyRemoveActive": {
        "expression": "ctx.TablePropertySelection.selectedObjects.length > 0 && !ctx.editInProgress"
      },
      "cmdNameValuePropertyRemoveActive": {
        "expression": "ctx.NameValueSelection.selectedObjects.length > 0 && !ctx.editInProgress"
      },
      "addProfilePictureVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0AddProfilePicture"
      },
      "cmdObjectInfoActive": {
        "expression": "ctx.selected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
      },
      "awp0ChangePasswordCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0ChangePassword && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject'"
      },
      "cmdShareURLCommandVisible": {
        "expression": "ctx.sublocation.nameToken !== 'showGateway' && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
      },
      "awp0OpenInRACCommandCondition": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.aw_host_type !== 'RAC' && ctx.isMobileOS !== true && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
      },
      "awp0SelectAllCondition": {
        "expression": "commandContext.pwaSelectionModel.getCanExecuteSelectLoaded()"
      },
      "awp0DeselectAllCondition": {
        "expression": "commandContext.pwaSelectionModel.getCanExecuteDeselect()"
      },
      "awp0SelectAllObjectSetCondition": {
        "expression": "commandContext.dataProvider.selectionModel.getCanExecuteSelectLoaded() && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0"
      },
      "awp0DeselectAllObjectSetCondition": {
        "expression": "commandContext.dataProvider.selectionModel.getCanExecuteDeselect() && commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0"
      },
      "awp0MultiSelectEnableCondition": {
        "expression": "!commandContext.pwaSelectionModel.isMultiSelectionEnabled() && commandContext.pwaSelectionModel.mode === 'multiple'"
      },
      "awp0MultiSelectDisableCondition": {
        "expression": "commandContext.pwaSelectionModel.isMultiSelectionEnabled() && commandContext.pwaSelectionModel.mode === 'multiple'"
      },
      "awp0MultiSelectObjectSetEnableCondition": {
        "expression": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0 && !commandContext.dataProvider.selectionModel.isMultiSelectionEnabled()  && commandContext.dataProvider.selectionModel.mode === 'multiple'"
      },
      "awp0MultiSelectObjectSetDisableCondition": {
        "expression": "commandContext.dataProvider.viewModelCollection.loadedVMObjects.length > 0 && commandContext.dataProvider.selectionModel.isMultiSelectionEnabled()  && commandContext.dataProvider.selectionModel.mode === 'multiple'"
      },
      "folderSelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 && ctx.sublocation.nameToken === 'com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation' && ctx.mselected.length === 1"
      },
      "checkFolderSelected": {
        "expression": "ctx.isSelectionTypeFolder && ctx.sublocation.nameToken === 'com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation' && ctx.state.processed.s_uid"
      },
      "xrtIncludeAddCommand": {
        "expression": "!ctx.editInProgress && (commandContext.xrtCommands['com.teamcenter.rac.common.AddNew'] || commandContext.xrtCommands['com.teamcenter.rac.common.AddReference'] || commandContext.xrtCommands['Awp0ShowAddObject'])"
      },
      "xrtObjectSetSourceIsDCP": {
        "expression": "commandContext && commandContext.dataProvider && commandContext.dataProvider.json.isObjectSetSourceDCP"
      },
      "idDispRuleAdminInfoCmdVisible": {
        "expression": "commandContext.vmo &&  commandContext.vmo.props.object_string.dbValue !== 'noIdDisplayRule' "
      },
      "xrtIncludeAddCommandDCP": {
        "expression": "conditions.xrtIncludeAddCommand && conditions.xrtObjectSetSourceIsDCP"
      },
      "cmdCopyCommandVisible": {
        "expression": "ctx.visibleServerCommands.Awp0Copy && ctx.sublocation.nameToken !== ctx.defaultRoutePath && ctx.mselected && ctx.mselected.length > 0"
      },
      "cmdCopyFileDwnldLinkCmdVisible": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Dataset"
                  ]
                }
              }
            }
          ]
        }
      },
      "isAddToOpenForCurrentObjectSet": {
        "expression": "ctx.activeToolsAndInfoCommand.commandId === 'Awp0ShowAddObject' && ctx.panelContext === commandContext"
      },
      "isExportToExcelForCurrentObjectSet": {
        "expression": "ctx.activeToolsAndInfoCommand.commandId === 'Awp0ExportToExcel' && ctx.panelContext.dataProvider === commandContext.dataProvider"
      },
      "Awp0DeleteCommandConditionVisible": {
        "expression": "ctx.visibleServerCommands.Awp0Delete"
      },
      "arrangeShowAllSelected": {
        "expression": "commandContext.arrangeData.operationType === 'intersection'"
      },
      "arrangeShowAllVisible": {
        "expression": "commandContext.arrangeData.columnDefs.length > 0 && ( !commandContext.arrangeData.columnConfigId || commandContext.arrangeData.operationType === 'intersection' || commandContext.arrangeData.operationType === 'union' || commandContext.arrangeData.operationType === 'as_arranged' || commandContext.arrangeData.operationType === 'configured' ) && ( commandContext.arrangeData.columnConfigId ? commandContext.arrangeData.columnConfigId.indexOf( 'objSetSrc' ) === -1 : true )"
      },
      "arrangeShowAllEnable": {
        "expression": "commandContext.arrangeData.isExistingColumnConfigLoaded !== true"
      },
      "arrangeResetVisible": {
        "expression": "commandContext.arrangeData.columnDefs.length > 0 || commandContext.arrangeData.availableColumnDefs.length > 0"
      },
      "arrangeItemSelected": {
        "expression": "commandContext.arrangeData.filter === '' && commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects.length > 0"
      },
      "arrangeMoveUpEnable": {
        "expression": "conditions.arrangeItemSelected && commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects[0] !== commandContext.arrangeData.columnDefs[0] && commandContext.arrangeData.columnDefs.length > 1"
      },
      "arrangeMoveDownEnable": {
        "expression": "conditions.arrangeItemSelected && commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects[commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects.length-1] !== commandContext.arrangeData.columnDefs[commandContext.arrangeData.columnDefs.length-1] && commandContext.arrangeData.columnDefs.length > 1"
      },
      "arrangeAddColumnsEnable": {
        "expression": "commandContext.dataProviders.dataProviderAvailableColumnConfigs.selectedObjects.length > 0"
      },
      "arrangeRemoveColumnsEnable": {
        "expression": "commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects.length > 1 || ( commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects.length === 1 && commandContext.dataProviders.dataProviderColumnConfigs.selectedObjects[0].uid !== 'object_name' )"
      },
      "deleteNamedColumnConfigVisible": {
        "expression": "commandContext.vmo.isModifiable === true"
      },
      "Awp0ChangeOwnerVisibleCondition": {
        "expression": "ctx.visibleServerCommands.Awp0ChangeOwner"
      },
      "awp0PasteVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.selected.props.is_modifiable.dbValues",
              "$query": {
                "$in": [
                  "1"
                ]
              }
            },
            {
              "$source": "ctx.selectedModelTypeRelations.length",
              "$query": {
                "$gt": 0
              }
            },
            {
              "$source": "ctx.awClipBoardProvider.length",
              "$query": {
                "$gt": 0
              }
            },
            {
              "$source": "ctx.sublocation.clientScopeURI",
              "$query": {
                "$ne": "Awp0ShowObject"
              }
            }
          ]
        }
      },
      "awp0PasteContextMenuVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.selected.props.is_modifiable.dbValues",
              "$query": {
                "$in": [
                  "1"
                ]
              }
            },
            {
              "$source": "ctx.selectedModelTypeRelations.length",
              "$query": {
                "$gt": 0
              }
            },
            {
              "$source": "ctx.awClipBoardProvider.length",
              "$query": {
                "$gt": 0
              }
            }
          ]
        }
      },
      "awp0PasteToObjectSetActiveCondition": {
        "expression": "commandContext.objectSetSource !== null && commandContext.objectSetSource !== undefined"
      },
      "awp0PasteToObjectSetDCPActiveCondition": {
        "expression": "conditions.awp0PasteToObjectSetActiveCondition && conditions.xrtObjectSetSourceIsDCP"
      },
      "awp0PasteToObjectSetVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$or": [
                {
                  "$source": "ctx.selected.props.is_modifiable.dbValues",
                  "$query": {
                    "$in": [
                      "1"
                    ]
                  }
                },
                {
                  "$source": "commandContext.isObjectSetSourceS2P",
                  "$query": {
                    "$eq": "true"
                  }
                }
              ]
            },
            {
              "$source": {
                "$adapt": "ctx.awClipBoardProvider"
              },
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": "{{commandContext.modelTypeRelations}}"
                }
              }
            },
            {
              "$source": "commandContext.xrtCommands.Awp0Paste",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isCompactLayout": {
        "expression": "ctx.layout === 'compact'"
      },
      "isComfyLayout": {
        "expression": "ctx.layout === 'comfy'"
      },
      "isLabelShown": {
        "expression": "ctx.toggleLabel === true"
      },
      "tablePropertyRowSelected": {
        "expression": {
          "$source": "ctx.selected",
          "$query": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Fnd0TableRow"
              ]
            }
          }
        }
      },
      "isOpenArrangePanelVisible": {
        "expression": "commandContext.gridOptions.enableArrangeMenu && commandContext.isArrangeSupported && !commandContext.isNarrowMode"
      },
      "isOpenArrangePanelEnabled": {
        "expression": "!commandContext.tableInstance.isEditing"
      },
      "awp0ExportToExcelVisibleCondition": {
        "expression": {
          "$query": {
            "$or": [
              {
                "$source": "commandContext.dataProvider.columnConfig.columns.length",
                "$query": {
                  "$gt": 0
                }
              },
              {
                "$source": "commandContext.columnProvider.columnConfig.columns.length",
                "$query": {
                  "$gt": 0
                }
              },
              {
                "$source": "commandContext.columnProvider.columns.length",
                "$query": {
                  "$gt": 0
                }
              }
            ]
          }
        }
      },
      "exportVisibleMoveUpColumn": {
        "expression": "ctx.excelListCommands && ctx.excelListCommands.enableMoveUp === true"
      },
      "exportVisibleMoveDownColumn": {
        "expression": "ctx.excelListCommands && ctx.excelListCommands.enableMoveDown === true"
      },
      "isPropertyLocalizable": {
        "expression": "ctx.visibleServerCommands.Awp0EditLocalizationSingle === true && commandContext.isLocalizable && ( ( !commandContext.isArray && commandContext.dbValue ) || ( commandContext.isArray && commandContext.dbValue.length > 0 ) ) && !commandContext.hasLov"
      },
      "removeProjectsCmdCond": {
        "expression": "(ctx.sublocation.nameToken === 'com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation') && (ctx.panelContext.destPanelId === 'addObjectPrimarySub')"
      },
      "uvCheckoutCmdCondition": {
        "expression": "ctx.viewerContext.vmo.props.fnd0IsCheckoutable.dbValues[0] === '1' && ctx.viewerContext.vmo.props.is_modifiable.dbValues[0] === '1'"
      },
      "uvCancelCheckoutCmdCondition": {
        "expression": "ctx.viewerContext.vmo.props.checked_out_user.dbValues[0] === ctx.user.uid"
      },
      "uvCheckinCmdCondition": {
        "expression": "ctx.viewerContext.vmo.props.checked_out_user.dbValues[0] === ctx.user.uid"
      },
      "fullViewModeCmdCondition": {
        "expression": "ctx.viewerContext.commands.fullViewMode.visible"
      },
      "uvWordWrapCmdVisible": {
        "expression": "ctx.viewerContext.showWordWrap"
      },
      "uvWordWrapCmdSelected": {
        "expression": "ctx.viewerContext.wordWrapped"
      },
      "universalViewerPopupCommandsActive": {
        "expression": "ctx.viewerContext && ctx.viewerContext.vmo && ctx.viewerContext.vmo.modelType.typeHierarchyArray.indexOf( 'Dataset' ) !== -1"
      },
      "objectSetMultipleViewModes": {
        "expression": "commandContext.displayModesCount > 1"
      },
      "objectSetSupportsListView": {
        "expression": "commandContext.displayModes.listDisplay && conditions.objectSetMultipleViewModes"
      },
      "objectSetSupportsTableView": {
        "expression": "commandContext.displayModes.tableDisplay && conditions.objectSetMultipleViewModes"
      },
      "objectSetSupportsCompareView": {
        "expression": "commandContext.displayModes.compareDisplay && conditions.objectSetMultipleViewModes"
      },
      "objectSetSupportsImageView": {
        "expression": "commandContext.displayModes.thumbnailDisplay && conditions.objectSetMultipleViewModes"
      },
      "isObjectSetListView": {
        "expression": "commandContext.currentDisplay === 'listDisplay'"
      },
      "isObjectSetTableView": {
        "expression": "commandContext.currentDisplay === 'tableDisplay'"
      },
      "isObjectSetCompareView": {
        "expression": "commandContext.currentDisplay === 'compareDisplay'"
      },
      "isObjectSetImageView": {
        "expression": "commandContext.currentDisplay === 'thumbnailDisplay'"
      },
      "showObjectTablePropertyActive": {
        "expression": {
          "$source": {
            "$adapt": "commandContext.vmo"
          },
          "$query": {
            "$source": "modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Fnd0TableRow"
              ]
            }
          }
        }
      },
      "isGcStartEditCommandVisible": {
        "expression": "ctx.graph.graphModel.config.enableEdit&& !ctx.graph.graphModel.graphControl.inputMode.editMode"
      },
      "isGcExitEditCommandVisible": {
        "expression": "ctx.graph.graphModel.config.enableEdit && ctx.graph.graphModel.graphControl.inputMode.editMode"
      },
      "isGcVisibleLegend": {
        "expression": "ctx.graph.legendData!==undefined"
      },
      "cmdGcLayoutCommandGroupActive": {
        "expression": "ctx.graph.graphModel.config.layout && ctx.graph.graphModel.config.layout.options.length > 0"
      },
      "cmdGcTopToBottomLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('TopToBottom')>-1"
      },
      "cmdGcRightToLeftLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('RightToLeft')>-1"
      },
      "cmdGcLeftToRightLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('LeftToRight')>-1"
      },
      "cmdGcBottomToTopLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('BottomToTop')>-1"
      },
      "cmdGcOrganicLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Organic')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
      },
      "cmdGcBalloonLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Balloon')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
      },
      "cmdGcSnakeLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Snake')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
      },
      "cmdGcIncrementalLayoutActive": {
        "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Incremental')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
      },
      "cmdGcLayoutCommandGroupSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption"
      },
      "cmdGcTopToBottomLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('TopToBottom')>-1"
      },
      "cmdGcRightToLeftLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('RightToLeft')>-1"
      },
      "cmdGcLeftToRightLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('LeftToRight')>-1"
      },
      "cmdGcBottomToTopLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('BottomToTop')>-1"
      },
      "cmdGcOrganicLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Organic')>-1"
      },
      "cmdGcBalloonLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Balloon')>-1"
      },
      "cmdGcSnakeLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Snake')>-1"
      },
      "cmdGcIncrementalLayoutSelected": {
        "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Incremental')>-1"
      },
      "viewerLicenceMockup": {
        "expression": "ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel===3"
      },
      "viewerLicenceOnOrAboveStandard": {
        "expression": "ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel>=1"
      },
      "isInACESublocation": {
        "expression": "ctx.sublocation.nameToken==='com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
      },
      "allOffCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
      },
      "allOnCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
      },
      "isViewerIn3DMode": {
        "expression": "ctx.awDefaultViewer.viewerViewMode === 'VIEWER3D'"
      },
      "isViewerRevealed": {
        "expression": "ctx.awDefaultViewer.isViewerRevealed"
      },
      "isViewerRevealedAndIn3DMode": {
        "expression": "ctx.awDefaultViewer.isViewerRevealed && ctx.awDefaultViewer.viewerViewMode === 'VIEWER3D'"
      },
      "isViewerRevealedAndIn3DModeWithLicenseAboveBase": {
        "expression": "conditions.isViewerRevealedAndIn3DMode && ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel > 0"
      },
      "useTransparencySelectionDisplay": {
        "expression": "ctx.viewer.preference.AWC_visSelectionDisplay"
      },
      "viewOrientationCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
      },
      "selectedOffCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionCSIDS && ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionCSIDS.length > 0 && ctx.awDefaultViewer.viewerSelectionModels[0].uid !== ctx.occmgmtContext.openedElement.uid && ctx.awDefaultViewer.isSelectedOffVisible"
      },
      "selectedOnCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionCSIDS && ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionCSIDS.length > 0 && ctx.awDefaultViewer.viewerSelectionModels[0].uid !== ctx.occmgmtContext.openedElement.uid && ctx.awDefaultViewer.isSelectedOnVisible"
      },
      "contextOffCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext.openedElement.uid && (!ctx.awDefaultViewer.AllInvisibleCSIDs || (ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionCSIDS.length > 0 && ctx.awDefaultViewer.AllInvisibleCSIDs.indexOf(ctx.awDefaultViewer.viewerSelectionCSIDS[0]) === -1))"
      },
      "contextOnCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext.openedElement.uid && ctx.awDefaultViewer.AllInvisibleCSIDs && ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionCSIDS.length > 0 && ctx.awDefaultViewer.isContextOnVisible"
      },
      "contextOnlyCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionCSIDS && ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionCSIDS.length === 1 && ctx.awDefaultViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext.openedElement.uid"
      },
      "selectContextCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionModels && ctx.awDefaultViewer.viewerSelectionCSIDS.length > 0 && ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionCSIDS.length === 1 && ctx.awDefaultViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext.openedElement.uid"
      },
      "fitCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && (!ctx.awDefaultViewer.AllInvisibleCSIDs || ctx.awDefaultViewer.AllInvisibleCSIDs.indexOf('') === -1 || (ctx.awDefaultViewer.AllInvisibleExceptionCSIDs && ctx.awDefaultViewer.AllInvisibleExceptionCSIDs.length > 0))"
      },
      "selectedOnlyCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && ctx.awDefaultViewer.viewerSelectionModels && ctx.awDefaultViewer.viewerSelectionModels.length > 0 && ctx.awDefaultViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awDefaultViewer.viewerSelectionModels[0].uid !== ctx.occmgmtContext.openedElement.uid"
      },
      "isLogicalNotSelected": {
        "expression": "!ctx.awDefaultViewer.isLogicalSelected"
      },
      "isRotate": {
        "expression": "ctx.awDefaultViewer.preferences.AWC_visNavigationMode==='ROTATE'"
      },
      "isPan": {
        "expression": "ctx.awDefaultViewer.preferences.AWC_visNavigationMode==='PAN'"
      },
      "isZoom": {
        "expression": "ctx.awDefaultViewer.preferences.AWC_visNavigationMode==='ZOOM'"
      },
      "isAreaSelect": {
        "expression": "ctx.viewer.preference.AWC_visNavigationMode==='AREA_SELECT'"
      },
      "isMMVDisabledForView": {
        "expression": "!ctx.awDefaultViewer.isMMVEnabledForView"
      },
      "isMMVDisabledForView_scv": {
        "expression": "!ctx.awStructureCompareViewer.isMMVEnabledForView"
      },
      "isUniversalViewerRevealedAndIn3DMode": {
        "expression": "ctx.awUniversalViewer.isViewerRevealed && ctx.awUniversalViewer.viewerViewMode === 'VIEWER3D'"
      },
      "allOffCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv"
      },
      "allOnCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv"
      },
      "isViewerIn3DMode_scv": {
        "expression": "ctx.awStructureCompareViewer.viewerViewMode === 'VIEWER3D'"
      },
      "isViewerRevealed_scv": {
        "expression": "ctx.awStructureCompareViewer.isViewerRevealed"
      },
      "isViewerRevealedAndIn3DMode_scv": {
        "expression": "ctx.awStructureCompareViewer.isViewerRevealed && ctx.awStructureCompareViewer.viewerViewMode === 'VIEWER3D'"
      },
      "isViewerRevealedAndIn3DModeWithLicenseAboveBase_scv": {
        "expression": "conditions.isViewerRevealedAndIn3DMode_scv && ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel > 0"
      },
      "useTransparencySelectionDisplay_scv": {
        "expression": "ctx.viewer.preference.AWC_visSelectionDisplay"
      },
      "viewOrientationCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv"
      },
      "selectedOffCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionCSIDS && ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length > 0 && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid !== ctx.occmgmtContext2.openedElement.uid && ctx.awStructureCompareViewer.isSelectedOffVisible"
      },
      "selectedOnCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionCSIDS && ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length > 0 && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid !== ctx.occmgmtContext2.openedElement.uid && ctx.awStructureCompareViewer.isSelectedOnVisible"
      },
      "contextOffCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext2.openedElement.uid && (!ctx.awStructureCompareViewer.AllInvisibleCSIDs || (ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length > 0 && ctx.awStructureCompareViewer.AllInvisibleCSIDs.indexOf(ctx.awStructureCompareViewer.viewerSelectionCSIDS[0]) === -1))"
      },
      "contextOnCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext2.openedElement.uid && ctx.awStructureCompareViewer.AllInvisibleCSIDs && ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length > 0 && ctx.awStructureCompareViewer.isContextOnVisible"
      },
      "contextOnlyCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionCSIDS && ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length === 1 && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext2.openedElement.uid"
      },
      "selectContextCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionModels && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length > 0 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.length === 1 && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid === ctx.occmgmtContext2.openedElement.uid"
      },
      "fitCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && (!ctx.awStructureCompareViewer.AllInvisibleCSIDs || ctx.awStructureCompareViewer.AllInvisibleCSIDs.indexOf('') === -1 || (ctx.awStructureCompareViewer.AllInvisibleExceptionCSIDs && ctx.awStructureCompareViewer.AllInvisibleExceptionCSIDs.length > 0))"
      },
      "selectedOnlyCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv && ctx.awStructureCompareViewer.viewerSelectionModels && ctx.awStructureCompareViewer.viewerSelectionModels.length > 0 && ctx.awStructureCompareViewer.viewerSelectionCSIDS.indexOf('') === -1 && ctx.awStructureCompareViewer.viewerSelectionModels[0].uid !== ctx.occmgmtContext2.openedElement.uid"
      },
      "isLogicalNotSelected_scv": {
        "expression": "!ctx.awStructureCompareViewer.isLogicalSelected"
      },
      "isRotate_scv": {
        "expression": "ctx.awStructureCompareViewer.preferences.AWC_visNavigationMode==='ROTATE'"
      },
      "isPan_scv": {
        "expression": "ctx.awStructureCompareViewer.preferences.AWC_visNavigationMode==='PAN'"
      },
      "isZoom_scv": {
        "expression": "ctx.awStructureCompareViewer.preferences.AWC_visNavigationMode==='ZOOM'"
      },
      "isAreaSelect_scv": {
        "expression": "ctx.viewer.preference.AWC_visNavigationMode==='AREA_SELECT'"
      },
      "removeAnalysisResultCommandVisibility": {
        "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
      },
      "removeAnalysisResultCommandVisibility_scv": {
        "expression": "conditions.isViewerIn3DMode_scv && conditions.isViewerRevealed_scv"
      },
      "hasReferenceListNotLoaded": {
        "expression": "ctx.selected && ctx.selected.type==='SnapShotViewData' && !ctx.selected.props.ref_names"
      },
      "hasPVData": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.hasReferenceListNotLoaded",
              "$query": {
                "$eq": true
              }
            },
            {
              "$and": [
                {
                  "$source": "conditions.hasReferenceListNotLoaded",
                  "$query": {
                    "$eq": false
                  }
                },
                {
                  "$source": "ctx.selected",
                  "$query": {
                    "$all": {
                      "$source": "props.ref_names",
                      "$query": {
                        "$in": [
                          "RootContext"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "rotatePdfActive": {
        "expression": "ctx.viewerContext.type === 'aw-pdf-viewer'"
      },
      "rotateCmdVisible": {
        "expression": "ctx.viewerContext.type === 'aw-image-viewer' || ctx.viewerContext.type === 'aw-pdf-viewer'"
      },
      "rotateImageActive": {
        "expression": "ctx.viewerContext.type === 'aw-image-viewer'"
      },
      "Awp0OpenVVICmdCond": {
        "expression": "ctx.selected && ctx.visibleServerCommands.Awp0OpenVVI"
      },
      "showHomeFolderVisibility": {
        "expression": "ctx.showHomeFolderDisabled !== true"
      },
      "Awp0UnPinObjectVisible": {
        "expression": "ctx.visibleServerCommands.Awp0UnPinObject"
      },
      "Awp0PinObjectVisible": {
        "expression": "ctx.visibleServerCommands.Awp0PinObject && ctx.mselected.length === 1"
      },
      "isRemoveAllFiltersEnabled": {
        "expression": "commandContext.dataProvider.isColumnFilterApplied && !commandContext.tableInstance.isEditing"
      },
      "isRemoveAllFiltersVisible": {
        "expression": "commandContext.gridOptions.isFilteringEnabled"
      },
      "toggleDynamicRowHeightVisible": {
        "expression": "!commandContext.gridOptions.enableDynamicRowHeight"
      },
      "toggleDynamicRowHeightEnabled": {
        "expression": "!commandContext.tableInstance.isEditing"
      },
      "toggleDynamicRowHeightSelected": {
        "expression": "commandContext.tableInstance.dynamicRowHeightStatus === true"
      },
      "supportsLightTheme": {
        "expression": "!ctx.changeThemeDisabled"
      },
      "supportsDarkTheme": {
        "expression": "!ctx.changeThemeDisabled"
      },
      "isLightTheme": {
        "expression": "ctx.theme === 'ui-lightTheme'"
      },
      "isDarkTheme": {
        "expression": "ctx.theme === 'ui-darkTheme'"
      },
      "true": {
        "expression": "true"
      },
      "false": {
        "expression": "false"
      },
      "isColumnFilteringOn": {
        "expression": "ctx.columnFilter.isFilteringOn === true"
      },
      "isColumnFilteringOff": {
        "expression": "ctx.columnFilter.isFilteringOn === false"
      },
      "Awp0TaskbarFullScreenCmdCondition": {
        "expression": "!conditions.isTaskbarFullScreen"
      },
      "Awp0TaskbarExitFullScreenCmdCondition": {
        "expression": "conditions.isTaskbarFullScreen"
      },
      "isTaskbarFullScreen": {
        "expression": "ctx.taskbarfullscreen && ctx.taskbarfullscreen === 'true'"
      },
      "isAddObjectPanelPanelPinned": {
        "expression": "commandContext.pinnedToForm.dbValue"
      },
      "isAddObjectPanelPanelUnPinned": {
        "expression": "commandContext.unpinnedToForm.dbValue"
      }
    },
    "i18n": {
      "digitalAssetsPanelTitle": [
        "AdobeMessages"
      ],
      "imagePanelTitle": [
        "AdobeMessages"
      ],
      "cmdDeleteDigitalAsset": [
        "AdobeMessages"
      ],
      "adobe_cell_commands_updatesList": [
        "AdobeMessages"
      ],
      "cmdReplaceDigitalAsset": [
        "AdobeMessages"
      ],
      "showObjectCell": [
        "AdobeMessages"
      ],
      "adobe_cell_commands_inUseList": [
        "AdobeMessages"
      ],
      "openInIllustratorTitle": [
        "AdobeMessages"
      ],
      "DigitalAssetsPanelDesc": [
        "AdobeMessages"
      ],
      "ImagePanelDesc": [
        "AdobeMessages"
      ],
      "cmdReplaceDigitalAssetDesc": [
        "AdobeMessages"
      ],
      "cmdDeleteDigitalAssetDesc": [
        "AdobeMessages"
      ],
      "showObjectCellDesc": [
        "AdobeMessages"
      ],
      "openInIllustratorDesc": [
        "AdobeMessages"
      ],
      "addToFavoritesCommandTitle": [
        "FavoritesMessages"
      ],
      "removeFromFavoritesCommandTitle": [
        "FavoritesMessages"
      ],
      "Awp0AddToFavoritesDesc": [
        "FavoritesMessages"
      ],
      "Awp0RemoveFromFavoritesDesc": [
        "FavoritesMessages"
      ],
      "HostingSetRevisionRule": [
        "hostingMessages"
      ],
      "revRuleChangeSucess": [
        "hostingMessages"
      ],
      "revRuleChangeFailed": [
        "hostingMessages"
      ],
      "Awp0AddComponentHostedDesc": [
        "hostingMessages"
      ],
      "Awp0OpenHostedDesc": [
        "hostingMessages"
      ],
      "replaceFileCommandTitle": [
        "ReplaceFileMessages"
      ],
      "InvalidSelectedObject": [
        "ReplaceFileMessages"
      ],
      "AsynUploadInProgress": [
        "ReplaceFileMessages"
      ],
      "PlatformNotSupported": [
        "ReplaceFileMessages"
      ],
      "Awp0ReplaceDatasetDesc": [
        "ReplaceFileMessages"
      ],
      "replaceNoValidTarget": [
        "ReplaceFileMessages"
      ],
      "Awp0EnableRedLineMode": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0DisableRedLineMode": [
        "ZeroCompileCommandMessages"
      ],
      "profile": [
        "UIMessages"
      ],
      "QuickAccessTitle": [
        "ZeroCompileCommandMessages"
      ],
      "checkoutTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CopyFileLinkTitle": [
        "ZeroCompileCommandMessages"
      ],
      "copyDownloadableFileUrlSuccessful": [
        "ZeroCompileCommandMessages"
      ],
      "copyDownloadableFileUrlFailure": [
        "ZeroCompileCommandMessages"
      ],
      "checkinTitle": [
        "ZeroCompileCommandMessages"
      ],
      "checkinFailure": [
        "ZeroCompileCommandMessages"
      ],
      "checkoutFailure": [
        "ZeroCompileCommandMessages"
      ],
      "cancelCheckoutFailure": [
        "ZeroCompileCommandMessages"
      ],
      "cancelCheckoutSuccess": [
        "ZeroCompileCommandMessages"
      ],
      "saveEditsTitle": [
        "ZeroCompileCommandMessages"
      ],
      "cancelEditsTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0TablePropertyDuplicateTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowSaveAsTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowSaveAsOnlyTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowReviseTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CutTitle": [
        "ZeroCompileCommandMessages"
      ],
      "cutSingleSuccessful": [
        "ZeroCompileCommandMessages"
      ],
      "cutMultipleSuccessful": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInNewTabTitle": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInNewWindowTitle": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInRACTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowTreeSummaryViewTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CommandLabelToggleTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0StartEditSummaryTitle": [
        "ZeroCompileCommandMessages"
      ],
      "awp0_addProfilePictureCommands": [
        "AddProfilePictureMessages"
      ],
      "selectAll": [
        "ZeroCompileCommandMessages"
      ],
      "clearSelections": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShareURLTitle": [
        "ZeroCompileCommandMessages"
      ],
      "copySingleSuccessful": [
        "ZeroCompileCommandMessages"
      ],
      "copyMultipleSuccessful": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CopyTitle": [
        "ZeroCompileCommandMessages"
      ],
      "dataSetCannotBeDownloaded": [
        "ZeroCompileCommandMessages"
      ],
      "singleObjectWasDownloadedMessage": [
        "ZeroCompileCommandMessages"
      ],
      "multipleObjectsWereDownloadedMessage": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0AddObjectTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0DeleteCommandDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CreateAlternateIdTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CreateAliasIdTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CreateDispRuleTitle": [
        "ZeroCompileCommandMessages"
      ],
      "singleDeleteConfirmationMessage": [
        "ZeroCompileCommandMessages"
      ],
      "deleteSuccessMessage": [
        "ZeroCompileCommandMessages"
      ],
      "deleteSingleFailureAskCutMessage": [
        "ZeroCompileCommandMessages"
      ],
      "deleteSingleFailureMessage": [
        "ZeroCompileCommandMessages"
      ],
      "deleteMultipleFailureMessage": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeShowAll": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeShowCommon": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeMoveUp": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeMoveDown": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeViewConfigs": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ExportToExcelTitle": [
        "ZeroCompileCommandMessages"
      ],
      "pasteSuccessMessage": [
        "ZeroCompileCommandMessages"
      ],
      "pasteMultipleSuccessMessage": [
        "ZeroCompileCommandMessages"
      ],
      "comfyLayout": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ManageGroup": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0ShareGroup": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0ViewGroup": [
        "ZeroCompileCommandBaseMessages"
      ],
      "helpTitle": [
        "ZeroCompileCommandBaseMessages"
      ],
      "helpAboutTitle": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_staticToolsAndInfo": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_userLink": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_toolbarRight": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_contextMenu2": [
        "ZeroCompileCommandBaseMessages"
      ],
      "modelObjectObjectNavigationCellListActionCommands": [
        "ZeroCompileCommandBaseMessages"
      ],
      "modelObjectNavigationBreadCrumbCellListActionCommands": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_workArea_right": [
        "ShowObjectMessages"
      ],
      "aw_tablePropertyXrtSection": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_nameValuePropertyXrtSection": [
        "ZeroCompileCommandBaseMessages"
      ],
      "aw_objectSet": [
        "ZeroCompileCommandBaseMessages"
      ],
      "arrangeCommandbar": [
        "ZeroCompileCommandBaseMessages"
      ],
      "selectionMode": [
        "ZeroCompileCommandMessages"
      ],
      "singleObjDeleteConfirmationMessage": [
        "ZeroCompileCommandMessages"
      ],
      "exportAddPropertiesTitle": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeShowAllDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0RedLineModeDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0GoHomeDesc": [
        "GoHomeCommandMessages"
      ],
      "cmdViewProfileDesc": [
        "UIMessages"
      ],
      "cmdQuickAccessDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CutDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CancelCheckoutDesc": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0CheckinDesc": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowObjectDesc": [
        "ShowObjectMessages"
      ],
      "Awp0ShowSaveAsDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowSaveAsOnlyDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowReviseDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInNewWindowDesc": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowObjectCellDatasetDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ViewFileDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0NavigateObjectDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0StartEditSummaryDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0StartEditTableDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowImageViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowListViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowSummaryViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowTableSummaryViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowTableViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowTreeSummaryViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowTreeViewDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CancelEditsPWADesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CommandLabelToggleDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0AddProfilePictureDesc": [
        "AddProfilePictureMessages"
      ],
      "Awp0ChangePasswordDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0SelectAllDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0DeselectAllDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0EnableMultiSelectDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowCreateObjectDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowAddObjectDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0DeleteDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CopyDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CopyDownloadLinkDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0PasteDesc": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeResetDesc": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeMoveUpDesc": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeMoveDownDesc": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeAddColumnsDesc": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeRemoveColumnsDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ChangeOwnerDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowCompactLayoutDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowComfyLayoutDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CloseCommandPanelDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ViewGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0PasteGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0GoFavoritesDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0HelpDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0HelpGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0HelpAboutDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "openArrangePanelDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CheckoutDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0SignOutDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInNewTabDesc": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInRACDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShareURLDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0StartEditDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenGroupDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0SaveEditsDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ObjectInfoDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0EditGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0ManageGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0NewGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0ShareGroupDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0CreateAlternateIdDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CreateAliasIdDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CreateDispRuleDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0IdDispRuleAdminInfoDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ExportToExcelDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0MoveUpExcelColumnDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInNewTabCellTitleDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0OpenInNewWindowCellTitleDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0MoveDownExcelColumnDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ExportSelectedColumnsAddDesc": [
        "ZeroCompileCommandMessages"
      ],
      "arrangeViewConfigsDesc": [
        "ZeroCompileCommandMessages"
      ],
      "deleteNamedColumnConfigDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CancelEdits": [
        "tcuijsTooltipMessages"
      ],
      "showObjectCommandTitle": [
        "XRTMessages"
      ],
      "ADD_BUTTON_TITLE": [
        "BaseMessages"
      ],
      "arrangeMenu": [
        "treeTableMessages",
        "treeTableMessages",
        "treeTableMessages"
      ],
      "homeCommandTitle": [
        "UIMessages"
      ],
      "signOut": [
        "UIMessages"
      ],
      "save": [
        "XRTMessages"
      ],
      "newTabTitle": [
        "awAddDirectiveMessages"
      ],
      "navigationConfirmationSingle": [
        "XRTMessages"
      ],
      "discard": [
        "XRTMessages"
      ],
      "objectInfoLabel": [
        "XRTMessages"
      ],
      "taskbarFullScreen": [
        "UIElementsMessages",
        "UIElementsMessages",
        "UIElementsMessages"
      ],
      "taskbarFullScreenExit": [
        "UIElementsMessages",
        "UIElementsMessages"
      ],
      "REMOVE_BUTTON_TITLE": [
        "BaseMessages"
      ],
      "commandPanel": [
        "UIElementsMessages"
      ],
      "RESET_TEXT": [
        "BaseMessages"
      ],
      "MOVE_UP_BUTTON_TITLE": [
        "BaseMessages"
      ],
      "MOVE_DOWN_BUTTON_TITLE": [
        "BaseMessages"
      ],
      "showImageViewText": [
        "XRTMessages",
        "XRTMessages"
      ],
      "showListViewText": [
        "XRTMessages",
        "XRTMessages"
      ],
      "showListWithSummaryViewText": [
        "XRTMessages"
      ],
      "showTablewithSummaryViewText": [
        "XRTMessages"
      ],
      "showTableViewText": [
        "XRTMessages",
        "XRTMessages"
      ],
      "showObjectCommandDownloadTitle": [
        "XRTMessages"
      ],
      "objectNavigationSubLocationTitle": [
        "XRTMessages"
      ],
      "startEdit": [
        "XRTMessages"
      ],
      "delete": [
        "ZeroCompileCommandMessages"
      ],
      "OpenGroupCommandFooterDesc": [
        "ZeroCompileCommandMessages"
      ],
      "favoritesTitle": [
        "ZeroCompileCommandBaseMessages"
      ],
      "AddProfilePicture": [
        "AddProfilePictureMessages"
      ],
      "Awp0ChangeOwner": [
        "Awp0ChangeOwnerMessages"
      ],
      "Awp0EditGroup": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0PasteGroup": [
        "ZeroCompileCommandBaseMessages"
      ],
      "Awp0ChangePasswordTitle": [
        "ZeroCompileCommandMessages"
      ],
      "COMMON_USER_SETTING_BAR_CLOSE": [
        "commonFrameMessages"
      ],
      "cancelCheckoutTitle": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0FullScreenDesc": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "Awp0MultipleFileDwnldTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowTreeViewTitle": [
        "ZeroCompileCommandMessages"
      ],
      "compactLayout": [
        "ZeroCompileCommandMessages"
      ],
      "cancel": [
        "ZeroCompileCommandMessages"
      ],
      "showFileVersions": [
        "ZeroCompileCommandMessages"
      ],
      "showFileVersionsDesc": [
        "ZeroCompileCommandMessages"
      ],
      "editLocalizationSingle": [
        "MultiLanguagePropertyMessages"
      ],
      "editLocalizationSingleDesc": [
        "MultiLanguagePropertyMessages"
      ],
      "addorRemoveLocales": [
        "MultiLanguagePropertyMessages"
      ],
      "addorRemoveLocalesDesc": [
        "MultiLanguagePropertyMessages"
      ],
      "removeLocale": [
        "MultiLanguagePropertyMessages"
      ],
      "removeLocaleDesc": [
        "MultiLanguagePropertyMessages"
      ],
      "removeProjectTitle": [
        "ProjmgmtConstants"
      ],
      "aw_removeProjectCellCommandAction": [
        "ProjmgmtConstants"
      ],
      "Awp0RemoveProjectsCellDesc": [
        "ProjmgmtConstants"
      ],
      "uvCheckoutTitle": [
        "Awp0ViewerGalleryMessages"
      ],
      "uvCheckinTitle": [
        "Awp0ViewerGalleryMessages"
      ],
      "uvWordWrapTitle": [
        "Awp0ViewerGalleryMessages"
      ],
      "aw_viewerRightSide": [
        "Awp0ViewerGalleryMessages"
      ],
      "aw_universalViewerLink": [
        "Awp0ViewerGalleryMessages"
      ],
      "uvCheckoutDesc": [
        "Awp0ViewerGalleryMessages"
      ],
      "Awp0ShowObjectForUVpDesc": [
        "Awp0ViewerGalleryMessages"
      ],
      "uvWordWrapDesc": [
        "Awp0ViewerGalleryMessages"
      ],
      "Awp0ViewFileForUVDesc": [
        "Awp0ViewerGalleryMessages"
      ],
      "Awp0ViewFileTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0ShowObjectTitle": [
        "ShowObjectMessages"
      ],
      "compareTitle": [
        "UIMessages",
        "UIMessages"
      ],
      "objectSetCompareViewModeDesc": [
        "UIMessages"
      ],
      "startEditCommandTitle": [
        "GraphMessages"
      ],
      "exitEditCommandTitle": [
        "GraphMessages"
      ],
      "legendCommandTitle": [
        "GraphMessages"
      ],
      "applyLayout": [
        "GraphMessages"
      ],
      "topToBottomLayout": [
        "GraphMessages"
      ],
      "rightToLeftLayout": [
        "GraphMessages"
      ],
      "leftToRightLayout": [
        "GraphMessages"
      ],
      "bottomToTopLayout": [
        "GraphMessages"
      ],
      "organicLayout": [
        "GraphMessages"
      ],
      "balloonLayout": [
        "GraphMessages"
      ],
      "snakeLayout": [
        "GraphMessages"
      ],
      "incrementalLayout": [
        "GraphMessages"
      ],
      "UseTransparencyOnTitle": [
        "Awv0threeDViewerMessages"
      ],
      "UseTransparencyOffTitle": [
        "Awv0threeDViewerMessages"
      ],
      "NavigationRotateTitle": [
        "Awv0threeDViewerMessages"
      ],
      "NavigationPanTitle": [
        "Awv0threeDViewerMessages"
      ],
      "NavigationZoomTitle": [
        "Awv0threeDViewerMessages"
      ],
      "AreaSelectTitle": [
        "Awv0threeDViewerMessages"
      ],
      "ViewerSettingsPanelTitle": [
        "Awv0threeDViewerMessages"
      ],
      "standardViews": [
        "Awv0threeDViewerMessages"
      ],
      "visibilityControls": [
        "Awv0threeDViewerMessages"
      ],
      "isometric": [
        "Awv0threeDViewerMessages"
      ],
      "trimetric": [
        "Awv0threeDViewerMessages"
      ],
      "top": [
        "Awv0threeDViewerMessages"
      ],
      "front": [
        "Awv0threeDViewerMessages"
      ],
      "right": [
        "Awv0threeDViewerMessages"
      ],
      "back": [
        "Awv0threeDViewerMessages"
      ],
      "bottom": [
        "Awv0threeDViewerMessages"
      ],
      "left": [
        "Awv0threeDViewerMessages"
      ],
      "allOn": [
        "Awv0threeDViewerMessages"
      ],
      "allOff": [
        "Awv0threeDViewerMessages"
      ],
      "selectedOff": [
        "Awv0threeDViewerMessages"
      ],
      "selectedOn": [
        "Awv0threeDViewerMessages"
      ],
      "selectedOnly": [
        "Awv0threeDViewerMessages"
      ],
      "contextOff": [
        "Awv0threeDViewerMessages"
      ],
      "contextOn": [
        "Awv0threeDViewerMessages"
      ],
      "contextOnly": [
        "Awv0threeDViewerMessages"
      ],
      "selectContext": [
        "Awv0threeDViewerMessages"
      ],
      "fit": [
        "Awv0threeDViewerMessages"
      ],
      "pickFilter": [
        "Awv0threeDViewerMessages"
      ],
      "3DNavigation": [
        "Awv0threeDViewerMessages"
      ],
      "removeAnalysisResult": [
        "Awv0threeDViewerMessages"
      ],
      "removeAnalysisResultCancelButtonText": [
        "Awv0threeDViewerMessages"
      ],
      "removeAnalysisResultRemoveButtonText": [
        "Awv0threeDViewerMessages"
      ],
      "removeAnalysisResultMessage": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0PanDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0RotateDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ZoomDesc": [
        "Awv0threeDViewerMessages"
      ],
      "ViewNavigationGroupDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0UseTransparencyDesc": [
        "Awv0threeDViewerMessages"
      ],
      "MeasurementFilterGroupDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ViewerSettingsDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ViewOrientationGroupDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientIsometricDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientTrimetricDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientTopDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientFrontDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientRightDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientBackDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientBottomDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0OrientLeftDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ViewerConvenienceCommandGroupDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0AllOnDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0AllOffDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0SelectedOffDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0SelectedOnDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0SelectedOnlyDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ContextOffDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ContextOnDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0ContextOnlyDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0SelectContextDesc": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0FitDesc": [
        "Awv0threeDViewerMessages"
      ],
      "threeDPageTitle": [
        "Awv0threeDViewerMessages"
      ],
      "Close": [
        "Awv0threeDViewerMessages"
      ],
      "Awv0Close3DSubCommandsToolbarDesc": [
        "Awv0threeDViewerMessages"
      ],
      "rotateClockwise": [
        "ImageViewerMessages"
      ],
      "rotateCounterclockwise": [
        "ImageViewerMessages"
      ],
      "rotateCWDesc": [
        "ImageViewerMessages"
      ],
      "rotateCCWDesc": [
        "ImageViewerMessages"
      ],
      "openVVICommandTitle": [
        "VisualizationMessages"
      ],
      "Awp0OpenVVIDesc": [
        "VisualizationMessages"
      ],
      "homeFolderTitle": [
        "GatewayMessages"
      ],
      "unPinObjectCommandTitle": [
        "GatewayMessages"
      ],
      "pinObjectCommandTitle": [
        "GatewayMessages"
      ],
      "unPinObjectFailed": [
        "GatewayMessages"
      ],
      "pinObjectFailed": [
        "GatewayMessages"
      ],
      "Awp0ShowHomeFolderDesc": [
        "GatewayMessages"
      ],
      "Awp0PinObjectDesc": [
        "GatewayMessages"
      ],
      "Awp0UnPinObject": [
        "tcgatewayjsTooltipMessages"
      ],
      "removeAllFilters": [
        "treeTableMessages"
      ],
      "toggleDynamicRowHeight": [
        "UIMessages"
      ],
      "removeAllFiltersDesc": [
        "UIMessages"
      ],
      "changeThemeCommand": [
        "UIMessages"
      ],
      "lightTheme": [
        "UIMessages"
      ],
      "darkTheme": [
        "UIMessages"
      ],
      "showFiltersTitle": [
        "UIMessages"
      ],
      "hideFiltersTitle": [
        "UIMessages"
      ],
      "Awp0ChangeThemeDesc": [
        "UIMessages"
      ],
      "aw_rightWall": [
        "UIElementsMessages"
      ],
      "aw_footer": [
        "UIElementsMessages"
      ],
      "aw_primaryWorkArea": [
        "UIElementsMessages"
      ],
      "aw_globalNavigationbar": [
        "UIElementsMessages"
      ],
      "Awp0TaskbarFullScreenDesc": [
        "UIElementsMessages"
      ],
      "Awp0TaskbarExitFullScreenDesc": [
        "UIElementsMessages"
      ],
      "addObjectPanelPinButtonToolTip": [
        "awAddDirectiveMessages"
      ],
      "addObjectPanelUnpinButtonToolTip": [
        "awAddDirectiveMessages"
      ],
      "addProjectButtonTitle": [
        "awAddDirectiveMessages"
      ],
      "addObjectPanel_oneStepPinCommands": [
        "awAddDirectiveMessages"
      ],
      "uiwidget_projectSectionCommands": [
        "awAddDirectiveMessages"
      ],
      "panelPinButtonDesc": [
        "awAddDirectiveMessages"
      ],
      "panelUnPinButtonDesc": [
        "awAddDirectiveMessages"
      ],
      "uiwidgetAddcmdDesc": [
        "awAddDirectiveMessages"
      ]
    },
    "onEvent": [
      {
        "eventId": "favorites.add",
        "action": "addFavorites"
      },
      {
        "eventId": "favorites.remove",
        "action": "removeFavorites"
      },
      {
        "eventId": "dataset.ref_listIsNull",
        "action": "getPropertyRefListSOA"
      },
      {
        "eventId": "dataset.ref_listIsNotNull",
        "action": "getDatasetObjectJS"
      },
      {
        "eventId": "dataset.getDatasetObject",
        "action": "getDatasetObjectJS"
      },
      {
        "eventId": "imanfile.originalfilenamenull",
        "action": "getOriginalFilenameSOA"
      },
      {
        "eventId": "imanfile.originalfilenamenotnull",
        "action": "getOriginalFileNameObjectsJS"
      },
      {
        "eventId": "imanfile.populateFileNames",
        "action": "populateFileNames"
      },
      {
        "eventId": "imanfile.replaceDataset",
        "action": "replaceDataset"
      },
      {
        "eventId": "imanfile.displayReplacePanel",
        "action": "replacePanelDisplay"
      },
      {
        "eventId": "replaceFile.syncronousReplace",
        "action": "nullEventCheck"
      },
      {
        "eventId": "replaceFile.isDSMEnabled",
        "action": "getPropertyRefListSOA"
      },
      {
        "eventId": "replaceFile.loadPlmdObjects",
        "action": "loadPlmdReplaceOperationData"
      },
      {
        "eventId": "replaceFile.EvaluateCondition",
        "action": "evaluateCondition"
      },
      {
        "eventId": "replaceFile.openSinglePLmdFile",
        "action": "openPlmdFile"
      },
      {
        "eventId": "cut.performCutOnUnderlyingObjects",
        "action": "performCutOnUnderlyingObjects"
      },
      {
        "eventId": "save.performOperation",
        "action": "performSaveOperation"
      },
      {
        "eventId": "cut.performCutOperation",
        "action": "performCutOperation"
      },
      {
        "eventId": "cut.getUnderlyingObjects",
        "action": "getUnderlyingObjects"
      },
      {
        "eventId": "saveEdits",
        "action": "saveEdits"
      },
      {
        "eventId": "SaveAsReviseWorkSpaceAdaptSuccessful",
        "action": "saveAsorReviseCommandAction"
      },
      {
        "eventId": "SaveAsOnlyWorkSpaceAdaptSuccessful",
        "action": "saveAsOnlyCommandAction"
      },
      {
        "eventId": "ReviseWorkSpaceAdaptSuccessful",
        "action": "reviseCommandAction"
      },
      {
        "eventId": "checkOutOnCancelEdits",
        "action": "checkOutOnCancelEdits"
      },
      {
        "eventId": "cancelEdits",
        "action": "cancelEdits"
      },
      {
        "eventId": "cancelEditsPreferenceCheck",
        "action": "cancelEditsPreferenceCheck"
      },
      {
        "eventId": "cancelEditsPreferenceSetTrue",
        "message": "cancelEditsLeaveConfirmationMessage"
      },
      {
        "eventId": "checkEditInProgress",
        "action": "editInProgress"
      },
      {
        "eventId": "checkEditInProgressBeforeEditLocalization",
        "action": "editInProgressBeforeEditLocalization"
      },
      {
        "eventId": "cancelEditsBeforeEditLocalization",
        "action": "cancelEditsBeforeEditLocalization"
      },
      {
        "eventId": "leaveConfirmationBeforeEditLocalization",
        "action": "leaveConfirmationBeforeEditLocalization"
      },
      {
        "eventId": "openEditLocalizationSinglePanel",
        "action": "openEditLocalizationSinglePanel"
      },
      {
        "eventId": "saveEditsAndCheckin",
        "action": "saveEditsAndCheckin"
      },
      {
        "eventId": "checkEditInProgressBeforeCheckin",
        "action": "checkEditInProgressBeforeCheckin"
      },
      {
        "eventId": "retrieveSelectedObjects",
        "action": "getSelectedObjects"
      },
      {
        "eventId": "retrieveCheckinInputs",
        "action": "getCheckinInputs"
      },
      {
        "eventId": "updateURLParam",
        "action": "updateEditStateInURL"
      },
      {
        "eventId": "checkItOut",
        "action": "performCheckout"
      },
      {
        "eventId": "checkIn",
        "action": "performCheckin"
      },
      {
        "eventId": "cancelCheckout",
        "action": "performCancelCheckout"
      },
      {
        "eventId": "leaveConfirmation.success",
        "action": "leaveConfirmation"
      },
      {
        "eventId": "cutToAwClipboard",
        "action": "cutToAwClipboard"
      },
      {
        "eventId": "datasets.getFileNamesAndTickets",
        "action": "initiateMultipleFileDownload"
      },
      {
        "eventId": "datasets.openFilesFromTickets",
        "action": "openMultipleFilesFromTickets"
      },
      {
        "eventId": "dataset.datasetObjectLoaded",
        "action": "getDatasetRefProperties"
      },
      {
        "eventId": "dataset.getRefListModelObject",
        "action": "getRefListModelObject"
      },
      {
        "eventId": "dataset.downloadFile",
        "action": "getDatasetTicketAndOpen"
      },
      {
        "eventId": "dataset.openFileFromTicketForDSM",
        "action": "openDatasetFileFromTicketForDSM"
      },
      {
        "eventId": "dataset.openFileFromTicket",
        "action": "openDatasetFileFromTicket"
      },
      {
        "eventId": "dataset.checkIsDSMUsable",
        "action": "checkIsDSMUsable"
      },
      {
        "eventId": "idDisplayRule.contextSet",
        "action": "launchIdDispRuleInfoPanelAction"
      },
      {
        "eventId": "dataset.getPropertyForDSM",
        "action": "getPropertyForDSM"
      },
      {
        "eventId": "dataset.downloadSelectedDatasetForDSM",
        "action": "downloadSelectedDatasetForDSM"
      },
      {
        "eventId": "dataset.getRefListCDM",
        "action": "getRefListObject"
      },
      {
        "eventId": "dataset.downloadSelectedDataset",
        "action": "downloadSelectedDataset"
      },
      {
        "eventId": "addObject.ensureFilterTypesLoaded",
        "action": "ensureFilterTypesLoaded"
      },
      {
        "eventId": "addObject.open",
        "action": "openAddPanel"
      },
      {
        "eventId": "addObject.openObjectSet",
        "action": "openAddPanelObjectSet"
      },
      {
        "eventId": "confirmDeleteEvent",
        "message": "singleObjDeleteConfirmationMessage"
      },
      {
        "eventId": "confirmSingleCutOrCancelEvent",
        "message": "singleCutOrCancelConfirmationMessage"
      },
      {
        "eventId": "confirmMultipleCutOrCancelEvent",
        "message": "multipleCutOrCancelConfirmationMessage"
      },
      {
        "eventId": "confirmMultipleDeleteEvent",
        "message": "multipleDeleteConfirmationMessage"
      },
      {
        "eventId": "pasteToObjectSet",
        "action": "pasteContentsFromClipboardToObjectSet"
      },
      {
        "eventId": "delete.initiateDeleteWithConfRevContext",
        "action": "performDeleteWithConfRevContext"
      },
      {
        "eventId": "delete.initiateRegularDeleteOperation",
        "action": "performUnlinkAndDelete"
      },
      {
        "eventId": "delete.initiateUnlinkDeleteOperation",
        "action": "performUnlinkAndDelete"
      },
      {
        "eventId": "delete.cutUnderlyingItemFromParent",
        "action": "cutConfRevsFromTheirItem"
      },
      {
        "eventId": "delete.haveConfRevsToCut",
        "action": "getUnderlyingObjsForConfRevs"
      },
      {
        "eventId": "performDelete",
        "action": "performDelete"
      },
      {
        "eventId": "openArrangePanelBasic",
        "action": "openArrangePanelBasic"
      },
      {
        "eventId": "getSelObjsForMultipleFileDwnld",
        "action": "getSelObjsForMultipleFileDwnld"
      },
      {
        "eventId": "getModelObjectFromVMO",
        "action": "getModelObjectFromVMO"
      },
      {
        "eventId": "dataset.getRefListForMultipleFileDwnldForDSM",
        "action": "getRefListForMultipleFileDwnldForDSM"
      },
      {
        "eventId": "dataset.getPlmdFileTicketForMultipleDwnldForDSM",
        "action": "getPlmdFileTicketForMultipleDwnldForDSM"
      },
      {
        "eventId": "showConfirmRemoveAnalysisResultMessage",
        "message": "confirmRemoveAnalysisResult"
      },
      {
        "eventId": "showConfirmRemoveAnalysisResultMessage_scv",
        "message": "confirmRemoveAnalysisResult_scv"
      },
      {},
      {
        "eventId": "showHomeFolder",
        "action": "showHomeFolder"
      },
      {
        "eventId": "unPinObject",
        "action": "unpinSelectedObject"
      },
      {
        "eventId": "pinObject",
        "action": "pinSelectedObject"
      },
      {
        "eventId": "pinDelegateObject",
        "action": "pinSelectedObjectDelegateAction",
        "cacheEventData": true
      }
    ],
    "messages": {
      "revRuleChangeSucess": {
        "messageType": "INFO",
        "messageText": "{{i18n.revRuleChangeSucess}}",
        "messageTextParams": []
      },
      "revRuleChangeFailed": {
        "messageType": "ERROR",
        "messageText": "{{i18n.revRuleChangeFailed}}",
        "messageTextParams": []
      },
      "invalidInputObject": {
        "messageType": "ERROR",
        "messageText": "{{i18n.InvalidSelectedObject}}",
        "messageTextParams": [
          "null"
        ]
      },
      "uploadInProgress": {
        "messageType": "ERROR",
        "messageText": "{{i18n.AsynUploadInProgress}}",
        "messageTextParams": [
          "null"
        ]
      },
      "platformnotsupported": {
        "messageType": "INFO",
        "messageText": "{{i18n.PlatformNotSupported}}"
      },
      "dataSetCannotBeReplacedMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.replaceNoValidTarget}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ]
      },
      "checkoutFailureSingle": {
        "messageType": "ERROR",
        "messageText": "{{i18n.checkoutFailure}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{data.checkOutPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "checkoutFailureMultiple": {
        "expression": {
          "successCount": "ctx.mselected.length - data.checkOutPartialErrors.length"
        },
        "messageType": "ERROR",
        "messageKey": "commandNotyError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.checkOutPartialErrors}}"
        }
      },
      "checkinFailureSingle": {
        "messageType": "ERROR",
        "messageText": "{{i18n.checkinFailure}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{data.checkinPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "checkinFailureMultiple": {
        "expression": {
          "successCount": "ctx.mselected.length - data.checkinPartialErrors.length"
        },
        "messageType": "ERROR",
        "messageKey": "checkinNotyError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.checkinPartialErrors}}"
        }
      },
      "cancelCheckoutFailureSingle": {
        "messageType": "ERROR",
        "messageText": "{{i18n.cancelCheckoutFailure}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{data.cancelCheckOutPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "cancelCheckoutSuccess": {
        "messageType": "INFO",
        "messageText": "{{i18n.cancelCheckoutSuccess}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.mselected.length}}"
        ]
      },
      "cancelCheckoutFailureMultiple": {
        "expression": {
          "successCount": "ctx.mselected.length - data.cancelCheckOutPartialErrors.length"
        },
        "messageType": "ERROR",
        "messageKey": "cancelCheckoutNotyError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.cancelCheckOutPartialErrors}}"
        }
      },
      "cutCommandFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "cutSingleSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutSingleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{ctx.pselected}}"
        ]
      },
      "cutMultipleSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.pselected}}"
        ]
      },
      "copySingleSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.copySingleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}"
        ]
      },
      "copyMultipleSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.copyMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "dataSetCannotBeDownloadedMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.dataSetCannotBeDownloaded}}",
        "messageTextParams": [
          "{{data.datasetModelObject.props.object_string.uiValues[0]}}"
        ]
      },
      "singleObjectWasDownloaded": {
        "messageType": "INFO",
        "messageText": "{{i18n.singleObjectWasDownloadedMessage}}",
        "messageTextParams": [
          "{{data.inputModelObjects.length}}"
        ]
      },
      "multipleObjectsWereDownloaded": {
        "messageType": "INFO",
        "messageText": "{{i18n.multipleObjectsWereDownloadedMessage}}",
        "messageTextParams": [
          "{{data.inputModelObjects.length}}"
        ]
      },
      "multipleObjectsWereDownloadedFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "copyDownloadableFileUrlSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.copyDownloadableFileUrlSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}"
        ]
      },
      "copyDownloadableFileUrlFailure": {
        "messageType": "INFO",
        "messageText": "{{i18n.copyDownloadableFileUrlFailure}}",
        "messageTextParams": []
      },
      "cancelEditsLeaveConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.navigationConfirmationSingle}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}",
            "action": ""
          },
          {
            "option": "Discard",
            "text": "{{i18n.discard}}",
            "action": "cancelEdits"
          }
        ]
      },
      "singleCutOrCancelCfgRevConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteSingleFailureAskCutMessage}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}",
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "Cut",
            "text": "{{i18n.Awp0CutTitle}}",
            "action": "cutConfiguredRevs"
          },
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          }
        ]
      },
      "singleCutOrCancelConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteSingleFailureAskCutMessage}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}",
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "Cut",
            "text": "{{i18n.Awp0CutTitle}}",
            "action": "cutConfiguredRevs"
          },
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          }
        ]
      },
      "multipleCutOrCancelConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteMultipleFailureMessage}}",
        "expression": {
          "totalRemainToDelete": "objectsFailedToDelete.totalRemainToDelete",
          "totalSelected": "objectsFailedToDelete.totalSelected",
          "message": "objectsFailedToDelete.message"
        },
        "messageTextParams": [
          "{{expression.totalRemainToDelete}}",
          "{{expression.totalSelected}}",
          "{{expression.message}}"
        ],
        "messageData": {
          "partialErrors": "{{data.deleteObjectsPartialErrors}}"
        },
        "navigationOptions": [
          {
            "option": "Cut",
            "text": "{{i18n.Awp0CutTitle}}",
            "action": "cutConfiguredRevs"
          },
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}",
            "action": "refreshSelectedObject"
          }
        ]
      },
      "singleObjDeleteConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.singleObjDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "initiateDeleteAction"
          }
        ]
      },
      "multipleDeleteConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.singleDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "initiateDeleteAction"
          }
        ]
      },
      "deleteObjectsSuccessfulMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.deleteSuccessMessage}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.mselected.length}}"
        ]
      },
      "deleteObjectsSingleFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.deleteSingleFailureMessage}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "deleteObjectsMultipleFailureMessage": {
        "expression": {
          "failureCount": "objectsFailedToDelete.totalDeleted"
        },
        "messageType": "ERROR",
        "messageKey": "deleteObjectsNotyError",
        "messageTextParams": [
          "{{expression.failureCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.deleteObjectsPartialErrors}}"
        }
      },
      "pasteSuccessMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.pasteSuccessMessage}}",
        "messageTextParams": [
          "{{ctx.awClipBoardProvider[0].props.object_string.uiValues[0]}}",
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ]
      },
      "pasteMultipleSuccessMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.pasteMultipleSuccessMessage}}",
        "messageTextParams": [
          "{{ctx.awClipBoardProvider.length}}",
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ]
      },
      "pasteToObjectSetSuccessMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.pasteSuccessMessage}}",
        "messageTextParams": [
          "{{data.modelTypeRelationObject.validSourceObjects[0].props.object_string.uiValues[0]}}",
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ]
      },
      "pasteToObjectSetMultipleSuccessMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.pasteMultipleSuccessMessage}}",
        "messageTextParams": [
          "{{data.modelTypeRelationObject.validSourceObjects.length}}",
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ]
      },
      "pasteToObjectSetSourceDuplicateFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "performCutFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "confirmRemoveAnalysisResult": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeAnalysisResultMessage}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.removeAnalysisResultCancelButtonText}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.removeAnalysisResultRemoveButtonText}",
            "action": "removeAnalysisResultAction"
          }
        ]
      },
      "confirmRemoveAnalysisResult_scv": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeAnalysisResultMessage}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.removeAnalysisResultCancelButtonText}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.removeAnalysisResultRemoveButtonText}",
            "action": "removeAnalysisResultAction_scv"
          }
        ]
      },
      "unpinFailure": {
        "messageType": "ERROR",
        "messageText": "{{i18n.unPinObjectFailed}}"
      },
      "pinFailure": {
        "messageType": "ERROR",
        "messageText": "{{i18n.pinObjectFailed}}"
      }
    },
    "functions": {
      "getObjects": {
        "functionName": "getObjects",
        "parameters": [
          "{{data.objects}}"
        ]
      },
      "createInputForDSM": {
        "functionName": "createInputForDSM",
        "parameters": [
          "{{ctx.selected}}",
          "{{data}}"
        ]
      },
      "isPlatformSupported": {
        "functionName": "isPlatformSupported",
        "parameters": []
      },
      "cutInputs": {
        "functionName": "cutInputs",
        "parameters": []
      },
      "adaptedRelatedModifiedCutInput": {
        "functionName": "adaptedRelatedModifiedInput",
        "parameters": []
      },
      "adaptedRelatedModifiedPasteInput": {
        "functionName": "adaptedInput",
        "parameters": [
          "{{ctx.selected}}"
        ]
      },
      "adaptedClipboardObjectsInput": {
        "functionName": "adaptedInput",
        "parameters": [
          "{{ctx.awClipBoardProvider}}"
        ]
      },
      "getDsmDownloadInfo": {
        "functionName": "getDsmDownloadInfo",
        "parameters": [
          "{{data.datasetModelObject}}",
          "{{data.modelObject}}"
        ]
      }
    },
    "preferences": [
      "AWC_CancelEdit_Confirmation",
      "AWC_display_configured_revs_for_pwa"
    ],
    "dataParseDefinitions": {
      "updateUserCtx": {
        "outputFormatType": "ViewModelObject",
        "dataInput": "plain[0]",
        "operationType": "CREATE"
      }
    }
  },
  "aliasRegistry": {
    "homeFavoritesFolder64": [
      "favoritesfolder"
    ],
    "homeFavorites64": [
      "favorites"
    ],
    "typeDirectModelDataset48": [
      "DirectModel",
      "DirectModelAssembly"
    ],
    "typeHtmlDataset48": [
      "HTML"
    ],
    "typeHyperlink48": [
      "Web Link",
      "web link"
    ],
    "typeItemRevision48": [
      "BOMLine"
    ],
    "typeMsExcel48": [
      "MSExcel",
      "MSExcelX",
      "ExcelReportFormatter",
      "ExcelTemplateMaster",
      "ExcelTemplateMasterS",
      "xls",
      "xlsx"
    ],
    "typeMsPowerpoint48": [
      "MSPowerPoint",
      "MSPowerPointX",
      "MSPowerPointTemplate",
      "MSPowerPointTemplateX",
      "ppt",
      "pptx",
      "pot",
      "potx"
    ],
    "typeMsWord48": [
      "MSWord",
      "MSWordX",
      "MSWordTemplate",
      "MSWordTemplateX",
      "CrfOutputMSWord",
      "CrfMSWordDocStylesheet",
      "doc",
      "docx",
      "dot",
      "dotx"
    ],
    "typeObjectTemplate48": [
      "SpecTemplateRevision",
      "SpecTemplate",
      "ObjectTemplateRevision",
      "ObjectTemplate"
    ],
    "typeExcelTemplate48": [
      "ExcelTemplateRevision",
      "MSExcelTemplate",
      "MSExcelTemplateX",
      "xlt",
      "xltx"
    ],
    "typePdf48": [
      "PDF",
      "CrfOutputPdf",
      "CrfPdfStylesheet",
      "pdf"
    ],
    "typePartRevision48": [
      "Part Revision"
    ],
    "typeDesignRevision48": [
      "Design Revision"
    ],
    "typePerson48": [
      "GroupMember",
      "User"
    ],
    "typeHTMLReport48": [
      "CME_Report"
    ],
    "typeTile48": [
      "Awp0Tile"
    ],
    "typeTileCollection48": [
      "Awp0TileCollection"
    ],
    "typeTileProxy48": [
      "Awp0TileProxy"
    ],
    "typeTileTemplate48": [
      "Awp0TileTemplate"
    ],
    "typeUGMasterDataset48": [
      "UGMASTER"
    ],
    "typeModelView48": [
      "Fnd0DisclosedModelViewData",
      "Fnd0ModelViewProxy"
    ],
    "typeModelViewPalette48": [
      "Fnd0ModelViewPalette"
    ],
    "typeCpgRawMaterial48": [
      "RawMaterial",
      "RawMaterialRevision"
    ],
    "typeCpgBrief48": [
      "CPMarketingBrief",
      "CPMarketingBriefRevision"
    ],
    "typeCpgThemeBoard48": [
      "CPThemeBoard",
      "CPThemeBoardRevision"
    ],
    "typeIdDisplayRule48": [
      "IdDispRule"
    ],
    "typeDataTypeIdentifier48": [
      "Identifier"
    ],
    "typeSiteLocation48": [
      "POM_imc"
    ],
    "homeAdmin64": [
      "admin"
    ],
    "homePDF64": [
      "pdf"
    ],
    "homeHome64": [
      "home"
    ],
    "homeHomeFolder64": [
      "homefolder"
    ],
    "homePart64": [
      "part"
    ],
    "homeHelp64": [
      "help"
    ],
    "homePrint64": [
      "print"
    ],
    "homeDocument64": [
      "document"
    ],
    "homeIdea64": [
      "idea"
    ],
    "homeFolder64": [
      "folder"
    ],
    "homeAnnouncement64": [
      "announcement"
    ],
    "homePower64": [
      "power"
    ],
    "homeMail64": [
      "mail"
    ],
    "homePeople64": [
      "people"
    ],
    "homeUnlive64": [
      "unlive"
    ],
    "homeEdit64": [
      "xrtedit"
    ],
    "homePinButton24": [
      "pin"
    ],
    "homeUnpinButton24": [
      "unpin"
    ],
    "homeUpLeftArrowMakeLarge24": [
      "shrink"
    ],
    "homeLeftArrowMakeSmall24": [
      "collapse"
    ],
    "homeDownRightArrowMakeMedium24": [
      "expand"
    ],
    "homeDisplayRule64": [
      "iddisplayrule"
    ]
  },
  "states": {
    "com_siemens_splm_client_favorites_favoritesLocation": {
      "resolveActions": {
        "resolvePropertyPolicy": {
          "actionType": "JSFunctionAsync",
          "method": "resolvePropertyPolicy",
          "inputData": {
            "propertyPolicy": "/policies/favoritesLocationPropertyPolicy.json"
          },
          "deps": "js/tcDefaultLocationService"
        }
      },
      "data": {
        "browserSubTitle": {
          "source": "/i18n/FavoritesMessages",
          "key": "favoritesAppDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/FavoritesMessages",
          "key": "favoritesAppDisplayName"
        },
        "propertyPolicy": "/policies/favoritesLocationPropertyPolicy.json"
      },
      "view": "tcLocation",
      "parent": "root"
    },
    "myFavorites": {
      "data": {
        "priority": 0,
        "label": {
          "source": "/i18n/FavoritesMessages",
          "key": "myFavorites"
        },
        "clientScopeURI": "Awp0MyFavorites",
        "nameToken": "com.siemens.splm.client.favorites:favoritesSubLocation",
        "context": {
          "search": {
            "provider": "Awp0FavoritesProvider",
            "sortType": "Priority",
            "criteria": {
              "search": ""
            }
          }
        },
        "viewBase": "favorites",
        "secondaryView": "awSecondaryWorkArea"
      },
      "parent": "com_siemens_splm_client_favorites_favoritesLocation",
      "type": "subLocation",
      "url": "/myFavorites"
    },
    "myRecentViewedObjects": {
      "data": {
        "priority": 1,
        "label": {
          "source": "/i18n/FavoritesMessages",
          "key": "myRecentViewedObjects"
        },
        "clientScopeURI": "Awp0MyRecent",
        "nameToken": "com.siemens.splm.client.favorites:myRecentSubLocation",
        "context": {
          "search": {
            "provider": "Awp0RecentObjectsProvider",
            "sortType": "Priority",
            "criteria": {
              "search": ""
            }
          }
        },
        "viewBase": "favorites"
      },
      "parent": "com_siemens_splm_client_favorites_favoritesLocation",
      "type": "subLocation",
      "url": "/myRecentViewedObjects"
    },
    "com_siemens_splm_client_favorites_favoritesGQLLocation": {
      "resolveActions": {
        "resolvePropertyPolicy": {
          "actionType": "JSFunctionAsync",
          "method": "resolvePropertyPolicy",
          "inputData": {
            "propertyPolicy": "/policies/favoritesLocationPropertyPolicy.json"
          },
          "deps": "js/tcDefaultLocationService"
        }
      },
      "data": {
        "browserSubTitle": {
          "source": "/i18n/FavoritesMessages",
          "key": "favoritesAppDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/FavoritesMessages",
          "key": "favoritesAppDisplayName"
        },
        "propertyPolicy": "/policies/favoritesLocationPropertyPolicy.json"
      },
      "view": "tcLocation",
      "parent": "root",
      "url": "/fgql"
    },
    "myFavoritesGQL": {
      "data": {
        "priority": 0,
        "label": {
          "source": "/i18n/FavoritesMessages",
          "key": "myFavorites"
        },
        "clientScopeURI": "Awp0MyFavorites",
        "nameToken": "com.siemens.splm.client.favoritesGQL:favoritesSubLocation",
        "context": {
          "search": {
            "provider": "Awp0FavoritesProvider",
            "sortType": "Priority",
            "criteria": {
              "search": ""
            }
          },
          "istcgql": true
        },
        "viewBase": "favoritesGQL",
        "secondaryView": "awSecondaryWorkArea"
      },
      "parent": "com_siemens_splm_client_favorites_favoritesGQLLocation",
      "type": "subLocation",
      "url": "/myFavorites"
    },
    "myRecentViewedObjectsGQL": {
      "data": {
        "priority": 1,
        "label": {
          "source": "/i18n/FavoritesMessages",
          "key": "myRecentViewedObjects"
        },
        "clientScopeURI": "Awp0MyRecent",
        "nameToken": "com.siemens.splm.client.favorites:myRecentSubLocation",
        "context": {
          "search": {
            "provider": "Awp0RecentObjectsProvider",
            "sortType": "Priority",
            "criteria": {
              "search": ""
            }
          }
        },
        "viewBase": "favoritesGQL"
      },
      "parent": "com_siemens_splm_client_favorites_favoritesGQLLocation",
      "type": "subLocation",
      "url": "/myRecentViewedObjects"
    },
    "com_siemens_splm_clientfx_ui_components_ComponentsPresenter": {
      "abstract": false,
      "controller": "HostedPageCtrl",
      "dependencies": [
        "js/aw.hosted.page.controller"
      ],
      "params": {
        "componentId": null,
        "embeddedLocationView": null,
        "uid": null,
        "isEmbeddedView": "true"
      },
      "data": {
        "to": "{{ctx.state.param.componentId}}",
        "options": {
          "location": "replace"
        }
      },
      "url": "/com.siemens.splm.clientfx.ui.components.ComponentsPresenter"
    },
    "hostedObjectInfoLocation": {
      "controller": "HostedPageCtrl",
      "dependencies": [
        "js/aw.hosted.page.controller"
      ],
      "params": {
        "embeddedLocationView": null,
        "enableEditing": null,
        "uid": null
      },
      "url": "/hostedObjectInfoLocation",
      "view": "Awp0HostedObjectInfo"
    },
    "mockComponentLocation": {
      "url": "/mockComponentLocation",
      "view": "mockComponentLocation"
    },
    "com_siemens_splm_clientfx_tcui_xrt_showObject": {
      "abstract": false,
      "controller": "ShowObjectLocationCtrl2",
      "dependencies": [
        "js/aw.showObject.location.controller2"
      ],
      "params": {
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "d_uids": null,
        "filter": null,
        "page": null,
        "p_uid": null,
        "pageId": null,
        "s_uid": null,
        "uid": null,
        "edit": null
      },
      "reloadOnSearch": false,
      "templateUrl": "/html/aw.showObject.location2.html",
      "type": "location",
      "url": "/com.siemens.splm.clientfx.tcui.xrt.showObject"
    },
    "com_siemens_splm_client_file_download_Location": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/HeaderMessages",
          "key": "fileDownload"
        },
        "headerTitle": {
          "source": "/i18n/HeaderMessages",
          "key": "fileDownload"
        }
      },
      "params": {
        "userId": null,
        "uid": null
      },
      "type": "location"
    },
    "downloadFile": {
      "data": {
        "priority": 0,
        "label": {
          "source": "",
          "key": ""
        },
        "clientScopeURI": "",
        "nameToken": "com_siemens_splm_client_file_download_Location:fileDownloadDataSummary",
        "viewModes": []
      },
      "parent": "com_siemens_splm_client_file_download_Location",
      "reloadOnSearch": true,
      "type": "subLocation",
      "url": "/downloadFile",
      "view": "Awp0FileDownload"
    },
    "com_siemens_splm_clientfx_tcui_idDisplayRuleLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/IdDisplayRulesMessages",
          "key": "idDisplayRule"
        },
        "headerTitle": {
          "source": "/i18n/IdDisplayRulesMessages",
          "key": "idDisplayRule"
        }
      },
      "type": "location"
    },
    "myIdDisplayRules": {
      "data": {
        "priority": 0,
        "label": {
          "source": "/i18n/IdDisplayRulesMessages",
          "key": "idDisplayRule"
        },
        "clientScopeURI": "Awp0MyIdDisplayRules",
        "nameToken": "com.siemens.splm.clientfx.tcui:idDisplayRulesSubLocation",
        "defaultDisplayMode": "SummaryView",
        "viewModes": {
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ListView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": false
          }
        },
        "viewBase": "myIdDisplayRules"
      },
      "parent": "com_siemens_splm_clientfx_tcui_idDisplayRuleLocation",
      "type": "subLocation",
      "url": "/myIdDisplayRules"
    },
    "com_siemens_splm_client_administration_workspaceadminLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/WorkspaceAdministrationMessages",
          "key": "appDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/WorkspaceAdministrationMessages",
          "key": "appDisplayName"
        }
      },
      "type": "location"
    },
    "workspaces": {
      "data": {
        "priority": 0,
        "label": {
          "source": "/i18n/WorkspaceAdministrationMessages",
          "key": "workspaceTitle"
        },
        "clientScopeURI": "Awp0ObjectNavigation",
        "nameToken": "com.siemens.splm.client.workspaceAdministration.workspaceSublocation",
        "viewBase": "workspace",
        "defaultDisplayMode": "ListView",
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": false
          },
          "TableView": {
            "primaryWorkArea": "table",
            "secondaryWorkArea": false
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        }
      },
      "parent": "com_siemens_splm_client_administration_workspaceadminLocation",
      "type": "subLocation",
      "url": "/workspaces"
    },
    "pages": {
      "data": {
        "priority": 1,
        "label": {
          "source": "/i18n/WorkspaceAdministrationMessages",
          "key": "pagesTitle"
        },
        "clientScopeURI": "Awp0ObjectNavigation",
        "nameToken": "com.siemens.splm.client.workspaceAdministration.pagesSublocation",
        "viewBase": "page",
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": false
          },
          "TableView": {
            "primaryWorkArea": "table",
            "secondaryWorkArea": false
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        }
      },
      "parent": "com_siemens_splm_client_administration_workspaceadminLocation",
      "type": "subLocation",
      "url": "/pages"
    },
    "xrtEditorLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/XRTEditorMessages",
          "key": "xrtEditorTitle"
        },
        "headerTitle": {
          "source": "/i18n/XRTEditorMessages",
          "key": "xrtEditorTitle"
        }
      },
      "type": "location"
    },
    "xrtEditor": {
      "controller": "XRTEditorCtrl",
      "data": {
        "priority": 0,
        "label": "xrtEditor"
      },
      "dependencies": [
        "js/aw-xrteditor-xrtEditor.controller"
      ],
      "parent": "xrtEditorLocation",
      "templateUrl": "/html/aw-xrteditor-xrtEditor.directive.html",
      "type": "subLocation",
      "url": "/xrteditor?prefLocation&client&objectType&xrtType&location&subLocation"
    },
    "com_siemens_splm_clientfx_pdfjs_showPdfFileLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/PdfJsConstants",
          "key": "ShowPdfFileTitle"
        },
        "headerTitle": {
          "source": "/i18n/PdfJsConstants",
          "key": "ShowPdfFileTitle"
        }
      },
      "type": "location"
    },
    "showPdfFileLocationDev": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/PdfJsConstants",
          "key": "ShowPdfFileTitle"
        },
        "headerTitle": {
          "source": "/i18n/PdfJsConstants",
          "key": "ShowPdfFileTitle"
        }
      },
      "type": "location",
      "url": "/pdf"
    },
    "com_siemens_splm_clientfx_pdfjs_showPdfFileSubLocationDev": {
      "controller": "PDFFileSubLocationCtrl",
      "data": {
        "priority": 0,
        "label": "",
        "clientScopeURI": "Awp0PdfPane",
        "nameToken": "com.siemens.splm.clientfx.pdfjs.showPdfFileSubLocation"
      },
      "dependencies": [
        "js/aw.pdffile.sublocation.controller"
      ],
      "parent": "showPdfFileLocationDev",
      "templateUrl": "/html/aw.pdffile.sublocation.html",
      "type": "subLocation",
      "url": "/com.siemens.splm.clientfx.pdfjs.showPdfFileSubLocation"
    },
    "showGatewayLocation": {
      "controller": "GatewayLocationCtrl",
      "data": {
        "browserSubTitle": {
          "source": "/i18n/UIMessages",
          "key": "homeCommandTitle"
        }
      },
      "dependencies": [
        "js/aw.gateway.location.controller"
      ],
      "type": "location"
    },
    "showGateway": {
      "data": {
        "to": "showHome",
        "toParams": {},
        "options": {
          "location": "replace"
        }
      },
      "params": {
        "validateDefaultRoutePath": null
      },
      "url": "/showGateway",
      "controller": "RedirectCtrl",
      "dependencies": [
        "js/aw.redirect.controller"
      ]
    },
    "showHome": {
      "data": {
        "priority": 0,
        "label": "",
        "clientScopeURI": "Awp0ShowTcGateway",
        "nameToken": "showGateway",
        "context": {
          "isHomePage": true,
          "hideRightWall": true
        }
      },
      "params": {
        "validateDefaultRoutePath": null,
        "test": null
      },
      "parent": "showGatewayLocation",
      "url": "/showHome",
      "view": "gateway"
    },
    "root": {
      "abstract": true,
      "view": "commonRoot"
    },
    "errorLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/UIMessages",
          "key": "MissingPageTitle"
        },
        "headerTitle": {
          "source": "/i18n/UIMessages",
          "key": "MissingPageTitle"
        }
      },
      "type": "location"
    },
    "errorSubLocation": {
      "controller": "ErrorSubLocationCtrl",
      "data": {
        "priority": 0,
        "label": ""
      },
      "dependencies": [
        "js/aw.error.sublocation.controller"
      ],
      "parent": "errorLocation",
      "templateUrl": "/html/aw.error.sublocation.html",
      "type": "subLocation",
      "url": null
    },
    "internalOAuth2State": {
      "url": "/access_token={accessToken}",
      "templateUrl": "/html/internalOAuth2State.html",
      "controller": "internalOAuth2StateController",
      "dependencies": [
        "js/aw.internalOAuth2State.controller"
      ]
    }
  },
  "syncStrategy": {
    "schemaVersion": "1.0.0",
    "syncStrategies": {
      "syncStrategyObjectForList": {
        "source": {
          "view": "favoritesList",
          "port": "pwaSelection"
        },
        "target": {
          "view": "awSecondaryWorkArea",
          "port": "swaInput"
        }
      },
      "syncStrategyObjectForTable": {
        "source": {
          "view": "favoritesTable",
          "port": "pwaSelection"
        },
        "target": {
          "view": "awSecondaryWorkArea",
          "port": "swaInput"
        }
      },
      "syncStrategyObjectForGQLList": {
        "source": {
          "view": "favoritesGQLList",
          "port": "pwaSelection"
        },
        "target": {
          "view": "awSecondaryWorkArea",
          "port": "swaInput"
        }
      },
      "syncStrategyObjectForGQLTable": {
        "source": {
          "view": "favoritesGQLTable",
          "port": "pwaSelection"
        },
        "target": {
          "view": "awSecondaryWorkArea",
          "port": "swaInput"
        }
      }
    },
    "syncStrategyHandlers": {
      "syncStrategyObjectHandlerForList": {
        "id": "syncStrategyObjectForList",
        "activeWhen": true
      },
      "syncStrategyObjectHandlerForTable": {
        "id": "syncStrategyObjectForTable",
        "activeWhen": true
      },
      "syncStrategyObjectHandlerForGQLList": {
        "id": "syncStrategyObjectForGQLList",
        "activeWhen": true
      },
      "syncStrategyObjectHandlerForGQLTable": {
        "id": "syncStrategyObjectForGQLTable",
        "activeWhen": true
      }
    }
  },
  "actionTemplateDefs": {
    "pinPanel": {
      "actionType": "JSFunction",
      "method": "setPin",
      "deps": "js/addObjectUtils",
      "inputData": {
        "data": "{{inputData.data}}"
      }
    },
    "unpinPanel": {
      "actionType": "JSFunction",
      "method": "setUnPin",
      "deps": "js/addObjectUtils",
      "inputData": {
        "data": "{{inputData.data}}"
      }
    },
    "executeViewOrientationCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "{{inputData.viewerContextNamespace}}",
        "cameraOrientation": "{{inputData.cameraOrientation}}"
      }
    },
    "GraphQL": {
      "actionType": "JSFunctionAsync",
      "method": "callGraphQL",
      "inputData": {
        "input": "{{inputData}}",
        "endPoint": "{{inputData.endPoint}}"
      },
      "deps": "js/graphQLService"
    },
    "Command": {
      "actionType": "JSFunction",
      "method": "executeCommandIfVisibleAndEnabled",
      "inputData": {
        "commandId": "{{inputData.commandId}}",
        "commandContext": "{{inputData.commandContext}}"
      },
      "deps": "js/command.service"
    },
    "activateCommandPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "{{inputData.commandId}}",
        "location": "{{inputData.location}}",
        "context": "{{inputData.context}}",
        "push": "{{inputData.push}}",
        "closeWhenCommandHidden": "{{inputData.closeWhenCommandHidden}}",
        "config": "{{inputData.config}}"
      }
    },
    "showInfoMessage": {
      "actionType": "JSFunction",
      "method": "showInfo",
      "inputData": {
        "message": "{{inputData.message}}",
        "params": "{{inputData.params}}"
      },
      "deps": "js/NotyModule"
    },
    "showWarningMessage": {
      "actionType": "JSFunction",
      "method": "showWarning",
      "inputData": {
        "message": "{{inputData.message}}",
        "params": "{{inputData.params}}"
      },
      "deps": "js/NotyModule"
    },
    "showErrorMessage": {
      "actionType": "JSFunction",
      "method": "showError",
      "inputData": {
        "message": "{{inputData.message}}",
        "params": "{{inputData.params}}"
      },
      "deps": "js/NotyModule"
    },
    "modifyCtx": {
      "actionType": "JSFunction",
      "method": "modifyCtx",
      "deps": "js/modifyCtxService",
      "inputData": {
        "methodType": "{{inputData.methodType}}",
        "name": "{{inputData.name}}",
        "value": "{{inputData.value}}",
        "path": "{{inputData.path}}"
      }
    },
    "updateFormData": {
      "actionType": "JSFunction",
      "method": "updateFormData",
      "deps": "js/declUtils",
      "inputData": {
        "fileData": "{{inputData.fileData}}",
        "data": "{{inputData.data}}"
      }
    },
    "openFile": {
      "actionType": "JSFunction",
      "method": "openFile",
      "deps": "js/fmsUtils",
      "inputData": {
        "fileTicket": "{{inputData.fileTicket}}",
        "openFileName": "{{inputData.openFileName}}"
      }
    },
    "openGlobalNavigationPanelCustomAction": {
      "actionType": "JSFunction",
      "method": "registerCtx",
      "inputData": {
        "key": "globalNavigationToolbar",
        "value": {
          "showPanel": "{{!(ctx.globalNavigationToolbar.showPanel=='true' && ctx.globalNavigationToolbar.viewName == inputData.viewName)}}",
          "viewName": "{{inputData.viewName}}"
        }
      },
      "deps": "js/appCtxService"
    },
    "createViewModelObject": {
      "actionType": "JSFunction",
      "method": "createViewModelObject",
      "deps": "js/viewModelObjectService",
      "inputData": {
        "source": "{{inputData.source}}",
        "operationName": "{{inputData.operationName}}",
        "owningObjUid": "{{inputData.owningObjUid}}",
        "serverVMO": "{{inputData.serverVMO}}"
      }
    },
    "arrangeTableColumns": {
      "actionType": "JSFunctionAsync",
      "method": "arrangeColumns",
      "deps": "js/columnArrangeService",
      "inputData": {
        "declViewModel": "{{inputData.declViewModel}}",
        "eventData": "{{inputData.eventData}}"
      }
    },
    "updateFilterCategories": {
      "actionType": "JSFunction",
      "method": "updateCategoryResults",
      "deps": "js/filterPanelService",
      "inputData": {
        "category": "{{inputData.category}}",
        "skipClientFiltering": "{{inputData.skipClientFiltering}}"
      }
    },
    "setSelection": {
      "actionType": "JSFunction",
      "method": "setSelection",
      "deps": "js/selectionModelFactory",
      "inputData": {
        "selectionModel": "{{inputData.selectionModel}}",
        "newSelection": "{{inputData.newSelection}}"
      }
    }
  },
  "adapters": [
    {},
    {
      "conditions": {
        "modelType.typeHierarchyArray": {
          "$in": "Awp0XRTObjectSetRow"
        }
      },
      "target": {
        "prop": "awp0Target",
        "method": "getAlternateSelectedObjects",
        "deps": "js/selection.service"
      }
    }
  ],
  "analytics": {
    "analyticsService": {
      "dep": "js/splmAnalyticsService"
    }
  },
  "authenticator": {
    "tcAuthenticator": {
      "dep": "js/tcAuthenticator"
    }
  },
  "clipboard": {
    "tcClipboard": {
      "dep": "js/tcClipboardService"
    }
  },
  "contextConfiguration": {
    "contexts": {
      "groupContext": {
        "view": "group"
      },
      "roleContext": {
        "view": "role"
      },
      "workSpaceContext": {
        "view": "workSpaceContext"
      },
      "idDisplayRuleContext": {
        "view": "idDisplayRule"
      },
      "autoSaveContext": {
        "view": "autoSaveContext"
      }
    },
    "placements": {
      "groupRolePlacement": {
        "anchor": "headerContextPosition",
        "contextId": "groupContext",
        "priority": 30
      },
      "rolePlacement": {
        "anchor": "headerContextPosition",
        "contextId": "roleContext",
        "priority": 35
      },
      "workSpacePlacement": {
        "anchor": "headerContextPosition",
        "contextId": "workSpaceContext",
        "priority": 40
      },
      "idDisplayRulePlacement": {
        "anchor": "headerContextPosition",
        "contextId": "idDisplayRuleContext",
        "priority": 45
      },
      "autoSavePlacement": {
        "anchor": "headerContextPosition",
        "contextId": "autoSaveContext",
        "priority": 999,
        "activeWhen": {
          "condition": "ctx.showAutoSaveToggle"
        },
        "visibleWhen": {
          "condition": "ctx.showAutoSaveToggle"
        }
      }
    }
  },
  "indicators": {
    "fx_release_status_list_approved": {
      "iconName": "ReleasedApproved",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Approved"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_pending": {
      "iconName": "ReleasedPending",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Pending"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_approval_pending": {
      "iconName": "ReleasedPending",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Approval Pending"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_created": {
      "iconName": "FlagWhite",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Created"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_Vm0Created": {
      "iconName": "FlagWhite",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Vm0Created"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_Vm0ApprovalPending": {
      "iconName": "ReleasedPending",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Vm0ApprovalPending"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_obsolete": {
      "iconName": "ReleasedObsolete",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Obsolete"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_rejected": {
      "iconName": "ReleasedRejected",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Rejected"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_planning_sync_state": {
      "iconName": "ReleasedPlanningSyncState",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "PlanningSyncState"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_tc_base_lined": {
      "iconName": "ReleasedTCBaselined",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "TC Baselined"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_tcm_released": {
      "iconName": "ReleasedTCMReleased",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "TCM Released"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_validation": {
      "iconName": "ReleasedValidation",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "Validation"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_zero": {
      "iconName": "Status0Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "0"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_ten": {
      "iconName": "Status10Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "10"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_twenty": {
      "iconName": "Status20Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "20"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_thirty": {
      "iconName": "Status30Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "30"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_forty": {
      "iconName": "Status40Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "40"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_fifty": {
      "iconName": "Status50Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "50"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_sixty": {
      "iconName": "Status60Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "60"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_seventy": {
      "iconName": "Status70Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "70"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_eighty": {
      "iconName": "Status80Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "80"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_ninety": {
      "iconName": "Status90Flag",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "type": {
          "names": [
            "ReleaseStatus"
          ],
          "prop": {
            "names": [
              "object_name"
            ],
            "conditions": {
              "object_name": {
                "$eq": "90"
              }
            }
          }
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_release_status_list_default": {
      "iconName": "Released",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "object_name",
          "date_released"
        ]
      },
      "prop": {
        "names": [
          "release_status_list"
        ],
        "conditions": {}
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fx_checked_out": {
      "iconName": "CheckedOut",
      "tooltip": {
        "showPropDisplayName": true,
        "propNames": [
          "checked_out_user",
          "checked_out_date"
        ]
      },
      "prop": {
        "names": [
          "checked_out_user"
        ],
        "type": {
          "names": [
            "User"
          ],
          "prop": {
            "names": [
              "userid"
            ],
            "conditions": {
              "userid": {
                "$notNull": true
              }
            }
          }
        }
      },
      "modelTypes": [
        "ItemRevision",
        "Dataset",
        "Item",
        "Form"
      ]
    },
    "fx_checked_out_revision_superseded": {
      "iconName": "Warning",
      "tooltip": {
        "showPropDisplayName": true,
        "propNames": [
          "awp0ConfiguredRevision"
        ]
      },
      "modelTypes": [
        "ItemRevision"
      ],
      "conditions": {
        "awp0ConfiguredRevision": {
          "$notNull": true
        }
      }
    }
  },
  "navigationURLToken": [
    {
      "conditions": {
        "$and": [
          {
            "modelType.typeHierarchyArray": {
              "$in": [
                "ImanFile"
              ]
            }
          }
        ]
      },
      "navigations": {
        "navigateTo": "downloadFile",
        "navigationParams": {
          "uid": {
            "$adapt": "{{navContext.vmo}}",
            "path": "uid"
          }
        },
        "navigateIn": "newTab"
      }
    },
    {
      "conditions": {
        "$and": [
          {
            "modelType.typeHierarchyArray": {
              "$notin": [
                "ImanFile"
              ]
            }
          }
        ]
      },
      "navigations": {
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{navContext.vmo}}",
            "path": "uid"
          }
        }
      }
    }
  ],
  "paste": {
    "schemaVersion": "1.0.0",
    "defaultPasteHandler": {
      "dep": "js/tcDefaultPasteHandler"
    },
    "defaultPasteFileHandler": {
      "dep": "js/pasteFileHandler"
    },
    "pasteHandlers": {
      "tcDefaultPasteHandler": {
        "action": "tcDefaultPasteAction"
      },
      "pasteHandlerForDocumentRevision": {
        "action": "tcDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForDocumentRevision"
        }
      },
      "pasteHandlerForFolder": {
        "action": "tcDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForFolder"
        }
      },
      "pasteHandlerForFolderNew": {
        "action": "tcDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForFolderNew"
        }
      },
      "pasteHandlerForItem": {
        "action": "tcDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForItem"
        }
      },
      "pasteHandlerForItemRevisionDataset": {
        "action": "tcDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForItemRevisionDataset"
        }
      },
      "pasteHandlerForItemRevisionDocumentRevision": {
        "action": "tcDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForItemRevisionDocumentRevision"
        }
      }
    },
    "actions": {
      "tcDefaultPasteAction": {
        "actionType": "JSFunction",
        "method": "tcDefaultPasteHandler",
        "deps": "js/tcDefaultPasteHandler",
        "inputData": {
          "targetObject": "{{pasteContext.targetObject}}",
          "sourceObject": "{{pasteContext.sourceObject}}",
          "relationType": "{{pasteContext.relationType}}"
        },
        "events": {
          "success": [
            {
              "name": "dragDrop.success",
              "condition": "pasteContext.isDragDropIntent",
              "eventData": {
                "sourceObjects": "{{pasteContext.sourceObject}}",
                "targetObject": "{{pasteContext.targetObject}}"
              }
            }
          ],
          "failure": [
            {
              "name": "paste.deleteDataset",
              "condition": "errorCode.code === 89009"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "errorCode.code !== 515107  && errorCode.code !== 35015 && errorCode.code !== 6007 && errorCode.code !== 48004 && errorCode.code !== 6157",
              "message": "pasteFailure"
            },
            {
              "condition": "errorCode.code === 35015",
              "message": "pasteRelationFailureMessage"
            },
            {
              "condition": "errorCode.code === 6007",
              "message": "pasteSourceDuplicateFailureMessage"
            },
            {
              "condition": "errorCode.code === 48004",
              "message": "pasteTargetSourceSameFailureMessage"
            },
            {
              "condition": "errorCode.code === 6157",
              "message": "pasteSameFolderFailureMessage"
            }
          ]
        }
      },
      "deleteDataSet": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": "{{pasteContext.targetObject}}"
        }
      }
    },
    "conditions": {
      "isPasteHandlerActiveForDocumentRevision": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "DocumentRevision"
              }
            },
            {
              "$source": "pasteContext.sourceObject",
              "$query": {
                "$typeOf": "Dataset"
              }
            }
          ]
        }
      },
      "isPasteHandlerActiveForItem": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Item"
              }
            },
            {
              "$source": "pasteContext.sourceObject",
              "$query": {
                "$typeOf": "Dataset"
              }
            }
          ]
        }
      },
      "isPasteHandlerActiveForItemRevisionDataset": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "ItemRevision"
              }
            },
            {
              "$source": "pasteContext.sourceObject",
              "$query": {
                "$typeOf": "Dataset"
              }
            }
          ]
        }
      },
      "isPasteHandlerActiveForFolder": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Folder"
              }
            },
            {
              "$source": "pasteContext.sourceObject",
              "$query": {
                "$typeOf": "WorkspaceObject"
              }
            },
            {
              "expression": "ctx.mselected.length === 1"
            }
          ]
        }
      },
      "isPasteHandlerActiveForFolderNew": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Folder"
              }
            },
            {
              "$source": "pasteContext.sourceObject",
              "$query": {
                "$typeOf": "WorkspaceObject"
              }
            }
          ]
        }
      },
      "isPasteHandlerActiveForItemRevisionDocumentRevision": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "ItemRevision"
              }
            },
            {
              "$source": "pasteContext.sourceObject",
              "$query": {
                "$typeOf": "DocumentRevision"
              }
            }
          ]
        }
      }
    },
    "onEvent": [
      {
        "eventId": "paste.deleteDataset",
        "action": "deleteDataSet"
      }
    ],
    "messages": {
      "pasteFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "pasteRelationFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.pasteRelationFailureMessage}}"
      },
      "pasteSourceDuplicateFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "pasteTargetSourceSameFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.pasteTargetSourceSameFailureMessage}}"
      },
      "pasteSameFolderFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.pasteSameFolderFailureMessage}}"
      }
    },
    "i18n": {
      "pasteRelationFailureMessage": [
        "ZeroCompileCommandMessages"
      ],
      "pasteSourceDuplicateFailureMessage": [
        "ZeroCompileCommandMessages"
      ],
      "pasteTargetSourceSameFailureMessage": [
        "ZeroCompileCommandMessages"
      ],
      "pasteSameFolderFailureMessage": [
        "ZeroCompileCommandMessages"
      ]
    }
  },
  "propertyRendererTemplates": {
    "release_status_template": {
      "grids": [],
      "columns": [
        "release_status_list"
      ],
      "tooltip": [
        "object_name",
        "date_released"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/releaseStatusRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    },
    "release_status_with_custom_fn": {
      "grids": [
        "customGrid"
      ],
      "columns": [
        "release_status_list"
      ],
      "template": "",
      "templateUrl": "",
      "renderFunction": "releaseStatusRendererFn",
      "deps": "propRenderTemplates/generateReleaseStatus",
      "dependentServices": []
    },
    "checked_out_template": {
      "grids": [],
      "columns": [
        "checked_out"
      ],
      "tooltip": [
        "checked_out_user",
        "checked_out_date"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/checkedOutStatusRenderer.html",
      "renderFunction": "",
      "deps": "",
      "dependentServices": []
    }
  },
  "secondaryWorkareaTabs": [
    {
      "name": "awXrtSummary",
      "priority": 100,
      "view": "awXrtSummary",
      "visibleWhen": "selection.length === 1 && context.isXrtApplicable",
      "isExclusive": true
    },
    {
      "name": {
        "source": "/i18n/UIMessages",
        "key": "compareTitle"
      },
      "priority": 200,
      "view": "multiSelectCompare",
      "visibleWhen": "selection.length > 1"
    },
    {
      "name": {
        "source": "/i18n/UIMessages",
        "key": "selectionSummaryTitle"
      },
      "priority": 100,
      "view": "selectionSummary",
      "visibleWhen": "selection.length > 1"
    }
  ],
  "typeProperties": {
    "typeProperties": {
      "WorkspaceObject": {
        "additionalProperties": [
          {
            "name": "object_name"
          }
        ]
      },
      "ItemRevision": {
        "additionalProperties": [
          {
            "name": "checked_out_user",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "checked_out_date"
          },
          {
            "name": "awp0ConfiguredRevision"
          },
          {
            "name": "items_tag"
          },
          {
            "name": "release_status_list",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "fnd0InProcess"
          }
        ]
      },
      "Dataset": {
        "additionalProperties": [
          {
            "name": "checked_out_user",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "checked_out_date"
          },
          {
            "name": "release_status_list",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "fnd0InProcess"
          },
          {
            "name": "fnd0IsCheckoutable"
          }
        ]
      },
      "ReleaseStatus": {
        "additionalProperties": [
          {
            "name": "object_name"
          },
          {
            "name": "date_released"
          }
        ]
      },
      "UserSession": {
        "additionalProperties": [
          {
            "name": "fnd0displayrule"
          }
        ]
      },
      "POM_imc": {
        "additionalProperties": [
          {
            "name": "site_id"
          }
        ],
        "displayProperty": "name"
      },
      "Form": {
        "additionalProperties": [
          {
            "name": "checked_out_user",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "checked_out_date"
          }
        ]
      },
      "Item": {
        "additionalProperties": [
          {
            "name": "checked_out_user",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "checked_out_date"
          }
        ]
      },
      "User": {
        "additionalProperties": [
          {
            "name": "userid"
          }
        ]
      },
      "BusinessObject": {
        "displayProperty": "object_string",
        "additionalProperties": [
          {
            "name": "awp0CellProperties"
          },
          {
            "name": "awp0ThumbnailImageTicket"
          }
        ]
      },
      "Group": {
        "displayProperty": "object_full_name"
      },
      "ImanFile": {
        "displayProperty": "original_file_name"
      },
      "ImanRelation": {
        "displayProperty": "relation_type"
      },
      "ImanVolume": {
        "displayProperty": "volume_name"
      },
      "ListOfValues": {
        "displayProperty": "lov_name"
      },
      "MECfgLine": {
        "displayProperty": "me_cl_display_string"
      },
      "Person": {
        "displayProperty": "user_name"
      },
      "POM_user": {
        "displayProperty": "user_name"
      },
      "Role": {
        "displayProperty": "role_name"
      },
      "Signoff": {
        "displayProperty": "object_name"
      }
    }
  },
  "dragAndDrop": {
    "actions": {
      "dragStartAction": {
        "actionType": "syncFunction",
        "method": "dragStart",
        "deps": "js/awDragAndDropService"
      },
      "dragEndAction": {
        "actionType": "syncFunction",
        "method": "dragEnd",
        "deps": "js/awDragAndDropService"
      },
      "dragEnterAction": {
        "actionType": "syncFunction",
        "method": "dragEnter",
        "deps": "js/awDragAndDropService"
      },
      "dragLeaveAction": {
        "actionType": "syncFunction",
        "method": "dragLeave",
        "deps": "js/awDragAndDropService"
      },
      "dragOverAction": {
        "actionType": "syncFunction",
        "method": "dragOver",
        "deps": "js/awDragAndDropService"
      },
      "dropAction": {
        "actionType": "syncFunction",
        "method": "drop",
        "deps": "js/awDragAndDropService"
      },
      "objNavTreeDropAction": {
        "actionType": "syncFunction",
        "method": "processDropOnTree",
        "deps": "js/objectNavigationTreeService"
      }
    },
    "dragHandlers": {
      "awDefaultDragHandler": {
        "activeWhen": {
          "condition": "conditions.hasListAndTable"
        },
        "views": [
          "*"
        ],
        "dragActions": {
          "dragStart": "dragStartAction",
          "dragEnd": "dragEndAction"
        }
      }
    },
    "dropHandlers": {
      "awDefaultDropHandler": {
        "activeWhen": {
          "condition": "conditions.hasListAndTable"
        },
        "views": [
          "*"
        ],
        "dropActions": {
          "dragEnter": "dragEnterAction",
          "dragLeave": "dragLeaveAction",
          "dragOver": "dragOverAction",
          "drop": "dropAction"
        }
      },
      "objNavTreeDropHandler": {
        "views": [
          "objectNavigationTree"
        ],
        "dropActions": {
          "dragEnter": "dragEnterAction",
          "dragLeave": "dragLeaveAction",
          "dragOver": "dragOverAction",
          "drop": "objNavTreeDropAction"
        }
      }
    },
    "conditions": {
      "hasListAndTable": {
        "expression": "data.dataProviders"
      }
    }
  },
  "layoutSlots": {
    "slots": {
      "Awp0FileUploadslot": {
        "name": "aw_fileUpload",
        "view": "Awp0FileUpload",
        "activeWhen": true
      },
      "globalNavigationSlot": {
        "name": "aw_globalNavigation",
        "view": "commonGlobalNavigation",
        "activeWhen": true
      },
      "globalNavigationBarSlot": {
        "name": "aw_globalNavigationBar",
        "view": "commonGlobalNavigationBar",
        "activeWhen": true
      },
      "avatarSlot": {
        "name": "aw_avatar",
        "view": "commonAvatar",
        "activeWhen": true
      },
      "appLogoSlot": {
        "name": "aw_appLogo",
        "view": "commonAppLogo",
        "activeWhen": false
      },
      "headerSlot": {
        "name": "aw_header",
        "view": "commonHeader",
        "activeWhen": true
      },
      "headerWithTabsSlot": {
        "name": "aw_headerWithTabs",
        "view": "commonHeaderWithTabs",
        "activeWhen": true
      },
      "headerTitleSlot": {
        "name": "aw_headerTitle",
        "view": "commonHeaderTitle",
        "activeWhen": true
      },
      "headerTitleWithTabsSlot": {
        "name": "aw_headerTitleWithTabs",
        "view": "commonHeaderTitleWithTabs",
        "activeWhen": true
      },
      "headerContentSlot": {
        "name": "aw_headerContent",
        "view": "commonHeaderContent",
        "activeWhen": true
      },
      "taskbarSlot": {
        "name": "aw_taskBar",
        "view": "commonTaskbar",
        "activeWhen": false
      },
      "rightEdgeSlot": {
        "name": "aw_rightEdge",
        "view": "commonRightEdge",
        "activeWhen": true
      },
      "footerSlot": {
        "name": "aw_footer",
        "view": "commonUserSettingsBar",
        "activeWhen": true
      },
      "primaryWorkAreaCommandBarSlot": {
        "name": "aw_pwaCommandBar",
        "view": "pwaCommandBar",
        "activeWhen": true
      }
    },
    "conditions": {}
  },
  "typeIconsRegistry": [
    {
      "type": {
        "names": [
          "Awp0Workspace"
        ],
        "iconFileName": "typeWorkspace48",
        "isClientViewModelObject": true
      }
    },
    {
      "type": {
        "names": [
          "pages"
        ],
        "iconFileName": "typeForm48",
        "isClientViewModelObject": true
      }
    },
    {
      "type": {
        "names": [
          "Awp0XRTObjectSetRow"
        ],
        "prop": {
          "names": [
            "awp0Target"
          ],
          "type": {
            "names": [
              "BusinessObject"
            ]
          }
        }
      }
    }
  ],
  "themeExtensions": [
    "jtViewerTheme"
  ],
  "contributions": {
    "command-provider": [
      "js/commandConfiguration.command-provider"
    ],
    "states": [
      "js/ui.states"
    ]
  },
  "localeDateTime": {
    "cs_CZ": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "RR",
      "year_4": "RRRR",
      "hours": "hodina",
      "minutes": "minuty",
      "seconds": "sekundy",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "de": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "YY",
      "year_4": "YYYY",
      "hours": "Stunde",
      "minutes": "Minuten",
      "seconds": "Sekunden",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "en_US": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "YY",
      "year_4": "YYYY",
      "hours": "HH",
      "minutes": "MM",
      "seconds": "SS",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "es": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "AA",
      "year_4": "AAAA",
      "hours": "horas",
      "minutes": "minutos",
      "seconds": "segundos",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "fr": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "JJ",
      "year_2": "AA",
      "year_4": "AAAA",
      "hours": "heure",
      "minutes": "minutes",
      "seconds": "secondes",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "it": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "YY",
      "year_4": "YYYY",
      "hours": "ora",
      "minutes": "minuto",
      "seconds": "secondo",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "ja_JP": {
      "month_2": "月",
      "month_3": "月",
      "month_4": "月",
      "day": "日",
      "year_2": "年",
      "year_4": "年",
      "hours": "時間",
      "minutes": "分",
      "seconds": "秒",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": true,
      "fullDayOfMonth": true,
      "fullMonthAndDayOfMonthWithDayOfWeek": true,
      "fullMonthFormatForMonth": true,
      "dayOfWeekSeparator": " ",
      "monthDaySeparator": "",
      "dateTimeSeparator": " "
    },
    "ko_KR": {
      "month_2": "월",
      "month_3": "월",
      "month_4": "월",
      "day": "일",
      "year_2": "년",
      "year_4": "년",
      "hours": "시간",
      "minutes": "분",
      "seconds": "초",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "pl_PL": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "RR",
      "year_4": "RRRR",
      "hours": "godzin",
      "minutes": "minut",
      "seconds": "drugi",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "pt_BR": {
      "month_2": "MM",
      "month_3": "MMM",
      "month_4": "MMMM",
      "day": "DD",
      "year_2": "AA",
      "year_4": "AAAA",
      "hours": "hora",
      "minutes": "minuto",
      "seconds": "segundo",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "ru_RU": {
      "month_2": "мм",
      "month_3": "ммм",
      "month_4": "мммм",
      "day": "дд",
      "year_2": "гг",
      "year_4": "гггг",
      "hours": "часы",
      "minutes": "минуты",
      "seconds": "секунды",
      "monthAfterYear": false,
      "dayOfWeekAfterDay": false,
      "fullDayOfMonth": false,
      "fullMonthAndDayOfMonthWithDayOfWeek": false,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": "-",
      "monthDaySeparator": " ",
      "dateTimeSeparator": " - "
    },
    "zh_CN": {
      "month_2": "月",
      "month_3": "月",
      "month_4": "月",
      "day": "日",
      "year_2": "年",
      "year_4": "年",
      "hours": "小时",
      "minutes": "分钟",
      "seconds": "秒",
      "monthAfterYear": true,
      "dayOfWeekAfterDay": true,
      "fullDayOfMonth": true,
      "fullMonthAndDayOfMonthWithDayOfWeek": true,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": " ",
      "monthDaySeparator": "",
      "dateTimeSeparator": " "
    },
    "zh_TW": {
      "month_2": "月",
      "month_3": "月",
      "month_4": "月",
      "day": "日",
      "year_2": "年",
      "year_4": "年",
      "hours": "小時",
      "minutes": "分鐘",
      "seconds": "秒",
      "monthAfterYear": true,
      "dayOfWeekAfterDay": true,
      "fullDayOfMonth": true,
      "fullMonthAndDayOfMonthWithDayOfWeek": true,
      "fullMonthFormatForMonth": false,
      "dayOfWeekSeparator": " ",
      "monthDaySeparator": "",
      "dateTimeSeparator": " "
    }
  }
}
