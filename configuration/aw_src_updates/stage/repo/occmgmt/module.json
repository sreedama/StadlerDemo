{
  "name": "occmgmt",
  "description": "",
  "type": [
    "native"
  ],
  "srcDir": "src_native",
  "pathOffset": ".",
  "skipAudit": true,
  "skipTest": true,
  "version": "6.1.3",
  "author": "Siemens Product Lifecycle Management Software Inc.",
  "themeExtensions": [
    "_occmgmtTheme",
    "_occmgmtimportexportTheme",
    "occmgmtInlineAuthTheme",
    "revruleadminTheme",
    "solutionVariantTheme",
    "subsetTheme"
  ],
  "hosting": {
    "postHandshakeModules": [
      {
        "module": "js/hosting/sol/services/hostOcc_2014_10",
        "condition": true
      },
      {
        "module": "js/hosting/sol/services/hostOcc_2015_10",
        "condition": true
      }
    ]
  },
  "adapters": [
    {
      "conditions": {
        "modelType.typeHierarchyArray": {
          "$in": "Awb0Element"
        }
      },
      "target": {
        "prop": "awb0UnderlyingObject",
        "method": "getAlternateSelectedObjectsForACE",
        "deps": "js/occmgmtUtils"
      }
    },
    {
      "conditions": {
        "modelType.typeHierarchyArray": {
          "$in": [
            "Fnd0AlignedDesign",
            "Fnd0AlignedPart"
          ]
        }
      },
      "target": {
        "prop": "fnd0UnderlyingObject",
        "method": "getAlternateSelectedObjectsForACE",
        "deps": "js/occmgmtUtils"
      }
    }
  ],
  "aliasRegistry": {
    "typeBookmark48": [
      "Awb0SavedBookmark"
    ],
    "typeMECollaborativeContext48": [
      "CCObject"
    ],
    "typeContextSession48": [
      "Fnd0AppSession"
    ],
    "typeStructureContext48": [
      "VisStructureContext"
    ],
    "typePhysicalPartRevision48": [
      "Smr1PhysicalInstance"
    ],
    "typeEffectivity48": [
      "CFM_date_info",
      "Fnd0EffectvtyGrpRevision"
    ],
    "typeDiscoveryWorksetRevision48": [
      "Fnd0WorksetRevision"
    ],
    "typeDiscoveryWorkset48": [
      "Fnd0Workset"
    ],
    "typePartUsage48": [
      "Fnd0AbstractOccRevision"
    ],
    "typePartRevision48": [
      "Fnd0AlignedPart"
    ],
    "typeItemRevision48": [
      "Fnd0AlignedDesign"
    ]
  },
  "commandsViewModel": {
    "commands": {
      "Awb0AddGroup": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addElementBtn}}",
        "isRibbon": true,
        "description": "{{i18n.Awb0AddGroupDescription}}"
      },
      "Awb0RestructureGroup": {
        "iconId": "cmdRestructureGroup",
        "title": "{{i18n.restructure}}",
        "isRibbon": true,
        "description": "{{i18n.Awb0RestructureGrpDesc}}"
      },
      "Awb0Separate": {
        "title": "{{i18n.separateElementToDistinctElements}}",
        "description": "{{i18n.Awb0SeparateDesc}}"
      },
      "Awb0SetPin": {
        "iconId": "cmdPin",
        "isGroup": false,
        "title": "{{i18n.awb0PinButtonToolTip}}",
        "description": "{{i18n.panelPinButtonDesc}}"
      },
      "Awb0Pack": {
        "isGroup": false,
        "title": "{{i18n.acePackElement}}",
        "description": "{{i18n.Awb0PackDesc}}"
      },
      "Awb0PackCtxMenu": {
        "isGroup": false,
        "title": "{{i18n.acePackElement}}",
        "description": "{{i18n.Awb0PackDesc}}"
      },
      "Awb0Unpack": {
        "isGroup": false,
        "title": "{{i18n.aceUnpackElement}}",
        "description": "{{i18n.Awb0UnpackDesc}}"
      },
      "Awb0UnpackCtxMenu": {
        "isGroup": false,
        "title": "{{i18n.aceUnpackElement}}",
        "description": "{{i18n.Awb0UnpackDesc}}"
      },
      "Awb0PackAll": {
        "isGroup": false,
        "title": "{{i18n.acePackAllElements}}",
        "description": "{{i18n.Awb0PackAllDesc}}"
      },
      "Awb0UnpackAll": {
        "isGroup": false,
        "title": "{{i18n.aceUnpackAllElements}}",
        "description": "{{i18n.Awb0UnpackAllDesc}}"
      },
      "Awb0SetUnPin": {
        "iconId": "cmdUnpin",
        "isGroup": false,
        "title": "{{i18n.awb0UnpinButtonToolTip}}",
        "description": "{{i18n.panelUnPinButtonDesc}}"
      },
      "Awb0SelectAllCommand": {
        "iconId": "cmdCheckmark",
        "isGroup": false,
        "title": "{{i18n.selectAll}}",
        "selected": {
          "iconId": "cmdCheckmark",
          "title": "{{i18n.clearAll}}"
        },
        "description": "{{i18n.Awb0SelectAllCommandDesc}}"
      },
      "Awb0GetLiveSearchResultCommand": {
        "iconId": "cmdSearchLatestData",
        "isGroup": false,
        "title": "{{i18n.liveSearchResultCommandTitle}}",
        "description": "{{i18n.Awb0GetLiveSearchResultCommandDesc}}"
      },
      "Awb0MoveUpCommand": {
        "iconId": "cmdUp",
        "isGroup": false,
        "title": "{{i18n.moveUpTitle}}",
        "description": "{{i18n.Awb0MoveUpCommand}}"
      },
      "Awb0MoveDownCommand": {
        "iconId": "cmdDown",
        "isGroup": false,
        "title": "{{i18n.moveDownTitle}}",
        "description": "{{i18n.Awb0MoveDownCommandDesc}}"
      },
      "Awb0AddChildProductToSWC": {
        "title": "{{i18n.occMgmtTitle}}",
        "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
      },
      "Awb0AddElementGroupDeclarative": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addElementBtn}}",
        "isGroup": true
      },
      "Awb0AddChildElementDeclarative": {
        "title": "{{i18n.addChild}}",
        "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
      },
      "Awb0AddSiblingElementDeclarative": {
        "title": "{{i18n.addSibling}}",
        "description": "{{i18n.Awb0AddSiblingElementDeclarativeDesc}}"
      },
      "Awb0AddSiblingProductToSWC": {
        "title": "{{i18n.occMgmtTitle}}",
        "description": "{{i18n.Awb0AddSiblingElementDeclarativeDesc}}"
      },
      "Awb0RemoveElement": {
        "iconId": "cmdRemove",
        "title": "{{i18n.aceRemove}}",
        "description": "{{i18n.Awb0RemoveElementDesc}}"
      },
      "Awb0RemoveLevel": {
        "iconId": "cmdRemoveLevel",
        "title": "{{i18n.aceRemoveLevel}}",
        "description": "{{i18n.Awb0RemoveLevelDesc}}"
      },
      "Awb0RemoveElementCtxMenu": {
        "iconId": "cmdRemove",
        "title": "{{i18n.aceRemove}}",
        "description": "{{i18n.Awb0RemoveElementDesc}}"
      },
      "Awb0RemoveLevelCtxMenu": {
        "iconId": "cmdRemoveLevel",
        "title": "{{i18n.aceRemoveLevel}}",
        "description": "{{i18n.Awb0RemoveLevelDesc}}"
      },
      "Awb0ReplaceElementDeclarative": {
        "iconId": "cmdReplace",
        "title": "{{i18n.replaceElementBtn}}",
        "description": "{{i18n.Awb0ReplaceElementDeclarativeDesc}}"
      },
      "Awb0ReplaceElementCtxMenu": {
        "iconId": "cmdReplace",
        "title": "{{i18n.replaceElementBtn}}",
        "description": "{{i18n.Awb0ReplaceElementDeclarativeDesc}}"
      },
      "Awb0ReplaceGroupCommand": {
        "iconId": "cmdReplace",
        "title": "{{i18n.replaceElementBtn}}",
        "isGroup": true
      },
      "Awb0SaveAsAndReplaceElement": {
        "iconId": "cmdReplace",
        "title": "{{i18n.saveAsAndReplace}}",
        "description": "{{i18n.Awb0SaveAsAndReplaceElementDesc}}"
      },
      "AceEffectivityGroup": {
        "iconId": "cmdOpenSharedEffectivity",
        "title": "{{i18n.effectivity}}",
        "isGroup": true
      },
      "Awb0ReleaseStatusEffectivity": {
        "iconId": "cmdReleaseEffectivity",
        "title": "{{i18n.effectivityTitle}}",
        "description": "{{i18n.Awb0ReleaseStatusEffectivityDesc}}"
      },
      "Awp0ReleaseStatusEffectivity": {
        "iconId": "cmdOpenSharedEffectivity",
        "title": "{{i18n.effectivityTitle}}",
        "description": "{{i18n.Awp0ReleaseStatusEffectivityDesc}}"
      },
      "Awb0OccurrenceEffectivity": {
        "iconId": "cmdOpenSharedEffectivity",
        "title": "{{i18n.elementEffectivityTitle}}",
        "description": "{{i18n.Awb0OccurrenceEffectivityDesc}}"
      },
      "Awb0GroupEffectivity": {
        "iconId": "cmdOpenSharedEffectivity",
        "title": "{{i18n.groupEffectivityTitle}}",
        "description": "{{i18n.Awb0GroupEffectivityDesc}}"
      },
      "Awb0AddGroupEffectivityCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addGroupEffectivity}}",
        "description": "{{i18n.Awb0AddGroupEffectivityCmdDesc}}"
      },
      "Awb0RemoveGroupEffectivityCmd": {
        "iconId": "cmdDelete",
        "isGroup": false,
        "title": "{{i18n.removeGroupEffectivityTooltip}}",
        "description": "{{i18n.Awb0RemoveGroupEffectivityCmdDesc}}"
      },
      "Awb0StructureFilterCommand": {
        "iconId": "cmdfilter",
        "title": "{{i18n.filter}}",
        "template": "<div visible-when=\"ctx.aceActiveContext.context.productContextInfo.props.awb0FilterCount.dbValues[0]>0\">{{ctx.aceActiveContext.context.productContextInfo.props.awb0FilterCount.dbValues[0]}}</div>",
        "description": "{{i18n.Awb0StructureFilterCommandDesc}}"
      },
      "Awb0SaveWorkingContext": {
        "iconId": "cmdSaveWorkingContext",
        "title": "{{i18n.workingContextTitle}}",
        "description": "{{i18n.Awb0SaveWorkingContextDesc}}"
      },
      "Awb0SaveAsWorkingContext": {
        "iconId": "cmdSaveWorkingContext",
        "title": "{{i18n.workingContextTitle}}",
        "description": "{{i18n.Awb0SaveAsWorkingContextDesc}}"
      },
      "Awb0UpdateWorkingContext": {
        "iconId": "cmdSaveWorkingContext",
        "title": "{{i18n.saveWorkingContextTitle}}",
        "description": "{{i18n.Awb0UpdateWorkingContextDesc}}"
      },
      "Awb0SaveWorkingContextGroup": {
        "iconId": "cmdSaveWorkingContext",
        "title": "{{i18n.saveWorkingContextTitle}}",
        "isGroup": true
      },
      "Awb0ConfigurationFilter": {
        "iconId": "cmdConfiguration",
        "title": "{{i18n.occmgmtConfigurationFilterTitle}}",
        "description": "{{i18n.Awb0ConfigurationFilterDesc}}"
      },
      "Awb0ResetStructure": {
        "iconId": "cmdReset",
        "title": "{{i18n.reset}}",
        "description": "{{i18n.Awb0ResetStructureDesc}}"
      },
      "Awb0AceUnifiedInContextSearch": {
        "iconId": "cmdSearch",
        "title": "{{i18n.find}}",
        "description": "{{i18n.Awb0AceUnifiedInContextSearchDesc}}"
      },
      "Awb0ShowChildOccurrences": {
        "iconId": "miscCollapse",
        "title": "{{i18n.occurrenceManagementShowChildOccurrencesTitle}}",
        "description": "{{i18n.Awb0ShowChildOccurrencesDesc}}"
      },
      "Awb0ShowChildOccurrencesFromBreadcrumb": {
        "iconId": "miscCollapse",
        "title": "{{i18n.occurrenceManagementShowChildOccurrencesTitle}}",
        "description": "{{i18n.Awb0ShowChildOccurrencesDesc}}"
      },
      "Awb0AddEffectivityForRelnStatusCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addEffectivities}}",
        "description": "{{i18n.Awb0AddEffectivityForRelnStatusCmdDesc}}"
      },
      "Awb0RemoveEffectivityForRelnStatusCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.aceRemove}}",
        "description": "{{i18n.Awb0RemoveEffectivityForRelnStatusCmdDesc}}"
      },
      "Awb0AddEffectivitiesCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addEffectivities}}",
        "description": "{{i18n.Awb0AddEffectivitiesCmdDesc}}"
      },
      "Awb0ClearAllEffectivitiesCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.clearEff}}",
        "description": "{{i18n.Awb0ClearEffCommandDesc}}"
      },
      "Awb0RemoveEffectivitiesCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.aceRemove}}",
        "description": "{{i18n.Awb0RemoveEffectivitiesCmdDesc}}"
      },
      "Awb0AddNewVariantRuleCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addElementBtn}}",
        "description": "{{i18n.Awb0AddNewVariantRuleCmdDesc}}"
      },
      "Awb0AddSubstitutes": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addSubstitute}}",
        "description": "{{i18n.Awb0AddSubstitutesDesc}}"
      },
      "Awb0AddSubstitutesPWA": {
        "iconId": "cmdSubstitute",
        "title": "{{i18n.addSubstitutePWA}}",
        "description": "{{i18n.Awb0AddSubstitutesDesc}}"
      },
      "Awb0InsertParentElement": {
        "iconId": "cmdInsertLevel",
        "title": "{{i18n.insertLevel}}",
        "description": "{{i18n.Awb0InsertParentElementDesc}}"
      },
      "Awb0InsertParentElementCtxMenu": {
        "iconId": "cmdInsertLevel",
        "title": "{{i18n.insertLevel}}",
        "description": "{{i18n.Awb0InsertParentElementDesc}}"
      },
      "Awb0RemoveSubstitutes": {
        "iconId": "cmdRemove",
        "title": "{{i18n.cutSubstitute}}",
        "description": "{{i18n.Awb0RemoveSubstitutesDesc}}"
      },
      "Awb0UseSubstitute": {
        "iconId": "cmdReplace",
        "title": "{{i18n.useSubstitute}}",
        "description": "{{i18n.Awb0UseSubstituteDesc}}"
      },
      "Awb0ShowMarkup": {
        "iconId": "cmdNewMarkUp",
        "title": "{{i18n.markup}}",
        "isGroup": false,
        "selected": {
          "title": "{{i18n.markup}}"
        },
        "description": "{{i18n.Awb0ShowMarkupDesc}}"
      },
      "Awb0ShowUnconfiguredByOccEffectivity": {
        "title": "{{i18n.showExcluded}}",
        "isGroup": false,
        "selected": {
          "title": "{{i18n.showExcluded}}"
        },
        "description": "{{i18n.Awb0ShowUnconfiguredByOccEffectivityDesc}}"
      },
      "Awb0ShowUnconfiguredByVariants": {
        "title": "{{i18n.showExcludedByVariants}}",
        "isGroup": false,
        "selected": {
          "title": "{{i18n.showExcludedByVariants}}"
        },
        "description": "{{i18n.Awb0ShowUnconfiguredByVariantsDesc}}"
      },
      "Awb0ShowSuppressed": {
        "title": "{{i18n.showSuppressed}}",
        "isGroup": false,
        "selected": {
          "title": "{{i18n.showSuppressed}}"
        },
        "description": "{{i18n.Awb0ShowSuppressedDesc}}"
      },
      "Awb0Expand": {
        "iconId": "cmdExpandBelow",
        "title": "{{i18n.expand}}",
        "description": "{{i18n.Awb0ExpandGroupDesc}}",
        "isRibbon": true
      },
      "Awb0ExpandBelow": {
        "iconId": "cmdExpandBelow",
        "title": "{{i18n.expandBelow}}",
        "description": "{{i18n.Awb0ExpandBelowDesc}}"
      },
      "Awb0ExpandBelowCtxMenu": {
        "iconId": "cmdExpandBelow",
        "title": "{{i18n.expandBelow}}",
        "description": "{{i18n.Awb0ExpandBelowDesc}}"
      },
      "Awb0CollapseBelow": {
        "iconId": "cmdCollapseBelow",
        "title": "{{i18n.collapseBelow}}",
        "description": "{{i18n.Awb0CollapseBelowDesc}}"
      },
      "Awb0CollapseBelowCtxMenu": {
        "iconId": "cmdCollapseBelow",
        "title": "{{i18n.collapseBelow}}",
        "description": "{{i18n.Awb0CollapseBelowDesc}}"
      },
      "Awb0CancelMarkupLevel": {
        "iconId": "cmdDelete",
        "title": "{{i18n.cancelMarkup}}",
        "description": "{{i18n.Awb0CancelMarkupLevelDesc}}"
      },
      "Awb0CancelMarkupElement": {
        "iconId": "cmdDelete",
        "title": "{{i18n.cancelMarkup}}",
        "description": "{{i18n.Awb0CancelMarkupLevelDesc}}"
      },
      "Awb0ApplyMarkup": {
        "iconId": "cmdApplyMarkup",
        "title": "{{i18n.applyMarkup}}",
        "description": "{{i18n.Awb0ApplyMarkupDesc}}"
      },
      "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivity": {
        "iconId": "",
        "title": ""
      },
      "Awb0AceReferenceContextMenu": {
        "isGroup": false,
        "title": "{{i18n.aceContextUndo}}",
        "description": "{{i18n.Awb0AceReferenceContextMenuDesc}}"
      },
      "Awb0AceCloneCommand": {
        "title": "{{i18n.saveAsButtonText}}",
        "description": "{{i18n.Awb0AceCloneCommandDesc}}"
      },
      "Awb0AceReviseContextMenu": {
        "isGroup": false,
        "title": "{{i18n.aceContextRevise}}"
      },
      "Awb0AceReplaceContextMenu": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.replaceElementBtn}}",
        "description": "{{i18n.Awb0AceReplaceContextMenuDesc}}"
      },
      "Awb0AceRemoveContextMenu": {
        "iconId": "cmdRemove",
        "title": "{{i18n.aceRemove}}",
        "description": "{{i18n.Awb0AceRemoveContextMenuDesc}}"
      },
      "Awb0AceCloneBelowCommand": {
        "title": "{{i18n.aceContextCloneBelow}}",
        "description": "{{i18n.Awb0AceCloneBelowCommandDesc}}"
      },
      "Awb0ViewGroup": {
        "iconId": "cmdShow",
        "isRibbon": true,
        "title": "{{i18n.Awb0ViewGroup}}",
        "description": "{{i18n.Awb0ViewGroupDesc}}"
      },
      "Awb0ConfigurationGroup": {
        "iconId": "cmdConfigure",
        "isRibbon": true,
        "title": "{{i18n.configure}}",
        "description": "{{i18n.Awb0ConfigurationGroupDesc}}"
      },
      "Awb0SetInContext": {
        "iconId": "cmdOverridden",
        "isGroup": false,
        "title": "{{i18n.aceSetInContext}}",
        "description": "{{i18n.Awb0SetInContextDesc}}"
      },
      "Awb0SetInContextCtxMenu": {
        "iconId": "cmdOverridden",
        "isGroup": false,
        "title": "{{i18n.aceSetInContext}}",
        "description": "{{i18n.Awb0SetInContextDesc}}"
      },
      "Awb0CBOSCmd": {
        "iconId": "cmdConfigureBasedOnSelection",
        "isGroup": false,
        "title": "{{i18n.configureBySelection}}",
        "description": "{{i18n.Awb0CBOSCmdDesc}}"
      },
      "Awb0ConfigByProximityCmd": {
        "isGroup": false,
        "title": "{{i18n.configureByProximity}}",
        "extendedTooltip": {
          "view": "Awb0ConfigureByProximityExtendedTooltip"
        }
      },
      "Awb0RemoveOverride": {
        "iconId": "cmdDelete",
        "title": "{{i18n.RemoveOverride}}",
        "description": "{{i18n.Awb0RemoveOverrideDesc}}"
      },
      "Awb0SaveVariantRule": {
        "iconId": "cmdSave",
        "isGroup": false,
        "title": "{{i18n.saveButtonText}}",
        "description": "{{i18n.Awb0SaveVariantRuleDesc}}"
      },
      "Awb0SaveAsVariantRule": {
        "iconId": "cmdSaveAs",
        "isGroup": false,
        "title": "{{i18n.saveAsButtonText}}"
      },
      "Awb0ShowDuplicate": {
        "iconId": "cmdDuplicate",
        "title": "{{i18n.aceDuplicate}}",
        "description": "{{i18n.Awb0ShowDuplicateDesc}}"
      },
      "Awb0EditEffectivity": {
        "iconId": "cmdEdit",
        "title": "{{i18n.edit}}"
      },
      "Awb0ExpressionEffectivity": {
        "iconId": "cmdOpenSharedEffectivity",
        "isGroup": false,
        "title": "{{i18n.elementEffectivityTitle}}",
        "description": "{{i18n.Awb0OccurrenceEffectivityDesc}}"
      },
      "Awb0AddRevision": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addElementBtn}}",
        "description": "{{i18n.Awb0AddRevisionDesc}}"
      },
      "Awb0RemoveRevision": {
        "iconId": "cmdRemove",
        "title": "{{i18n.removeRevision}}",
        "description": "{{i18n.Awb0RemoveRevisionDesc}}"
      },
      "Awb0ImportFromExcel": {
        "iconId": "cmdImport",
        "isGroup": false,
        "title": "{{i18n.importTitle}}",
        "description": "{{i18n.Awb0ImportFromExcelDesc}}"
      },
      "Awb0ImportPreviewAceOverwriteContextMenu": {
        "title": "{{i18n.aceImportPreviewOverwriteContentMenu}}",
        "description": "{{i18n.Awb0AceImportPreviewOverwriteContextMenuDesc}}"
      },
      "Awb0AceImportPreviewReferenceContextMenu": {
        "title": "{{i18n.aceImportPreviewReferenceContentMenu}}",
        "description": "{{i18n.Awb0AceImportPreviewReferenceContextMenuDesc}}"
      },
      "Awb0AceImportPreviewReviseContextMenu": {
        "title": "{{i18n.aceImportPreviewReviseContentMenu}}",
        "description": "{{i18n.Awb0AceImportPreviewReviseContextMenuDesc}}"
      },
      "Awb0AddChildRow": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addChildRow}}",
        "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
      },
      "Awb0AddSiblingRow": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addSiblingRow}}",
        "description": "{{i18n.Awb0AddSiblingElementDeclarativeDesc}}"
      },
      "Awb0RemoveAllRows": {
        "iconId": "cmdRemove",
        "title": "{{i18n.cancelEditsTitle}}",
        "description": "{{i18n.Awp0CancelEditsPWADesc}}"
      },
      "Awb0SaveRow": {
        "iconId": "cmdSave",
        "title": "{{i18n.saveEditsTitle}}",
        "description": "{{i18n.Awb0AddChildElementDeclarativeDesc}}"
      },
      "Awb0AddRef": {
        "iconId": "cmdAdd",
        "title": "{{i18n.add}}",
        "description": "{{i18n.Awb0AddRevisionDesc}}"
      },
      "Awb0RemoveRow": {
        "iconId": "cmdRemove",
        "title": "{{i18n.removeInlineRow}}",
        "description": "{{i18n.Awp0CancelEditsPWADesc}}"
      },
      "awb0OpenInViewCommand": {
        "iconId": "cmdOpenInView",
        "title": "{{i18n.openInView}}",
        "description": "{{i18n.awb0OpenInViewCommandDesc}}"
      },
      "awb0SplitRootCmd": {
        "iconId": "cmdSplitView",
        "isGroup": false,
        "title": "{{i18n.awb0SplitToolTip}}",
        "description": "{{i18n.awb0SplitRootCmdDesc}}"
      },
      "Awb0SaveSession": {
        "iconId": "cmdSaveWorkingContext",
        "title": "{{i18n.SaveSessionCmd}}",
        "description": "{{i18n.saveSessionTooltip}}"
      },
      "Awb0CreateSessionCommand": {
        "iconId": "cmdContextSession",
        "title": "{{i18n.CreateSessionCmd}}",
        "description": "{{i18n.createSessionTooltip}}"
      },
      "awb0SaveAsSession": {
        "iconId": "cmdSaveAs",
        "title": "{{i18n.SaveAsSessionCmd}}",
        "description": "{{i18n.saveAsSessionTooltip}}"
      },
      "Awb0SessionGroup": {
        "iconId": "cmdContextSession",
        "isRibbon": true,
        "title": "{{i18n.Session}}",
        "description": "{{i18n.sessionCmdGroupTooltip}}"
      },
      "Awb0ReplaySession": {
        "title": "{{i18n.replayTitle}}",
        "extendedTooltip": {
          "view": "Awb0ReplayExtendedTooltip"
        }
      },
      "Awb0ResetSession": {
        "iconId": "cmdReset",
        "title": "{{i18n.ResetSessionCmd}}",
        "description": "{{i18n.resetSessionTooltip}}"
      },
      "Awb0CreateWorksetCommand": {
        "iconId": "cmdDiscoveryWorkset",
        "title": "{{i18n.CreateWorksetCmd}}",
        "description": "{{i18n.createWorksetTooltip}}"
      },
      "Awb0IncludeCtxMenu": {
        "title": "{{i18n.include}}",
        "description": "{{i18n.Awb0IncludeDesc}}"
      },
      "Awb0ExcludeCtxMenu": {
        "title": "{{i18n.exclude}}",
        "description": "{{i18n.Awb0ExcludeDesc}}"
      },
      "Awb0FilterSettings": {
        "iconId": "cmdSettings",
        "title": "{{i18n.settings}}",
        "description": "{{i18n.filterSettingsDesc}}"
      },
      "Awb0RecipeClearAll": {
        "iconId": "cmdClearAllSelections",
        "title": "{{i18n.clearAllCmd}}",
        "description": "{{i18n.recipeClearAllDesc}}"
      },
      "applyProductSnapshotCommand": {
        "iconId": "cmdApply",
        "title": "{{i18n.applyButtonTitle}}",
        "description": "{{i18n.applyProductSnapshotCommandDesc}}"
      },
      "Awb0ReplayWorkset": {
        "title": "{{i18n.replayTitle}}",
        "extendedTooltip": {
          "view": "Awb0ReplayWorksetExtendedTooltip"
        }
      },
      "Ac0ShowObjectCommand": {
        "iconId": "cmdOpen",
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.Awp0ShowObjectDesc}}"
      },
      "Awb0SaveWorkset": {
        "iconId": "cmdSaveWorkingContext",
        "title": "{{i18n.SaveWorksetCmd}}",
        "description": "{{i18n.saveWorksetTooltip}}"
      },
      "Awv0ProductSnapshotTileOpenCommand": {
        "iconId": "cmdOpen",
        "title": "{{i18n.showObjectCommandTitle}}",
        "description": "{{i18n.Awp0ShowObjectDesc}}"
      },
      "Awp0AlignDesign": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Awp0AlignDesignTooltip}}",
        "description": "{{i18n.Awp0AlignDesignDesc}}"
      },
      "Awp0UnAlignDesign": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.Awp0UnAlignDesignTooltip}}",
        "description": "{{i18n.Awp0UnAlignDesignDesc}}"
      },
      "Awp0AlignPart": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Awp0AlignTooltip}}",
        "description": "{{i18n.Awp0AlignPartDesc}}"
      },
      "Awp0UnAlignPart": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.Awp0UnAlignTooltip}}",
        "description": "{{i18n.Awp0UnAlignPartDesc}}"
      },
      "Awp0SetPrimaryDesign": {
        "iconId": "cmdSetPrimary",
        "isGroup": false,
        "title": "{{i18n.Awp0SetPrimaryDesignTooltip}}",
        "description": "{{i18n.Awp0SetPrimaryDesignDesc}}"
      },
      "Awb0EntCBALaunchAlignTask": {
        "iconId": "cmdValidate",
        "isGroup": false,
        "title": "{{i18n.Awb0EntCBALaunchAlignTaskToolTip}}",
        "description": "{{i18n.Awb0EntCBALaunchAlignTaskDesc}}"
      },
      "Awb0EntCBAAlignCommand": {
        "iconId": "cmdValidate",
        "isGroup": false,
        "title": "{{i18n.Awb0EntCBAAlignToolTip}}",
        "description": "{{i18n.Awb0EntCBAAlignDesc}}"
      },
      "Awb0EntCBAUnAlignCommand": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
        "description": "{{i18n.Awb0EntCBAUnAlignDesc}}"
      },
      "Awb0EntCBAAlignmentCheck": {
        "iconId": "cmdCheckAlignment",
        "isGroup": false,
        "title": "{{i18n.Awb0EntCBAAlignmentCheck}}",
        "description": "{{i18n.Awb0EntCBAAlignmentCheckDesc}}"
      },
      "Awb0EntCBAAlignmentCheckSettings": {
        "iconId": "cmdAlignmentCheckSettings",
        "isGroup": false,
        "title": "{{i18n.Awb0EntCBAAlignmentCheckSettings}}",
        "description": "{{i18n.Awb0EntCBAAlignmentCheckSettingsDesc}}"
      },
      "Awb0EntCBAOpenGroup": {
        "iconId": "cmdOpen",
        "isRibbon": true,
        "title": "{{i18n.Awb0EntCBAOpenGroupTitle}}",
        "description": "{{i18n.Awb0EntCBAOpenGroupDesc}}"
      },
      "Awb0EntCBAOpenObject": {
        "iconId": "cmdOpen",
        "title": "{{i18n.Awb0EntCBAOpenObjectTitle}}",
        "description": "{{i18n.Awb0EntCBAOpenObjectDesc}}"
      },
      "Awb0EntCBAOpenInNewWindow": {
        "iconId": "cmdOpen",
        "title": "{{i18n.Awb0EntCBAOpenInNewWindowTitle}}",
        "description": "{{i18n.Awb0EntCBAOpenInNewWindowDesc}}"
      },
      "Awb0EntCBAOpenInNewTab": {
        "iconId": "cmdOpenInNewTab",
        "title": "{{i18n.Awb0EntCBAOpenInNewTabTitle}}",
        "description": "{{i18n.Awb0EntCBAOpenInNewTabDesc}}"
      },
      "Awb0EntCBAAlignGroup": {
        "iconId": "cmdValidate",
        "isRibbon": true,
        "title": "{{i18n.Awb0EntCBAAlignGroupTitle}}",
        "description": "{{i18n.Awb0EntCBAAlignGroupDesc}}"
      },
      "Awb0EntCBAOpenAlignmentView": {
        "iconId": "cmdOpen",
        "title": "{{i18n.Awb0EntCBAOpenAlignmentViewTitle}}",
        "description": "{{i18n.Awb0EntCBAOpenAlignmentViewDesc}}"
      },
      "Awb0EntCBADeselectAll": {
        "iconId": "cmdCheckmark",
        "title": "{{i18n.clearSelections}}",
        "description": "{{i18n.Awp0DeselectAllDesc}}"
      },
      "Awb0FindAligned": {
        "iconId": "cmdShowAlignment",
        "isGroup": false,
        "title": "{{i18n.Awb0FindAlignedTitle}}",
        "description": "{{i18n.Awb0FindAlignedDesc}}"
      },
      "RevisionRuleClauseUp": {
        "iconId": "cmdMoveUp",
        "isGroup": false,
        "title": "{{i18n.clauseUp}}",
        "description": "{{i18n.RevisionRuleClauseUpDesc}}"
      },
      "RevisionRuleClauseDown": {
        "iconId": "cmdMoveDown",
        "isGroup": false,
        "title": "{{i18n.clauseDown}}",
        "description": "{{i18n.RevisionRuleClauseDownDesc}}"
      },
      "RevisionRuleClauseAdd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.clauseAdd}}",
        "description": "{{i18n.RevisionRuleClauseAddDesc}}"
      },
      "RevisionRuleClauseDelete": {
        "iconId": "cmdDelete",
        "isGroup": false,
        "title": "{{i18n.clauseDelete}}",
        "description": "{{i18n.RevisionRuleClauseDeleteDesc}}"
      },
      "RevisionRuleAdminAdd": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addRevisionRule}}",
        "description": "{{i18n.RevisionRuleClauseAddDesc}}"
      },
      "RevisionRuleAdminDelete": {
        "iconId": "cmdDelete",
        "title": "{{i18n.deleteRevisionRule}}",
        "description": "{{i18n.RevisionRuleClauseDeleteDesc}}"
      },
      "RevisionRuleAdmin": {
        "iconId": "cmdShowInfoPanel",
        "title": "{{i18n.RevisionRuleAdminTitle}}",
        "description": "{{i18n.RevisionRuleAdminDesc}}"
      },
      "ClausePropertyAdd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.ClausePropertyAddDesc}}"
      },
      "ClausePropertyRemove": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeProp}}",
        "description": "{{i18n.ClausePropertyRemoveDesc}}"
      },
      "ClausePropertyReplace": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.replace}}",
        "description": "{{i18n.ClausePropertyReplaceDesc}}"
      },
      "AddClauseProperty": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.ClausePropertyAddDesc}}"
      },
      "RemoveClauseProperty": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeProp}}",
        "description": "{{i18n.ClausePropertyRemoveDesc}}"
      },
      "ReplaceClauseProperty": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.replace}}",
        "description": "{{i18n.ClausePropertyReplaceDesc}}"
      },
      "Awb0Unassigned": {
        "isGroup": false,
        "iconId": "cmdSearch",
        "title": "{{i18n.Unassigned}}",
        "description": "{{i18n.Awb0UnassignedDesc}}"
      },
      "Awb0Partition": {
        "isRibbon": true,
        "iconId": "typePartition",
        "title": "{{i18n.Partition}}",
        "description": "{{i18n.Awb0PartitionDesc}}"
      },
      "Awb0AddPartition": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addElementBtn}}",
        "description": "{{i18n.addPartitionTooltip}}"
      },
      "Awb0PreviewSolutionVariant": {
        "iconId": "cmdCreateSolutionVariant",
        "isGroup": false,
        "title": "{{i18n.previewSolutionVariant}}",
        "description": "{{i18n.previewSolutionVariantDesc}}"
      }
    },
    "commandHandlers": {
      "SaveEditVCA2TableACECommandHandler": {
        "id": "SaveEditVCA2Table",
        "action": "SaveEditVCA2TableACE",
        "activeWhen": {
          "condition": "conditions.editVariantTableInAceSubUnderECN"
        },
        "visibleWhen": {
          "condition": "conditions.editVariantTableInAceSubUnderECN"
        }
      },
      "Awp0ShowSaveAsForAce": {
        "id": "Awp0ShowSaveAs",
        "action": "aceSaveAsorReviseContext",
        "activeWhen": {
          "condition": "conditions.aceSaveAsorRevise"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.aceSaveAsorRevise"
        }
      },
      "Awp0DeleteCommandHandlerForAce": {
        "id": "Awp0Delete",
        "action": "Awp0DeleteCommandAction",
        "activeWhen": {
          "condition": "conditions.disableDeleteInAce"
        },
        "visibleWhen": {
          "condition": "conditions.disableDeleteCmdVisibility"
        }
      },
      "AceDoesNotShowSummaryViewHandler": {
        "id": "Awp0ShowSummaryView",
        "action": "switchToSummaryView",
        "activeWhen": {
          "condition": "conditions.aceDoesNotSupportsSummaryView"
        },
        "visibleWhen": false
      },
      "AceDoesNotShowListViewHandler": {
        "id": "Awp0ShowSummaryView",
        "activeWhen": {
          "condition": "conditions.aceDoesNotSupportsListView"
        },
        "visibleWhen": false
      },
      "AceDoesNotShowTableViewHandler": {
        "id": "Awp0ShowSummaryView",
        "activeWhen": {
          "condition": "conditions.aceDoesNotSupportsTableView"
        },
        "visibleWhen": false
      },
      "AceDoesNotShowTableSummaryViewHandler": {
        "id": "Awp0ShowSummaryView",
        "activeWhen": {
          "condition": "conditions.aceDoesNotSupportsTableSummaryView"
        },
        "visibleWhen": false
      },
      "AceDoesNotShowImageViewHandler": {
        "id": "Awp0ShowSummaryView",
        "activeWhen": {
          "condition": "conditions.aceDoesNotSupportsImageView"
        },
        "visibleWhen": false
      },
      "Awb0ShowDuplicateCommandHandler": {
        "id": "Awb0ShowDuplicate",
        "action": "enableDuplicateMode",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isAwb0DuplicateVisible"
        }
      },
      "Awb0CheckoutHideCommandHandler": {
        "id": "Awp0Checkout",
        "activeWhen": {
          "condition": "conditions.isDuplicateEnabled"
        },
        "visibleWhen": false
      },
      "Awb0StartEditTableHideCommandHandler": {
        "id": "Awp0StartEditTable",
        "activeWhen": {
          "condition": "conditions.hideFrameworkStartEditTableCommandInDuplicateMode"
        },
        "visibleWhen": false
      },
      "Awb0SaveEditTableHideCommandHandler": {
        "id": "Awp0SaveEditsPWA",
        "activeWhen": {
          "condition": "conditions.hideFrameworkSaveEditAndCancelEditTableCommandInDuplicateMode"
        },
        "visibleWhen": false
      },
      "Awb0CancelEditTableHideCommandHandler": {
        "id": "Awp0CancelEditsPWA",
        "activeWhen": {
          "condition": "conditions.hideFrameworkSaveEditAndCancelEditTableCommandInDuplicateMode"
        },
        "visibleWhen": false
      },
      "Awb0SeparateCommandHandler": {
        "id": "Awb0Separate",
        "action": "separateElementToDistinctElements",
        "visibleWhen": true,
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isSeparatePossible"
        }
      },
      "openInteractiveDuplicateNotificationCommandHandler": {
        "id": "Awp0OpenLineItem",
        "action": "openInteractiveDuplicateNotification",
        "activeWhen": {
          "condition": "conditions.enableOpenInteractiveDuplicateNotificationCommandCond"
        },
        "visibleWhen": {
          "condition": "conditions.enableOpenInteractiveDuplicateNotificationCommandCond"
        }
      },
      "Awb0AceCloneCommandHandler": {
        "id": "Awb0AceCloneCommand",
        "action": "addCloneDataToColumns",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateCloneApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateCloneApplicable"
        }
      },
      "Awb0RemoveElementCommandHandler": {
        "id": "Awb0RemoveElement",
        "action": "addRemoveDataToColumns",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateRemoveApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateRemoveApplicable"
        },
        "enableWhen": {
          "condition": "conditions.isInteractiveDuplicateRemoveApplicable"
        }
      },
      "Awb0ReplaceElementCommandHandler": {
        "id": "Awb0ReplaceElementDeclarative",
        "action": "launchReplaceElementPanel",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateReplaceApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateReplaceApplicable"
        },
        "enableWhen": {
          "condition": "conditions.isInteractiveDuplicateReplaceApplicable"
        }
      },
      "Awb0AceRemoveContextMenuCommandHandler": {
        "id": "Awb0AceRemoveContextMenu",
        "action": "addRemoveDataToColumns",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateRemoveApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateRemoveApplicable"
        }
      },
      "Awb0AceCloneBelowCommandHandler": {
        "id": "Awb0AceCloneBelowCommand",
        "action": "addCloneBelowDataToColumns",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateCloneBelowApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateCloneBelowApplicable"
        }
      },
      "Awb0PackHandler": {
        "id": "Awb0Pack",
        "action": "checkForEditsAndPackElements",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isPackCmdVisible"
        },
        "visibleWhen": true
      },
      "Awb0PackCtxMenuHandler": {
        "id": "Awb0PackCtxMenu",
        "action": "checkForEditsAndPackElements",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isPackCmdVisibleInCtxMenu"
        }
      },
      "Awb0UnpackHandler": {
        "id": "Awb0Unpack",
        "action": "checkForEditsAndUnpackElements",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isUnpackCmdVisible"
        },
        "visibleWhen": true
      },
      "Awb0UnpackCtxMenuHandler": {
        "id": "Awb0UnpackCtxMenu",
        "action": "checkForEditsAndUnpackElements",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUnpackCmdVisibleInCtxMenu"
        }
      },
      "Awb0PackAllHandler": {
        "id": "Awb0PackAll",
        "action": "acePackAllElements",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isPackAllCmdVisible"
        },
        "visibleWhen": true
      },
      "Awb0UnpackAllHandler": {
        "id": "Awb0UnpackAll",
        "action": "aceUnpackAllElements",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isUnpackAllCmdVisible"
        },
        "visibleWhen": true
      },
      "awb0SetPinCommandHandler": {
        "id": "Awb0SetPin",
        "action": "awb0SetPin",
        "activeWhen": {
          "condition": "conditions.isAwb0PanelPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0PanelPinned"
        }
      },
      "arrangeShowAllCommandHandlerForUsedInStructures": {
        "id": "arrangeShowAll",
        "activeWhen": {
          "condition": "conditions.isUsedInStructuresView"
        },
        "enableWhen": {
          "condition": "conditions.isUsedInStructuresView"
        },
        "visibleWhen": false
      },
      "awb0CutCommandHandler": {
        "id": "Awp0Cut",
        "action": "aceCutContentsToClipboard",
        "activeWhen": {
          "condition": "conditions.awb0CutCommandActive"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.aceCutEnableCondition"
        }
      },
      "awb0CutCtxMenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "action": "aceCutContentsToClipboard",
        "activeWhen": {
          "condition": "conditions.awb0CutCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.aceCutEnableCondition"
        }
      },
      "awb0SetUnPinCommandHandler": {
        "id": "Awb0SetUnPin",
        "action": "awb0SetUnPin",
        "activeWhen": {
          "condition": "conditions.isAwb0PanelUnPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0PanelUnPinned"
        }
      },
      "Awb0SelectAllCommandHandler": {
        "id": "Awb0SelectAllCommand",
        "action": "selectAllNavigateResults",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSelectAllVisible"
        },
        "selectWhen": {
          "condition": "conditions.cmdSelectAllEnabled"
        }
      },
      "Awb0MoveDownCommandHandler": {
        "id": "Awb0MoveDownCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isMoveDownVisible"
        },
        "action": "moveDownInList"
      },
      "Awb0GetLiveSearchResultCommandHandler": {
        "id": "Awb0GetLiveSearchResultCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isLiveSearchResultCommandVisible"
        },
        "action": "getLiveSearchResult"
      },
      "Awb0MoveUpCommandHandler": {
        "id": "Awb0MoveUpCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isMoveUpVisible"
        },
        "action": "moveUpInList"
      },
      "addChildProductCommandHandler": {
        "id": "Awb0AddChildProductToSWC",
        "action": "launchAddChildProductToSWCPanel",
        "activeWhen": {
          "condition": "conditions.isAddChildProductToSWCVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAddChildProductToSWCVisible"
        }
      },
      "addChildElementCommandHandler": {
        "id": "Awb0AddChildElementDeclarative",
        "action": "checkForEditsAndLaunchAddPanel",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isAddChildCommandSupported"
        }
      },
      "addElementGroupCommandHandler": {
        "id": "Awb0AddElementGroupDeclarative",
        "activeWhen": true
      },
      "addSiblingElementCommandHandler": {
        "id": "Awb0AddSiblingElementDeclarative",
        "action": "checkForEditsAndLaunchSiblingPanel",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isAddSiblingCommandSupported"
        }
      },
      "addSiblingProductToSWCCommandHandler": {
        "id": "Awb0AddSiblingProductToSWC",
        "action": "launchAddSiblingProductToSWCPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddSiblingProductToSWCCommandSupported"
        }
      },
      "replaceElementCommandHandler": {
        "id": "Awb0ReplaceElementDeclarative",
        "action": "checkForEditsAndLaunchReplaceElementPanel",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isReplaceCommandSupported"
        }
      },
      "Awb0ReplaceElementCtxMenuCmdHandler": {
        "id": "Awb0ReplaceElementCtxMenu",
        "action": "checkForEditsAndLaunchReplaceElementPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isReplaceCommandSupported"
        }
      },
      "saveAsAndReplaceElementCommandHandler": {
        "id": "Awb0SaveAsAndReplaceElement",
        "action": "launchSaveAsAndReplace",
        "activeWhen": {
          "condition": "conditions.isSaveAsAndReplaceCommandSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isSaveAsAndReplaceCommandSupported"
        }
      },
      "removeElementCommandHandler": {
        "id": "Awb0RemoveElement",
        "action": "checkForEditsAndShowConfirmationMessageForRemove",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isRemoveCommandSupported"
        }
      },
      "removeLevelCommandHandler": {
        "id": "Awb0RemoveLevel",
        "action": "checkForEditsAndShowConfirmationMessageForRemoveLevel",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isRemoveLevelCommandSupported"
        }
      },
      "removeElementCtxMenuCmdHandler": {
        "id": "Awb0RemoveElementCtxMenu",
        "action": "checkForEditsAndShowConfirmationMessageForRemove",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveCommandSupported"
        }
      },
      "removeLevelCtxMenuCommandHandler": {
        "id": "Awb0RemoveLevelCtxMenu",
        "action": "checkForEditsAndShowConfirmationMessageForRemoveLevel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveLevelCtxCommandSupported"
        }
      },
      "aceEffectivityGroupCmmandHandler": {
        "id": "AceEffectivityGroup",
        "activeWhen": true
      },
      "revisionEffectivityCommandHandler": {
        "id": "Awb0ReleaseStatusEffectivity",
        "action": "launchRevisionEffectivityPanel",
        "activeWhen": {
          "condition": "conditions.isRevisionEffectivityCommandVisibile"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isRevisionEffectivityCommandVisibile"
        }
      },
      "revisionEffectivityInHomeCommandHandler": {
        "id": "Awp0ReleaseStatusEffectivity",
        "action": "launchRevisionEffectivityInHomePanel",
        "activeWhen": {
          "condition": "conditions.isRevisionEffectivityCommandInHomeVisibile"
        },
        "visibleWhen": {
          "condition": "conditions.isRevisionEffectivityCommandInHomeVisibile"
        }
      },
      "occEffectivityCommandHandler": {
        "id": "Awb0OccurrenceEffectivity",
        "action": "launchOccEffectivityPanel",
        "activeWhen": {
          "condition": "conditions.isAwb0ExpressionEffectivityNotVisible"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isOccEffectivityCommandVisibile"
        }
      },
      "ViewoccEffectivityCommandHandler": {
        "id": "Awb0OccurrenceEffectivity",
        "action": "launchViewOccEffectivityPanel",
        "activeWhen": {
          "condition": "conditions.isViewOccEffectivityCommandVisibile"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isViewOccEffectivityCommandVisibile"
        }
      },
      "aceStructureFilterCommandHandler": {
        "id": "Awb0StructureFilterCommand",
        "action": "launchStructureFilterPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isStructureFilterSupported"
        }
      },
      "aceSaveWorkingContextCommandHandler": {
        "id": "Awb0SaveWorkingContext",
        "action": "launchSaveSWCPanel",
        "activeWhen": {
          "condition": "conditions.isCreateSWCCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isCreateSWCCommandVisible"
        }
      },
      "aceSaveAsWorkingContextCommandHandler": {
        "id": "Awb0SaveAsWorkingContext",
        "action": "launchSaveAsSWCPanel",
        "activeWhen": {
          "condition": "conditions.isSaveAsSWCCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isSaveAsSWCCommandVisible"
        }
      },
      "aceUpdateWorkingContextCommandHandler": {
        "id": "Awb0UpdateWorkingContext",
        "action": "launchUpdateSWCPanel",
        "activeWhen": {
          "condition": "conditions.isUpdateSWCCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isUpdateSWCCommandVisible"
        }
      },
      "aceSaveWorkingContextGroupCommandHandler": {
        "id": "Awb0SaveWorkingContextGroup",
        "activeWhen": true
      },
      "aceConfigurationFilterCommandHandler": {
        "id": "Awb0ConfigurationFilter",
        "action": "launchConfigurationPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isConfigurationFilterSupported"
        }
      },
      "aceResetStructureCommandHandler": {
        "id": "Awb0ResetStructure",
        "action": "showConfirmationMessageForReset",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isResetApplicable"
        }
      },
      "aceUnifiedInContextSearchCommandHandler": {
        "id": "Awb0AceUnifiedInContextSearch",
        "action": "launchUnifiedNavigationPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isNavigationSupported"
        }
      },
      "aceShowChildrenCommandHandler": {
        "id": "Awb0ShowChildOccurrences",
        "action": "showChildrenFromPwaAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isShowChildrenCommandVisible"
        }
      },
      "aceShowChildrenFromBreadcrumbCommandHandler": {
        "id": "Awb0ShowChildOccurrencesFromBreadcrumb",
        "action": "showChildrenFromBreadcrumbAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isShowChildrenCommandVisible"
        }
      },
      "Awb0AddEffectivityForRelnStatusCmdHandler": {
        "id": "Awb0AddEffectivityForRelnStatusCmd",
        "action": "awb0ReleaseStatusPanelAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awb0RemoveEffectivityForRelnStatusCmdHandler": {
        "id": "Awb0RemoveEffectivityForRelnStatusCmd",
        "action": "awb0RemoveEffectivityForRelnAction",
        "activeWhen": {
          "condition": "conditions.isRemoveEffectivityForRelnStatusVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveEffectivityForRelnStatusVisible"
        }
      },
      "Awb0AddEffectivitiesCmdHandler": {
        "id": "Awb0AddEffectivitiesCmd",
        "action": "awb0AddEffectivitiesPanelAction",
        "activeWhen": {
          "condition": "conditions.isAddEffectivitiesVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAddEffectivitiesVisible"
        }
      },
      "Awb0RemoveEffectivitiesCmdHandler": {
        "id": "Awb0RemoveEffectivitiesCmd",
        "action": "awb0RemoveEffectivitiesAction",
        "activeWhen": {
          "condition": "conditions.isRemoveEffectivitiesVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveEffectivitiesVisible"
        }
      },
      "Awb0ClearAllEffectivitiesCmdHandler": {
        "id": "Awb0ClearAllEffectivitiesCmd",
        "action": "showConfirmationMessageForClearAll",
        "activeWhen": {
          "condition": "conditions.isClearAllVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isClearAllVisible"
        }
      },
      "Awb0AddNewVariantRuleCmdHandler": {
        "id": "Awb0AddNewVariantRuleCmd",
        "action": "awb0AddNewVariantRuleCmdAction",
        "activeWhen": {
          "condition": "conditions.isAwb0AddNewVariantRuleCmdVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0AddNewVariantRuleCmdVisible"
        }
      },
      "Awb0AddGroupEffectivityCmdHandler": {
        "id": "Awb0AddGroupEffectivityCmd",
        "action": "launchAddGroupEffectivityPanelAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awb0RemoveGroupEffectivityCmdHandler": {
        "id": "Awb0RemoveGroupEffectivityCmd",
        "action": "removeGroupEffectivityAction",
        "activeWhen": {
          "condition": "conditions.isRemoveGroupEffectivitiesVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveGroupEffectivitiesVisible"
        }
      },
      "addSubstitutesCmdHandler": {
        "id": "Awb0AddSubstitutes",
        "action": "checkForEditsAndLaunchAddSubstitutesPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddSubstitutesSupported"
        }
      },
      "addSubstitutesPWACmdHandler": {
        "id": "Awb0AddSubstitutesPWA",
        "action": "checkForEditsAndLaunchAddSubstitutesPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isNotOpenedFor4GStructure"
        },
        "enableWhen": {
          "condition": "conditions.isAddSubstitutesSupportedForPWA"
        }
      },
      "insertLevelCmdHandler": {
        "id": "Awb0InsertParentElement",
        "action": "CheckForEditsAndLaunchInsertLevelPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isInsertLevelSupported"
        }
      },
      "insertLevelCtxMenuCmdHandler": {
        "id": "Awb0InsertParentElementCtxMenu",
        "action": "CheckForEditsAndLaunchInsertLevelPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isInsertLevelSupported"
        }
      },
      "removeSubstitutesCmdHandler": {
        "id": "Awb0RemoveSubstitutes",
        "action": "removeSubstitutes",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveSubstitutesSupported"
        }
      },
      "aceShowObjectDelegateCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "aceShowObjectDelegateAction",
        "activeWhen": {
          "condition": "conditions.isACEShowObjectDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEShowObjectDelegateActive"
        }
      },
      "aceShowObjectCellDelegateCommandHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "aceShowObjectDelegateCellAction",
        "activeWhen": {
          "condition": "conditions.isACEShowObjectCellDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEShowObjectCellDelegateActive"
        }
      },
      "aceShowObjectCellDelegateForIRCommandHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "aceShowObjectDelegateCellAction",
        "activeWhen": {
          "condition": "conditions.isACEShowObjectCellDelegateForBookmarkActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEShowObjectCellDelegateForBookmarkActive"
        }
      },
      "aceReviseObjectDelegateCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "aceReviseObjectDelegateAction",
        "activeWhen": {
          "condition": "conditions.isACEReviseObjectDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEReviseObjectDelegateActive"
        }
      },
      "aceJitterFreeReviseDelegateCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "aceJitterFreeReviseDelegateAction",
        "activeWhen": {
          "condition": "conditions.isACEJitterFreeReviseDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEJitterFreeReviseDelegateActive"
        }
      },
      "aceOpenGroupCommandHandler": {
        "id": "Awp0OpenGroup",
        "activeWhen": {
          "condition": "conditions.isAdaptedObjectPresent"
        },
        "visibleWhen": false
      },
      "aceOpenInTabDelegateCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "aceOpenInTabDelegateAction",
        "activeWhen": {
          "condition": "conditions.isACEOpenInTabDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEOpenInTabDelegateActive"
        }
      },
      "aceOpenInWindowCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "aceOpenInWindowDelegateAction",
        "activeWhen": {
          "condition": "conditions.isACEOpenInWindowDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEOpenInWindowDelegateActive"
        }
      },
      "useSubstituteCmdHandler": {
        "id": "Awb0UseSubstitute",
        "action": "useSubstitute",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUseSubstituteSupported"
        }
      },
      "aceOpenInRACCommndHandler": {
        "id": "Awp0OpenInRAC",
        "action": "aceOpenInRACDelegateAction",
        "activeWhen": {
          "condition": "conditions.isACEOpenInRACDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isACEOpenInRACDelegateActive"
        }
      },
      "acePasteHandler": {
        "id": "Awp0Paste",
        "action": "checkForEditsAndAcePasteContentsFromClipboard",
        "activeWhen": {
          "condition": "conditions.aceCutPasteActiveCondition"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.acePasteVisibleCondition"
        }
      },
      "acePasteContextMenuHandler": {
        "id": "Awp0PasteContextMenu",
        "action": "checkForEditsAndAcePasteContentsFromClipboard",
        "activeWhen": {
          "condition": "conditions.aceCutPasteActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.acePasteVisibleCondition"
        }
      },
      "aceMarkUpCopyHandler": {
        "id": "Awp0Copy",
        "action": "copyInMarkupMode",
        "activeWhen": {
          "condition": "conditions.isMarkupEnabled"
        },
        "enableWhen": {
          "condition": "conditions.isMarkupEnabled"
        }
      },
      "aceMarkUpCopyContextMenuHandler": {
        "id": "Awp0CopyContextMenu",
        "action": "copyInMarkupMode",
        "activeWhen": {
          "condition": "conditions.isMarkupEnabled"
        },
        "visibleWhen": {
          "condition": "conditions.isMarkupEnabled"
        }
      },
      "aceInteractiveDuplicateCopyHideHandler": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.isImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "aceInteractiveDuplicateCopyContextMenuHideHandler": {
        "id": "Awp0CopyContextMenu",
        "action": "none",
        "activeWhen": {
          "condition": "conditions.isDuplicateEnabled"
        },
        "visibleWhen": false
      },
      "aceInteractiveDuplicateCutHideHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.isDuplicateEnabled"
        },
        "visibleWhen": false
      },
      "aceInteractiveDuplicateCutCtxMenuHideHandler": {
        "id": "Awp0CutContextMenu",
        "action": "none",
        "activeWhen": {
          "condition": "conditions.isDuplicateEnabled"
        },
        "visibleWhen": false
      },
      "aceInteractiveDuplicateTraceLinkHideHandler": {
        "id": "Arm0CreateTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isDuplicateEnabled"
        },
        "visibleWhen": false
      },
      "aceInteractiveDuplicateExistingTraceLinkHideHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isDuplicateEnabled"
        },
        "visibleWhen": false
      },
      "aceSolutionVariantTraceLinkHideHandler": {
        "id": "Arm0CreateTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantProvider"
        },
        "visibleWhen": false
      },
      "aceSolutionVariantExistingTraceLinkHideHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantProvider"
        },
        "visibleWhen": false
      },
      "showMarkupHandler": {
        "id": "Awb0ShowMarkup",
        "action": "toggleMarkup",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.showMarkupCondition"
        },
        "visibleWhen": {
          "condition": "conditions.hideMarkupForSessionandSplit"
        },
        "selectWhen": {
          "condition": "conditions.isMarkupEnabled"
        }
      },
      "showUnconfiguredByOccEffectivityHandler": {
        "id": "Awb0ShowUnconfiguredByOccEffectivity",
        "action": "toggleIneffective",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.showIneffectiveCondition"
        },
        "selectWhen": {
          "condition": "conditions.showUnconfigured"
        }
      },
      "showUnconfiguredByVariantsHandler": {
        "id": "Awb0ShowUnconfiguredByVariants",
        "action": "toggleVariantsIn",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.showVariantsInCondition"
        },
        "selectWhen": {
          "condition": "conditions.showUnconfiguredVariants"
        }
      },
      "showSuppressedHandler": {
        "id": "Awb0ShowSuppressed",
        "action": "toggleSuppressedIn",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.showSuppressedInCondition"
        },
        "selectWhen": {
          "condition": "conditions.showSuppressed"
        }
      },
      "Awb0ExpandCommandHandler": {
        "action": "showExpandOptions",
        "id": "Awb0Expand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": true
      },
      "expandBelowCommandHandler": {
        "id": "Awb0ExpandBelow",
        "action": "aceExpandBelow",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isExpandOptionsEnabled"
        }
      },
      "expandBelowCtxMenuCommandHandler": {
        "id": "Awb0ExpandBelowCtxMenu",
        "action": "aceExpandBelow",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isExpandOptionsEnabledInCtxMenu"
        }
      },
      "collapseBelowCommandHandler": {
        "id": "Awb0CollapseBelow",
        "action": "aceCollapseBelow",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isExpandOptionsEnabled"
        }
      },
      "collapseBelowCtxMenuCommandHandler": {
        "id": "Awb0CollapseBelowCtxMenu",
        "action": "aceCollapseBelow",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isExpandOptionsEnabledInCtxMenu"
        }
      },
      "Awb0CancelMarkupLevelCommandHandler": {
        "id": "Awb0CancelMarkupLevel",
        "action": "cancelMarkupLevel",
        "activeWhen": {
          "condition": "conditions.isCancelMarkupAtLevelSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isCancelMarkupAtLevelSupported"
        }
      },
      "Awb0CancelMarkupElementCommandHandler": {
        "id": "Awb0CancelMarkupElement",
        "action": "cancelMarkupElement",
        "activeWhen": {
          "condition": "conditions.isCancelMarkupAtElementSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isCancelMarkupAtElementSupported"
        }
      },
      "Awb0ApplyMarkupCommandHandler": {
        "id": "Awb0ApplyMarkup",
        "action": "applyMarkup",
        "activeWhen": {
          "condition": "conditions.isApplyMarkupSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isApplyMarkupSupported"
        },
        "enableWhen": {
          "condition": "conditions.NotReleasedAssembly"
        }
      },
      "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivityHandler": {
        "id": "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivity",
        "action": "",
        "activeWhen": {
          "condition": "conditions.Awb0ViewElementEffectivity"
        },
        "visibleWhen": false
      },
      "Awb0AceReferenceContextMenuCommandHandler": {
        "id": "Awb0AceReferenceContextMenu",
        "action": "addReferenceDataToColumns",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateUndoApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateUndoApplicable"
        }
      },
      "Awb0AceReviseContextMenuCommandHandler": {
        "id": "Awb0AceReviseContextMenu",
        "action": "addReviseDataToColumns",
        "activeWhen": true,
        "visibleWhen": false
      },
      "Awb0AceReplaceContextMenuCommandHandler": {
        "id": "Awb0AceReplaceContextMenu",
        "action": "launchReplaceElementPanel",
        "activeWhen": {
          "condition": "conditions.isInteractiveDuplicateReplaceApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isInteractiveDuplicateReplaceApplicable"
        }
      },
      "Awb0AddGroupHandler": {
        "id": "Awb0AddGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": true
      },
      "Awb0RestructureGroupHandler": {
        "id": "Awb0RestructureGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": true
      },
      "Awb0ViewGroupHandler": {
        "id": "Awb0ViewGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.showViewGroupCondition"
        },
        "enableWhen": true
      },
      "Awb0ConfigurationGroupHandler": {
        "id": "Awb0ConfigurationGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": true
      },
      "Awb0SetInContextHandler": {
        "id": "Awb0SetInContext",
        "action": "aceSetInContext",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isSetInContextCmdVisible"
        }
      },
      "Awb0SetInContextCtxMenuCmdHandler": {
        "id": "Awb0SetInContextCtxMenu",
        "action": "aceSetInContext",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSetInContextCmdVisible"
        }
      },
      "Awb0CBOSCmdHandler": {
        "id": "Awb0CBOSCmd",
        "action": "configureBySelection",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isCBOSCmdVisible"
        }
      },
      "Awb0ConfigByProximityCmdHandler": {
        "id": "Awb0ConfigByProximityCmd",
        "action": "configByProximityTarget",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isConfigByProximityCmdVisible"
        }
      },
      "Awb0RemoveOverrideCommandHandler": {
        "id": "Awb0RemoveOverride",
        "action": "removePropertyOverride",
        "activeWhen": {
          "condition": "conditions.isRemoveOverrideApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveOverrideApplicable"
        }
      },
      "Awb0SaveVariantRuleCommandHandler": {
        "id": "Awb0SaveVariantRule",
        "action": "Awb0SaveVariantRule",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isClassicVariantRuleModifiable"
        },
        "visibleWhen": {
          "condition": "conditions.isClassicVariantRulePanelDirty"
        }
      },
      "Awb0SaveAsVariantRuleCommandHandler": {
        "id": "Awb0SaveAsVariantRule",
        "action": "Awb0SaveAsVariantRule",
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.checkUserAccessForSaveAsVariantRule"
        },
        "visibleWhen": {
          "condition": "conditions.isClassicVariantRulePanelDirty"
        }
      },
      "Awp0RemoveAttachmentCommandHandler": {
        "id": "Awp0Cut",
        "action": "removeAttachment",
        "activeWhen": {
          "condition": "conditions.removeAttachmentVisibility"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.removeAttachmentVisibility"
        }
      },
      "Awp0RemoveAttachmentCtxMenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "action": "removeAttachment",
        "activeWhen": {
          "condition": "conditions.removeAttachmentVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.removeAttachmentVisibility"
        }
      },
      "Awb0EditEffectivityCommandHandler": {
        "id": "Awb0EditEffectivity",
        "action": "getEffectivityPropertiesForEditAction",
        "activeWhen": {
          "condition": "conditions.isAwb0EditEffectivityVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0EditEffectivityVisible"
        }
      },
      "Awb0ExpressionEffectivityCommandHandler": {
        "id": "Awb0ExpressionEffectivity",
        "action": "launchExpressionEffectivityPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwb0ExpressionEffectivityVisible"
        }
      },
      "awb0SignOutCommandHandler": {
        "id": "cmdSignOut",
        "action": "saveUserWorkingContextStateAndSignOut",
        "activeWhen": {
          "condition": "conditions.isSignOutVisibleForACE"
        },
        "visibleWhen": {
          "condition": "conditions.isSignOutVisibleForACE"
        }
      },
      "awb0AddRevisionCommandHandler": {
        "id": "Awb0AddRevision",
        "action": "awb0AddRevisionCommandAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awb0RemoveRevisionCommandHandler": {
        "id": "Awb0RemoveRevision",
        "action": "awb0RemoveRevisionCommandAction",
        "activeWhen": {
          "condition": "conditions.isRemoveRevisionCmdSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveRevisionCmdSupported"
        }
      },
      "revoccOverriddenSaveAsAndReplaceElementCommandHandler": {
        "id": "Awb0SaveAsAndReplaceElement",
        "action": "updateCtxAndLaunchSaveAsAndReplacePanel",
        "activeWhen": {
          "condition": "conditions.isSaveAsAndReplaceCmdSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isSaveAsAndReplaceCmdSupported"
        }
      },
      "revoccOverriddenAwb0ShowSaveAsCommandHandler": {
        "id": "Awp0ShowSaveAs",
        "action": "revOccSaveAsorReviseInContext",
        "activeWhen": {
          "condition": "conditions.isSaveAsAndReviseActive"
        },
        "visibleWhen": {
          "condition": "conditions.isSaveAsAndReviseVisible"
        }
      },
      "revoccOverriddenRemoveAlternateCommandHandler": {
        "id": "ps0RemoveAlternate",
        "action": "revOccRemoveAlternates",
        "activeWhen": {
          "condition": "conditions.revOccRemoveAlternateCommandCondition"
        },
        "visibleWhen": {
          "condition": "conditions.revOccRemoveAlternateCommandCondition"
        }
      },
      "revoccOverriddenAssignFinishHandler": {
        "id": "Fsh1AssignFinish",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStructure"
        },
        "visibleWhen": false
      },
      "revoccOverriddenImportFromOfficeCommandHandler": {
        "id": "Arm0ImportFromOffice",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStructure"
        },
        "visibleWhen": false
      },
      "revoccOverriddenShareURLCommandHandler": {
        "id": "Awp0ShareURL",
        "activeWhen": {
          "condition": "conditions.isRevOccStructureOrRevOccInContextOfChange"
        },
        "visibleWhen": false
      },
      "revoccOverriddenSubscribeCommandHandler": {
        "id": "Sub0Subscribe",
        "activeWhen": {
          "condition": "conditions.isSub0SubscribeSupported"
        },
        "visibleWhen": false
      },
      "revoccOverriddenPrintCommandHandler": {
        "id": "Awp0Print",
        "activeWhen": {
          "condition": "conditions.isRevOccStructureOrRevOccInContextOfChange"
        },
        "visibleWhen": false
      },
      "revoccOverriddenCreateARCommandHandler": {
        "id": "Crt1CreateValidationContract",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStructure"
        },
        "visibleWhen": false
      },
      "revoccOverriddenOpenInIllustratorHandler": {
        "id": "openInIllustrator",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccStructureOrRevOccInContextOfChange"
        },
        "visibleWhen": false
      },
      "revoccOverriddenSaveWorkingContextCommandHandler": {
        "id": "Awb0SaveWorkingContext",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccSaveWorkingContextVisible"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAddCharRepresentationHandler": {
        "id": "Aqc0AddCharRepresentation",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccInspectionDefVisible"
        },
        "visibleWhen": false
      },
      "revoccOverriddenOpenInRACCommndHandler": {
        "id": "Awp0OpenInRAC",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccOpenInRichClientVisible"
        },
        "visibleWhen": false
      },
      "revoccOverriddenCreateRecipeHandler": {
        "id": "Evm1CreateRecipe",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccCreateRecipeVisible"
        },
        "visibleWhen": false
      },
      "revoccOverriddenExecuteRecipeHandler": {
        "id": "Evm1ExecuteRecipe",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccCreateRecipeVisible"
        },
        "visibleWhen": false
      },
      "revoccOverriddenGenTraceMatrixCommandHandler": {
        "id": "Arm0GenerateTraceabilityMatrix",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccGenTraceMatVisible"
        },
        "visibleWhen": false
      },
      "revoccOverriddenRevisionEffectivityCommandHandler": {
        "id": "Awb0ReleaseStatusEffectivity",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isRevOccRevisionEffectivityCmdVisibile"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwp0ViewGroupHandler": {
        "id": "Awp0ViewGroup",
        "activeWhen": {
          "condition": "conditions.isRevOccInContextOfChange"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0ViewGroupHandler": {
        "id": "Awb0ViewGroup",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStructure"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwp0OpenInSEECStandAloneNonAceModeCommandHandler": {
        "id": "Awp0OpenInSEEC",
        "activeWhen": {
          "condition": "conditions.revOccDuplicatedAwp0OpenInSEECStandAloneNonAceModeCommandCondition"
        },
        "visibleWhen": false
      },
      "revoccOverriddenCreateChangeCommandHandler": {
        "id": "Cm1ShowCreateChangeInContext",
        "action": "revOccCreateChangeInContext",
        "activeWhen": {
          "condition": "conditions.isRevOccOverriddenCm1ShowCreateChangeInContextCmdActive"
        },
        "visibleWhen": true
      },
      "revoccOverriddenCreateLineItemCommandHandler": {
        "id": "Sc1CreateLineItem",
        "activeWhen": {
          "condition": "conditions.revOccOverriddenSc1CreateCmdCond"
        },
        "visibleWhen": false
      },
      "revoccOverriddenCreateNewExchangeCommandHandler": {
        "id": "Sc1CreateExchange",
        "activeWhen": {
          "condition": "conditions.revOccOverriddenSc1CreateCmdCond"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0SeparateCommandHandler": {
        "id": "Awb0Separate",
        "activeWhen": {
          "condition": "conditions.revOccOverriddenAwb0SeparateCmdCond"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0ShowDuplicateCmdHandler": {
        "id": "Awb0ShowDuplicate",
        "activeWhen": {
          "condition": "conditions.isAwb0ShowDuplicateCmdSupportedForProductUsage"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0AceCloneCommandHandler": {
        "id": "Awb0AceCloneCommand",
        "activeWhen": {
          "condition": "conditions.revOccDuplicatedIsInteractiveDuplicateMenuApplicable"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0AceReplaceContextMenuCommandHandler": {
        "id": "Awb0AceReplaceContextMenu",
        "activeWhen": {
          "condition": "conditions.revOccDuplicatedIsReplaceAndCloneBelowApplicable"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0AceRemoveContextMenuCommandHandler": {
        "id": "Awb0AceRemoveContextMenu",
        "activeWhen": {
          "condition": "conditions.revOccDuplicatedIsInteractiveDuplicateMenuApplicable"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwb0AceCloneBelowCommandHandler": {
        "id": "Awb0AceCloneBelowCommand",
        "activeWhen": {
          "condition": "conditions.revOccDuplicatedIsReplaceAndCloneBelowApplicable"
        },
        "visibleWhen": false
      },
      "revoccOverriddenAwp0NewWorkflowProcessCommandHandler": {
        "id": "Awp0NewWorkflowProcess",
        "action": "revOccSubmitToWorkflow",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStructure"
        },
        "visibleWhen": {
          "condition": "conditions.awp0NewWorkflowProcessCommandCondition"
        },
        "selectWhen": {
          "condition": "conditions.isSubmitWorkflowPopupPanelActive"
        }
      },
      "revOccJitterFreeReviseDelegateCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "revOccJitterFreeReviseDelegateAction",
        "activeWhen": {
          "condition": "conditions.isRevOccJitterFreeReviseDelegateActive"
        },
        "visibleWhen": {
          "condition": "conditions.isRevOccJitterFreeReviseDelegateActive"
        }
      },
      "revoccOverriddenShowMarkupHandler": {
        "id": "Awb0ShowMarkup",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStructure"
        },
        "visibleWhen": false
      },
      "aceImportBOMTraceLinkHideHandler": {
        "id": "Arm0CreateTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "aceImportBOMExistingTraceLinkHideHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "aceImportBOMExportCommandHideExportWithFolderSelectionHandler": {
        "id": "Arm0Export",
        "activeWhen": {
          "condition": "conditions.disableExcelRoundTripInImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "aceImportBOMExportCommandHideExportWithAssemblySelectionHandler": {
        "id": "Arm0Export",
        "activeWhen": {
          "condition": "conditions.disableArm0Export"
        },
        "visibleWhen": false
      },
      "aceImportBOMExportImportCommandHideHandler": {
        "id": "Arm0ExportImport",
        "activeWhen": {
          "condition": "conditions.disableExcelRoundTripInImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "aceImportBOMImportNewCommandHideHandler": {
        "id": "Att1ImportNew",
        "activeWhen": {
          "condition": "conditions.isImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "Awb0ImportFromExcelCommandHandler": {
        "id": "Awb0ImportFromExcel",
        "action": "launchImportFromExcelPanel",
        "activeWhen": {
          "condition": "conditions.enableImportBOMCommand"
        },
        "enableWhen": {
          "condition": "conditions.enableImportBOMCommand"
        },
        "visibleWhen": {
          "condition": "conditions.enableImportBOMCommand"
        }
      },
      "Awb0HideArm0ImportExcelCommandHandler": {
        "id": "Arm0ImportExcel",
        "activeWhen": {
          "condition": "conditions.isImportPreviewSublocation"
        },
        "visibleWhen": false
      },
      "Awb0CloseCommandPanelHandler": {
        "id": "Awp0CloseCommandPanel",
        "action": "closeImportPreview",
        "activeWhen": {
          "condition": "conditions.isImportPreviewSublocation"
        },
        "visibleWhen": true
      },
      "Awb0AceImportPreviewOverwriteContextMenuCommandHandler": {
        "id": "Awb0ImportPreviewAceOverwriteContextMenu",
        "activeWhen": true,
        "action": "setOverwriteActionOnLine",
        "visibleWhen": {
          "condition": "conditions.isOverwriteActionMenuApplicableOnContextInImportPreview"
        }
      },
      "Awb0AceImportPreviewReviseContextMenuCommandHandler": {
        "id": "Awb0AceImportPreviewReviseContextMenu",
        "activeWhen": true,
        "action": "setReviseActionOnLine",
        "visibleWhen": {
          "condition": "conditions.isReviseActionMenuApplicableOnContextInImportPreview"
        }
      },
      "Awb0AceImportPreviewReferenceContextMenuCommandHandler": {
        "id": "Awb0AceImportPreviewReferenceContextMenu",
        "action": "setReferenceActionOnLine",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isReferenceActionApplicableOnContextInImportPreview"
        }
      },
      "addChildRowInTreeCommandHandler": {
        "id": "Awb0AddChildRow",
        "action": "addChildRowCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddChildRowCommandSupported"
        }
      },
      "addSiblingRowCommandHandler": {
        "id": "Awb0AddSiblingRow",
        "action": "addSiblingRowCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddSiblingRowCommandSupported"
        }
      },
      "removeAllInlineRowsCommandHandler": {
        "id": "Awb0RemoveAllRows",
        "action": "removeAllInlineRowAction",
        "activeWhen": {
          "condition": "conditions.isRemoveRowCommandSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isRemoveRowCommandSupported"
        }
      },
      "saveRowInTableCommandHandler": {
        "id": "Awb0SaveRow",
        "action": "saveRowAction",
        "activeWhen": {
          "condition": "conditions.isSaveRowCommandSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isSaveRowCommandSupported"
        }
      },
      "addRefInlineCommandHandler": {
        "id": "Awb0AddRef",
        "action": "launchAddPanel",
        "activeWhen": {
          "condition": "conditions.isValidForAddRef"
        },
        "visibleWhen": {
          "condition": "conditions.isValidForAddRef"
        }
      },
      "inlineAuthOverriddenStartEditTableHideCmdHandlerForInlineAuthoring": {
        "id": "Awp0StartEditTable",
        "activeWhen": {
          "condition": "conditions.isStartEditAllowedInInlineAuthoringMode"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenStartEditSummaryHideCmdHandlerForInlineAuthoring": {
        "id": "Awp0StartEditSummary",
        "activeWhen": {
          "condition": "conditions.isStartEditAllowedInInlineAuthoringMode"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenObjectInfoHideCmndHandlerForInlineAuthoring": {
        "id": "Awp0ObjectInfo",
        "activeWhen": {
          "condition": "conditions.isObjectInfoCmdAllowedInInlineAuthoringMode"
        },
        "visibleWhen": false
      },
      "removeInlineRowCommandHandler": {
        "id": "Awb0RemoveRow",
        "action": "removeRowAction",
        "activeWhen": {
          "condition": "conditions.isInlineRemoveRowCellCommandSupported"
        },
        "visibleWhen": {
          "condition": "conditions.isInlineRemoveRowCellCommandSupported"
        }
      },
      "inlineAuthOverriddenHideRemoveElementCmndHandlerForInlineAuthoring": {
        "id": "Awb0RemoveElement",
        "activeWhen": {
          "condition": "conditions.isInlineRemoveElementCommandSupported"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenHideReplaceRevOccElementCmndHandlerForInlineAuthoring": {
        "id": "Awb0ReplaceElementDeclarative",
        "activeWhen": {
          "condition": "conditions.isInlineReplaceRevOccElementCommandSupported"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0ShowSaveAsCommandHandler": {
        "id": "Awp0ShowSaveAs",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isSaveAsOrReviseSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0ShowSaveAsOnlyCommandHandler": {
        "id": "Awp0ShowSaveAsOnly",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isSaveAsOrReviseSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0ShowReviseCommandHandler": {
        "id": "Awp0ShowRevise",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isSaveAsOrReviseSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0AddChildElementDeclarativeCommandHandler": {
        "id": "Awb0AddChildElementDeclarative",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isAddChildOrSiblingSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0AddSiblingElementDeclarativeCommandHandler": {
        "id": "Awb0AddSiblingElementDeclarative",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isAddChildOrSiblingSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0ShowDuplicateCommandHandler": {
        "id": "Awb0ShowDuplicate",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isShowDuplicateSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0ExpandCommandHandler": {
        "id": "Awb0Expand",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isExpandSupportedInInlineAuthoring"
        },
        "enableWhen": false
      },
      "inlineAuthOverriddenAwp0ShowMarkupsCommandHandler": {
        "id": "Awb0ShowMarkup",
        "activeWhen": {
          "condition": "conditions.isMarkupSupportedInInlineAuthoring"
        },
        "selectWhen": {
          "condition": "conditions.isMarkupEnabled"
        },
        "enableWhen": false
      },
      "inlineAuthOverriddenAwb0ExpandBelowCtxMenuCommandHandler": {
        "id": "Awb0ExpandBelowCtxMenu",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isExpandSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwp0ColumnConfigCommandHandler": {
        "id": "openArrangePanel",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isInlineAuthoringMode"
        },
        "visibleWhen": false
      },
      "inlineAuthOverriddenAwb0CollapseBelowCtxMenuCommandHandler": {
        "id": "Awb0CollapseBelowCtxMenu",
        "action": "",
        "activeWhen": {
          "condition": "conditions.isExpandSupportedInInlineAuthoring"
        },
        "visibleWhen": false
      },
      "awb0OpenInViewCommandHandler": {
        "id": "awb0OpenInViewCommand",
        "action": "awb0launchOpenInViewCommandPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isInSplitMode"
        }
      },
      "awb0OpenInSplitViewCmdHandler": {
        "id": "Awp0ShowObject",
        "action": "awb0OpenInSplitView",
        "activeWhen": {
          "condition": "conditions.areSelectionsValidForSplitting"
        },
        "visibleWhen": {
          "condition": "conditions.areSelectionsValidForSplitting"
        }
      },
      "awb0SplitRootCmdHandler": {
        "id": "awb0SplitRootCmd",
        "action": "toggleSplitMode",
        "activeWhen": {
          "condition": "conditions.isSplitCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isSplitCommandVisible"
        },
        "selectWhen": {
          "condition": "conditions.isInSplitMode"
        }
      },
      "awb0StartTreeEditCommandHandler": {
        "id": "Awp0StartEditTable",
        "action": "awb0StartTreeEditPre",
        "activeWhen": {
          "condition": "conditions.isAwb0StartTreeEditApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0StartTreeEditApplicable"
        }
      },
      "awb0StartSummaryEditCommandHandler": {
        "id": "Awp0StartEditSummary",
        "action": "startEditSummary",
        "activeWhen": {
          "condition": "conditions.isAwb0StartSummaryEditApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0StartSummaryEditVisible"
        }
      },
      "awb0SaveEditsCommandHandler": {
        "id": "Awp0SaveEdits",
        "action": "saveEdits",
        "activeWhen": {
          "condition": "conditions.isAwb0SummaryEditIsInProgress"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isAwb0SummaryEditIsInProgress"
        }
      },
      "awb0CancelEditCommandHandler": {
        "id": "Awp0CancelEdits",
        "action": "isDirtyOnCancelEdits",
        "activeWhen": {
          "condition": "conditions.isAwb0SummaryEditIsInProgress"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0SummaryEditIsInProgress"
        }
      },
      "awb0SaveEditsPWACommandHandler": {
        "id": "Awp0SaveEditsPWA",
        "action": "saveEdits",
        "activeWhen": {
          "condition": "conditions.isAwb0TreeEditInProgress"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0TreeEditInProgress"
        }
      },
      "awb0CancelEditPWACommandHandler": {
        "id": "Awp0CancelEditsPWA",
        "action": "isDirtyOnCancelEdits",
        "activeWhen": {
          "condition": "conditions.isAwb0TreeEditInProgress"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0TreeEditInProgress"
        }
      },
      "Awb0SelectAllHandler": {
        "id": "Awp0SelectAll",
        "action": "Awb0SelectAllCommandAction",
        "activeWhen": {
          "condition": "conditions.awb0SelectAllCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awb0SelectAllCondition"
        }
      },
      "Awb0DeselectAllHandler": {
        "id": "Awp0DeselectAll",
        "action": "Awb0DeselectAllCommandAction",
        "activeWhen": {
          "condition": "conditions.awb0DeselectAllCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awb0DeselectAllCondition"
        }
      },
      "Awb0EnableMultiSelectHandler": {
        "id": "Awp0EnableMultiSelect",
        "action": "Awb0EnableMultiSelectCommandAction",
        "activeWhen": {
          "condition": "conditions.awb0MultiSelectEnableCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awb0MultiSelectEnableCondition"
        }
      },
      "Awb0DisableMultiSelectHandler": {
        "id": "Awp0DisableMultiSelect",
        "action": "Awb0DisableMultiSelectCommandAction",
        "activeWhen": {
          "condition": "conditions.awb0DisableMultiSelectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awb0DisableMultiSelectCondition"
        },
        "selectWhen": true
      },
      "discoveryOpenSnapshotQuickAccessHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "openSnapshotAction",
        "activeWhen": {
          "condition": "conditions.isSnapshotSelectedInQuickAccess"
        },
        "visibleWhen": {
          "condition": "conditions.isSnapshotSelectedInQuickAccess"
        }
      },
      "discoveryOpenSnapshotGlobalSearchHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "openSnapshotAction",
        "activeWhen": {
          "condition": "conditions.isSnapshotInGlobalSearch"
        },
        "visibleWhen": {
          "condition": "conditions.isSnapshotInGlobalSearch"
        }
      },
      "discoverySnapshotShowObjectNavigationHandler": {
        "id": "Awp0ShowObjectCellForObjectNavigation",
        "action": "openSnapshotAction",
        "activeWhen": {
          "condition": "conditions.isHandlerActiveForSnapshot"
        },
        "visibleWhen": {
          "condition": "conditions.isHandlerActiveForSnapshot"
        }
      },
      "Awb0CreateWorksetHandler": {
        "id": "Awb0CreateWorksetCommand",
        "action": "Awb0CreateWorksetCommandPanelAction",
        "activeWhen": {
          "condition": "conditions.isAwb0CreateWorksetAllowed"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0CreateWorksetAllowed"
        }
      },
      "discoveryHideCreateWorksetInMarkupMode": {
        "id": "Awb0CreateWorksetCommand",
        "activeWhen": {
          "condition": "conditions.hideCreateWorksetInMarkupMode"
        },
        "visibleWhen": false
      },
      "Awb0SaveSessionCommandHandler": {
        "id": "Awb0SaveSession",
        "action": "performSaveSession",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isSaveSessionActive"
        },
        "enableWhen": {
          "condition": "conditions.isSaveSessionApplicable"
        }
      },
      "Awb0ResetGroupHandler": {
        "id": "Awb0SessionGroup",
        "activeWhen": {
          "condition": "conditions.isResetGroupCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isResetGroupCommandVisible"
        }
      },
      "Awb0ReplayHandler": {
        "id": "Awb0ReplaySession",
        "action": "performReplayOfSession",
        "visibleWhen": true,
        "activeWhen": true,
        "enableWhen": true
      },
      "Awb0ResetSessionHandler": {
        "id": "Awb0ResetSession",
        "action": "showConfirmationMessageForReset",
        "visibleWhen": {
          "condition": "conditions.isResetApplicable"
        },
        "activeWhen": {
          "condition": "conditions.isResetApplicable"
        }
      },
      "Awb0HideResetStructureCommandDelegate": {
        "id": "Awb0ResetStructure",
        "activeWhen": {
          "condition": "conditions.isTypeFnd0AppSession"
        },
        "visibleWhen": false
      },
      "Awb0HideEditWorkingContextCommandHandler": {
        "id": "Awb0UpdateWorkingContext",
        "activeWhen": {
          "condition": "conditions.isEditWorkingContextVisible"
        },
        "visibleWhen": false
      },
      "Awb0SaveAsSessionHandler": {
        "id": "awb0SaveAsSession",
        "action": "Awb0SaveAsSessionCommandPanelAction",
        "activeWhen": {
          "condition": "conditions.isAwb0SaveAsSessionAllowed"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0SaveAsSessionAllowed"
        }
      },
      "Awb0CreateSessionHandler": {
        "id": "Awb0CreateSessionCommand",
        "action": "Awb0CreateSessionCommandPanelAction",
        "activeWhen": {
          "condition": "conditions.isAwb0CreateSessionAllowed"
        },
        "visibleWhen": {
          "condition": "conditions.isAwb0CreateSessionAllowed"
        }
      },
      "discoveryHideReplaceForSubsetAndWorksetAtNonAce": {
        "id": "Awb0ReplaceElementDeclarative",
        "activeWhen": {
          "condition": "conditions.hideReplaceForSubsetAndWorksetAtNonAce"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryHideReplaceCtxMenuForSubset": {
        "id": "Awb0ReplaceElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.hideReplaceForSubsetAndWorksetAtNonAce"
        },
        "visibleWhen": false
      },
      "discoveryWorksetDuplicateHandler": {
        "id": "Awb0ShowDuplicate",
        "activeWhen": {
          "condition": "conditions.isWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetCompareGroupHandler": {
        "id": "Awb0CompareGroup",
        "activeWhen": {
          "condition": "conditions.isTypeFnd0Workset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSubstituteHandler": {
        "id": "Awb0AddSubstitutesPWA",
        "activeWhen": {
          "condition": "conditions.isSubstituteCmdVisibleForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSeparateCommandHandler": {
        "id": "Awb0Separate",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isSeparateCmdVisibleForSubset"
        },
        "enableWhen": false
      },
      "discoveyWorksetAddAlternatePWACommandHandler": {
        "id": "ps0AddAlternatePWA",
        "activeWhen": {
          "condition": "conditions.isAlternateCmdVisibleForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetResetStructureHandler": {
        "id": "Awb0ResetStructure",
        "activeWhen": {
          "condition": "conditions.isResetApplicableForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSplitRootCmdHandler": {
        "id": "awb0SplitRootCmd",
        "activeWhen": {
          "condition": "conditions.isSplitCommandVisibleForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetawb0CutCommandHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.awb0CutCommandActiveForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryHideWorksetCutCmdSWAItemRevisionSelectionHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.isItemRevisionSelectedinSWAForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetCutCtxMenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.awb0CutCommandActiveForWorkset"
        },
        "visibleWhen": false
      },
      "discoveryWorksetCopyCommandHandler": {
        "id": "Awp0Copy",
        "activeWhen": {
          "condition": "conditions.awp0CopyCommandActiveForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetCopyCtxMenuCommandHandler": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.awp0CopyCommandActiveForWorkset"
        },
        "visibleWhen": false
      },
      "discoveryWorksetMarkandSuspectHandler": {
        "id": "Arm0MarkAndSuspect",
        "activeWhen": {
          "condition": "conditions.isMarkAsSuspectCommandEnabledForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetInitiateSubstCompCheckCommandHandler": {
        "id": "Scw0InitiateSubstanceComplianceCheck",
        "activeWhen": {
          "condition": "conditions.initiateComplianceCheckCommandVisibleForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetExecuteRecipeHandler": {
        "id": "Evm1ExecuteRecipe",
        "activeWhen": {
          "condition": "conditions.executeRecipeCommandConditionForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetBranchUploadCommandHandler": {
        "id": "Bhv1BranchUpload",
        "activeWhen": {
          "condition": "conditions.isBranchUploadEnabledForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetAddCharRepresentationHandler": {
        "id": "Aqc0AddCharRepresentation",
        "activeWhen": {
          "condition": "conditions.isBOMWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetFreezePointCommandHandler": {
        "id": "Att1SetFreezePoint",
        "activeWhen": {
          "condition": "conditions.setFreezePointCmdEnabledForWorkset"
        },
        "visibleWhen": false
      },
      "discoveryWorksetCreateRecipeHandler": {
        "id": "Evm1CreateRecipe",
        "activeWhen": {
          "condition": "conditions.createRecipeEnabledForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryHideWorksetAwp0OpenVVICommandHandler": {
        "id": "Awp0OpenVVI",
        "activeWhen": {
          "condition": "conditions.discoveryIsOpenInTcVisUnSupported"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetopenInIllustratorHandler": {
        "id": "openInIllustrator",
        "activeWhen": {
          "condition": "conditions.isBOMWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSc1CreateLineItemCmdHandler": {
        "id": "Sc1CreateLineItem",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSc1CreateExchangeCmdHandler": {
        "id": "Sc1CreateExchange",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetArm0CreateTraceLinkCmdHandler": {
        "id": "Arm0CreateTraceLink",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetArm0GenerateTraceabilityMatrixCmdHandler": {
        "id": "Arm0GenerateTraceabilityMatrix",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetAwb0ImportFromExcelCmdHandler": {
        "id": "Awb0ImportFromExcel",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetimportFromBriefcaseCommandCmdHandler": {
        "id": "importFromBriefcaseCommand",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetArm0ImportFromOfficeCmdHandler": {
        "id": "Arm0ImportFromOffice",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetCae1GenerateCAEStructureCmdHandler": {
        "id": "Cae1GenerateCAEStructure",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetAwp0InContextReportsCmdHandler": {
        "id": "Awp0InContextReports",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetEda1NewCollaborationCmdHandler": {
        "id": "Eda1NewCollaboration",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSaveWorkingContextCmdHandler": {
        "id": "Awb0SaveWorkingContext",
        "activeWhen": {
          "condition": "conditions.isBOMWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetAwp0MarkOwnershipTransferCmdHandler": {
        "id": "Awp0MarkOwnershipTransfer",
        "activeWhen": {
          "condition": "conditions.isBOMWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetScw0CmplCategoriesCmdHandler": {
        "id": "Scw0CmplCategories",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetArm0ExistingTraceLinkCmdHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isSubsetOrWorksetSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryHideWorksetRMBCutCmdSWAItemRevisionSelectionHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.isItemRevisionSelectedinSWAForWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetAwp0ViewOwnershipTransferCmdHandler": {
        "id": "Awp0ViewOwnershipTransfer",
        "activeWhen": {
          "condition": "conditions.isBOMWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetBhv1BranchExportCmdHandler": {
        "id": "Bhv1BranchExport",
        "activeWhen": {
          "condition": "conditions.isBOMWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Awb0HideSaveWorkingContextCommandHandlerForSession": {
        "id": "Awb0SaveAsWorkingContext",
        "action": "launchSaveSWCPanel",
        "activeWhen": {
          "condition": "conditions.hideSWCCommandForSession"
        },
        "visibleWhen": false
      },
      "Awb0HideOpenInRichClientCommandHandlerForSession": {
        "id": "Awp0OpenInRAC",
        "activeWhen": {
          "condition": "conditions.isOpenInRichClientVisibleForSession"
        },
        "visibleWhen": false
      },
      "Awb0HideOpenInIllustratorCommandHandlerForSession": {
        "id": "openInIllustrator",
        "activeWhen": {
          "condition": "conditions.isTypeFnd0AppSession"
        },
        "visibleWhen": false
      },
      "includeCtxMenuCommandHandler": {
        "id": "Awb0IncludeCtxMenu",
        "action": "launchStructureFilterPanelActionForIncludeBatch",
        "activeWhen": {
          "condition": "conditions.isIncludeExcludeVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isIncludeExcludeVisible"
        },
        "enableWhen": {
          "condition": "conditions.isIncludeExcludeEnabled"
        }
      },
      "excludeCtxMenuCommandHandler": {
        "id": "Awb0ExcludeCtxMenu",
        "action": "launchStructureFilterPanelActionForExcludeBatch",
        "activeWhen": {
          "condition": "conditions.isIncludeExcludeVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isIncludeExcludeVisible"
        },
        "enableWhen": {
          "condition": "conditions.isIncludeExcludeEnabled"
        }
      },
      "Awb0RecipeClearAllCommandHandler": {
        "id": "Awb0RecipeClearAll",
        "action": "clearAllConfirmationMessage",
        "visibleWhen": true,
        "activeWhen": true,
        "enableWhen": {
          "condition": "conditions.isClearAllRecipeVisible"
        }
      },
      "Awb0FilterSettingsCommandHandler": {
        "id": "Awb0FilterSettings",
        "action": "openSettings",
        "visibleWhen": true,
        "activeWhen": true,
        "enableWhen": true
      },
      "discoveryOccEffectivityCommandHandler": {
        "id": "Awb0OccurrenceEffectivity",
        "activeWhen": {
          "condition": "conditions.isOccEffectivityCmdVisibleForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryRevisionEffectivityCommandHandler": {
        "id": "Awb0ReleaseStatusEffectivity",
        "activeWhen": {
          "condition": "conditions.isRevisionEffectivityCmdVisibleForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryInsertLevelCmdHandler": {
        "id": "Awb0InsertParentElement",
        "activeWhen": {
          "condition": "conditions.isInsertLevelCmdVisibleForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryInsertLevelCtxCmdHandler": {
        "id": "Awb0InsertParentElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.isInsertLevelCtxCmdVisibleForSubset"
        },
        "visibleWhen": false
      },
      "discoveryRemoveLevelCmdHandler": {
        "id": "Awb0RemoveLevel",
        "activeWhen": {
          "condition": "conditions.isRemoveLevelCmdVisibleForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryRemoveLevelCtxCmdHandler": {
        "id": "Awb0RemoveLevelCtxMenu",
        "activeWhen": {
          "condition": "conditions.isRemoveLevelCtxCmdVisibleForSubset"
        },
        "visibleWhen": false
      },
      "discoveryWorksetSaveAsReplaceHandler": {
        "id": "Awb0SaveAsAndReplaceElement",
        "activeWhen": {
          "condition": "conditions.isSaveAsReplaceCmdForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryHideShowSaveAsReviseCmd": {
        "id": "Awp0ShowSaveAs",
        "activeWhen": {
          "condition": "conditions.discoveryIsSaveAsReviseUnSupported"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetSaveAsReviseHandler": {
        "id": "Awp0ShowSaveAs",
        "action": "updateSelectedOnCtxOnSaveAsReviseWS",
        "activeWhen": {
          "condition": "conditions.aceSaveAsReviseWorkset"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.aceSaveAsReviseWorkset"
        }
      },
      "sessionCutCtxMenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.disableCutOnProductInSessionInContains"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "Awv0ShowObjectGalleryCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "openSnapshotAction",
        "activeWhen": {
          "condition": "conditions.isSnapshotInGlobalSearchOrInDiscussion"
        },
        "visibleWhen": {
          "condition": "conditions.isSnapshotInGlobalSearchOrInDiscussion"
        }
      },
      "Awv0OpenInNewTabGalleryCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "openInNewTabCommandContext",
        "activeWhen": {
          "condition": "conditions.isSnapshotInGlobalSearch"
        },
        "visibleWhen": {
          "condition": "conditions.isSnapshotInGlobalSearch"
        }
      },
      "Awv0OpenInNewWindowGalleryCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "openInNewWindowCommandContext",
        "activeWhen": {
          "condition": "conditions.isSnapshotInGlobalSearch"
        },
        "visibleWhen": {
          "condition": "conditions.isSnapshotInGlobalSearch"
        }
      },
      "Awv0ShowObjectGalleryCellCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "showObjectCellCommandContext",
        "activeWhen": {
          "condition": "conditions.isProductSnapshotShownTable"
        },
        "visibleWhen": {
          "condition": "conditions.isProductSnapshotShownTable"
        }
      },
      "Awv0OpenInNewTabGalleryCellCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "openInNewTabCellCommandContext",
        "activeWhen": {
          "condition": "conditions.isProductSnapshotShownTable"
        },
        "visibleWhen": {
          "condition": "conditions.isProductSnapshotShownTable"
        }
      },
      "Awv0OpenInNewWindowGalleryCellCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "openInNewWindowCellCommandContext",
        "activeWhen": {
          "condition": "conditions.isProductSnapshotShownTable"
        },
        "visibleWhen": {
          "condition": "conditions.isProductSnapshotShownTable"
        }
      },
      "discoveryWorksetShowUnconfiguredByVariantsHandler": {
        "id": "Awb0ShowUnconfiguredByVariants",
        "activeWhen": {
          "condition": "conditions.isShowVariantsUnconfiguredApplicableForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetShowUnconfiguredByEffHandler": {
        "id": "Awb0ShowUnconfiguredByOccEffectivity",
        "activeWhen": {
          "condition": "conditions.isShowEffUnconfiguredApplicableForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryWorksetShowSuppressedHandler": {
        "id": "Awb0ShowSuppressed",
        "activeWhen": {
          "condition": "conditions.isShowSuppressedApplicableForSubset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoverySessionShowUnconfiguredByVariantsHandler": {
        "id": "Awb0ShowUnconfiguredByVariants",
        "activeWhen": {
          "condition": "conditions.isShowVariantsUnconfiguredApplicableForSession"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoverySessionShowEffByVariantsHandler": {
        "id": "Awb0ShowUnconfiguredByOccEffectivity",
        "activeWhen": {
          "condition": "conditions.isShowEffUnconfiguredApplicableForSession"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoverySessionShowSuppressedHandler": {
        "id": "Awb0ShowSuppressed",
        "activeWhen": {
          "condition": "conditions.isShowSuppressedApplicableForSession"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "applyProductSnapshotCommandHandler": {
        "id": "applyProductSnapshotCommand",
        "action": "openSnapshotAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSnapshotInGlobalSearchOrInDiscussion3D"
        }
      },
      "Awb0ReplayWorksetHandler": {
        "id": "Awb0ReplayWorkset",
        "action": "performReplayOfWorkset",
        "activeWhen": {
          "condition": "conditions.isReplayOfWorksetApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.isReplayOfWorksetApplicable"
        },
        "enableWhen": {
          "condition": "conditions.isReplayOfWorksetEnabled"
        }
      },
      "Ac0ShowObjectCommandHandler": {
        "id": "Ac0ShowObjectCommand",
        "action": "openSnapshotAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awb0SaveWorksetCommandHandler": {
        "id": "Awb0SaveWorkset",
        "action": "performSaveWorkset",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isSaveWorksetActive"
        },
        "enableWhen": {
          "condition": "conditions.isSaveWorksetApplicable"
        }
      },
      "Awb0CBOSForWorksetCmdHandler": {
        "id": "Awb0CBOSCmd",
        "action": "configureBySelectionInWorkset",
        "activeWhen": {
          "condition": "conditions.aceCBOSForWorksetApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.aceCBOSForWorksetVisible"
        },
        "enableWhen": {
          "condition": "conditions.aceCBOSForWorksetApplicable"
        }
      },
      "Awb0SessionOpenVisCommandHandler": {
        "id": "Awp0OpenVVI",
        "action": "launchOpenInVis",
        "activeWhen": {
          "condition": "conditions.discoveryOpenInVisApplicable"
        },
        "visibleWhen": {
          "condition": "conditions.discoveryOpenInVisApplicable"
        },
        "enableWhen": {
          "condition": "conditions.discoveryOpenInVisApplicable"
        }
      },
      "discoveryAceUnifiedInContextSearchInWorksetCommandHandler": {
        "id": "Awb0AceUnifiedInContextSearch",
        "action": "launchUnifiedNavigationPanel",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.findInContextOfWorksetApplicable"
        },
        "enableWhen": {
          "condition": "conditions.findInContextOfWorksetEnable"
        }
      },
      "discoveryHideCBOSCommandHandler": {
        "id": "Awb0CBOSCmd",
        "activeWhen": {
          "condition": "conditions.hideCBOSForTopNode"
        },
        "visibleWhen": false
      },
      "discoveryHideCreateRollupReportCmdHandler": {
        "id": "Wnb0CreateRollupReport",
        "action": "",
        "activeWhen": {
          "condition": "conditions.discoveryHideRollUpReport"
        },
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": false
      },
      "discoveryHideViewRollupReportCmdHandler": {
        "id": "Wnb0ViewRollupReport",
        "action": "",
        "activeWhen": {
          "condition": "conditions.discoveryHideRollUpReport"
        },
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": false
      },
      "discoveryHideOpenWithMultipleSubsetsHandler": {
        "id": "Awp0ShowObject",
        "activeWhen": {
          "condition": "conditions.isOpenValidForSelectedObjectsInWorkset"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "discoveryHideExportToPLMXMLCommandHandler": {
        "id": "exportToPLMXMLCommand",
        "activeWhen": {
          "condition": "conditions.isExportToPLMXMLDisabled"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Awv0ProductSnapshotTileOpenCommandHandler": {
        "id": "Awv0ProductSnapshotTileOpenCommand",
        "action": "openProductSnapshotViaTileAction",
        "visibleWhen": true,
        "activeWhen": true
      },
      "Awp0AlignDesignHandler": {
        "id": "Awp0AlignDesign",
        "action": "AlignDesignCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AlignDesignCommandCondition"
        }
      },
      "Awp0UnAlignDesignHandler": {
        "id": "Awp0UnAlignDesign",
        "action": "RemoveDesignAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0UnAlignDesignCommandCondition"
        }
      },
      "Awp0AlignPartHandler": {
        "id": "Awp0AlignPart",
        "action": "AlignPartCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AlignPartCommandCondition"
        }
      },
      "Awp0UnAlignPartHandler": {
        "id": "Awp0UnAlignPart",
        "action": "RemovePartAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0UnAlignPartCommandCondition"
        }
      },
      "Awp0SetPrimaryDesignHandler": {
        "id": "Awp0SetPrimaryDesign",
        "action": "SetPrimaryCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0SetPrimaryDesignCommandCondition"
        }
      },
      "EntCBAShowObjectCellDelegateCommandHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "EntCBAShowObjectCellDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAShowObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAShowObjectCondition"
        }
      },
      "EntCBAShowObjectDelegateCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "EntCBAShowObjectDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "EntCBAOpenInNewTabDelegateCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "EntCBAOpenObjectInNewTabDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "EntCBAOpenInWindowTabDelegateCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "EntCBAOpenObjectInNewWindowDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "EntCBAOpenInRACTabDelegateCommandHandler": {
        "id": "Awp0OpenInRAC",
        "action": "EntCBAOpenObjectInRACDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "Awp0CutDesignEntCBACommandHandler": {
        "id": "Awp0Cut",
        "action": "RemoveDesignAction",
        "activeWhen": {
          "condition": "conditions.entCBACutDesignVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.entCBACutDesignVisibility"
        },
        "enableWhen": {
          "condition": "conditions.entCBACutDesignVisibility"
        }
      },
      "Awp0CutCtxMenuDesignEntCBACommandHandler": {
        "id": "Awp0CutContextMenu",
        "action": "RemoveDesignAction",
        "activeWhen": {
          "condition": "conditions.isValidSelectionInAlignedDesignSection"
        },
        "visibleWhen": {
          "condition": "conditions.isValidSelectionInAlignedDesignSection"
        }
      },
      "Awp0CutPartEntCBACommandHandler": {
        "id": "Awp0Cut",
        "action": "RemovePartAction",
        "activeWhen": {
          "condition": "conditions.entCBACutPartVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.entCBACutPartVisibility"
        },
        "enableWhen": {
          "condition": "conditions.entCBACutPartVisibility"
        }
      },
      "Awp0CutCtxMenuPartEntCBACommandHandler": {
        "id": "Awp0CutContextMenu",
        "action": "RemovePartAction",
        "activeWhen": {
          "condition": "conditions.isValidSelectionInAlignedPartSection"
        },
        "visibleWhen": {
          "condition": "conditions.isValidSelectionInAlignedPartSection"
        }
      },
      "Awb0EntCBALaunchAlignTaskHandler": {
        "id": "Awb0EntCBALaunchAlignTask",
        "action": "EntCBALaunchAlignTaskCommandAction",
        "activeWhen": {
          "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
        },
        "enableWhen": {
          "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
        }
      },
      "Awb0EntCBAAlignCommandHandler": {
        "id": "Awb0EntCBAAlignCommand",
        "action": "EntCBAAlignCommandAction",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.AlignCommandCondition"
        }
      },
      "Awb0EntCBAUnAlignCommandHandler": {
        "id": "Awb0EntCBAUnAlignCommand",
        "action": "showUnAlignmentConfirmationMessage",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.UnAlignCommandCondition"
        }
      },
      "Awb0EntCBATopAlignCommandHandler": {
        "id": "Awb0EntCBAAlignCommand",
        "action": "EntCBATopAlignCommandAction",
        "activeWhen": {
          "condition": "conditions.isAlignCommandAvailableForTop"
        },
        "visibleWhen": {
          "condition": "conditions.isAlignCommandAvailableForTop"
        },
        "enableWhen": {
          "condition": "conditions.isAlignCommandAvailableForTop"
        }
      },
      "Awb0EntCBATopUnAlignCommandHandler": {
        "id": "Awb0EntCBAUnAlignCommand",
        "action": "showTopUnAlignConfirmationMessage",
        "activeWhen": {
          "condition": "conditions.isUnalignCommandAvailableForTop"
        },
        "visibleWhen": {
          "condition": "conditions.isUnalignCommandAvailableForTop"
        },
        "enableWhen": {
          "condition": "conditions.isUnalignCommandAvailableForTop"
        }
      },
      "Awb0EntCBAAlignmentCheck132OnwardsCommandHandler": {
        "id": "Awb0EntCBAAlignmentCheck",
        "action": "executeAlignmentCheckBatch",
        "activeWhen": {
          "condition": "conditions.enableAlignmentCheck132Onwards"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.AlignmentCheckCommandCondition"
        }
      },
      "Awb0EntCBAAlignmentCheckCommandHandler": {
        "id": "Awb0EntCBAAlignmentCheck",
        "action": "executeAlignmentCheck",
        "activeWhen": {
          "condition": "conditions.enableAlignmentCheckPriorTo132"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.AlignmentCheckCommandCondition"
        }
      },
      "Awb0EntCBAAlignmentCheckSettingsCommandHandler": {
        "id": "Awb0EntCBAAlignmentCheckSettings",
        "action": "openAlignmentCheckSettingPanel",
        "activeWhen": false,
        "visibleWhen": false,
        "enableWhen": false
      },
      "showCBAColumnArrangeCommandHandler": {
        "id": "openArrangePanel",
        "action": "processCBAColumnsArrangeSettings",
        "activeWhen": {
          "condition": "conditions.isColumnArrangeIconVisible"
        },
        "enableWhen": true,
        "visibleWhen": {
          "condition": "conditions.isColumnArrangeIconVisible"
        }
      },
      "openCBANotificationCommandHandler": {
        "id": "Awp0OpenLineItem",
        "action": "openCBANotification",
        "activeWhen": {
          "condition": "conditions.enableOpenCBANotificationCommandCond"
        },
        "visibleWhen": {
          "condition": "conditions.enableOpenCBANotificationCommandCond"
        }
      },
      "cbaOpenInViewCommandHandler": {
        "id": "awb0OpenInViewCommand",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaStartEditCommandHandler": {
        "id": "Awp0StartEditTable",
        "activeWhen": {
          "condition": "conditions.editCommandVisibility"
        },
        "visibleWhen": false
      },
      "cbaViewGroupCommandHandler": {
        "id": "Awb0ViewGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isEntCBASubLocation"
        }
      },
      "cbaEnableMultiSelectHandler": {
        "id": "Awp0EnableMultiSelect",
        "activeWhen": {
          "condition": "conditions.multiSelectEnableCondition"
        },
        "visibleWhen": false
      },
      "Awb0EntCBAOpenGroupCommandHandler": {
        "id": "Awb0EntCBAOpenGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.openGroupCommandsVisibility"
        }
      },
      "openTreeTableObjectCommandHandler": {
        "id": "Awb0EntCBAOpenObject",
        "action": "openTreeTableObjectAction",
        "activeWhen": {
          "condition": "conditions.openObjectFromTreeTableCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openObjectFromTreeTableCondition"
        }
      },
      "openTreeTableObjectInNewWindowCommandHandler": {
        "id": "Awb0EntCBAOpenInNewWindow",
        "action": "openTreeTableObjectInNewWindow",
        "activeWhen": {
          "condition": "conditions.openObjectFromTreeTableCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openObjectFromTreeTableCondition"
        }
      },
      "openTreeTableObjectInNewTabCommandHandler": {
        "id": "Awb0EntCBAOpenInNewTab",
        "action": "openTreeTableObjectInNewTab",
        "activeWhen": {
          "condition": "conditions.openObjectFromTreeTableCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openObjectFromTreeTableCondition"
        }
      },
      "openTreeTableOEBOMbjectCommandHandler": {
        "id": "Awb0EntCBAOpenObject",
        "action": "openTreeTableBOMObjectAction",
        "activeWhen": {
          "condition": "conditions.openBOMObjectFromTreeTableActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openBOMObjectFromTreeTableVisibleCondition"
        }
      },
      "openTreeTableBOMObjectInNewWindowCommandHandler": {
        "id": "Awb0EntCBAOpenInNewWindow",
        "action": "openTreeTableBOMObjectInNewWindow",
        "activeWhen": {
          "condition": "conditions.openBOMObjectFromTreeTableActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openBOMObjectFromTreeTableVisibleCondition"
        }
      },
      "openTreeTableBOMObjectInNewTabCommandHandler": {
        "id": "Awb0EntCBAOpenInNewTab",
        "action": "openTreeTableBOMObjectInNewTab",
        "activeWhen": {
          "condition": "conditions.openBOMObjectFromTreeTableActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openBOMObjectFromTreeTableVisibleCondition"
        }
      },
      "Fnd0AlingedObjectOpenCommandHandler": {
        "id": "Awb0EntCBAOpenObject",
        "action": "EntCBAShowObjectDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "Fnd0AlingedObjectOpenInNewTabCommandHandler": {
        "id": "Awb0EntCBAOpenInNewTab",
        "action": "EntCBAOpenObjectInNewTabDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "Fnd0AlingedObjectOpenInWindowTabCommandHandler": {
        "id": "Awb0EntCBAOpenInNewWindow",
        "action": "EntCBAOpenObjectInNewWindowDelegateAction",
        "activeWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        },
        "visibleWhen": {
          "condition": "conditions.EntCBAOpenObjectCondition"
        }
      },
      "openItemObjectCommandHandler": {
        "id": "Awb0EntCBAOpenObject",
        "action": "openItemObjectAction",
        "activeWhen": {
          "condition": "conditions.isItemOrItemRevisionSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isItemOrItemRevisionSelected"
        }
      },
      "openItemObjectInNewWindowDelegateCommandHandler": {
        "id": "Awb0EntCBAOpenInNewWindow",
        "action": "openItemObjectInNewWindowAction",
        "activeWhen": {
          "condition": "conditions.isItemOrItemRevisionSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isItemOrItemRevisionSelected"
        }
      },
      "openItemObjectInNewTabDelegateCommandHandler": {
        "id": "Awb0EntCBAOpenInNewTab",
        "action": "openItemObjectInNewTabAction",
        "activeWhen": {
          "condition": "conditions.isItemOrItemRevisionSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isItemOrItemRevisionSelected"
        }
      },
      "cbaAddGroupCommandHandler": {
        "id": "Awb0AddGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaStructureFilterCommandHandler": {
        "id": "Awb0StructureFilterCommand",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "cbaPartitionCommandHandler": {
        "id": "Awb0Partition",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaCompareGroupCommandHandler": {
        "id": "Awb0CompareGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaRollupGroupCommandHandler": {
        "id": "Awb0RollupGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaShowDuplicateCommandHandler": {
        "id": "Awb0ShowDuplicate",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaSplitRootCommandHandler": {
        "id": "awb0SplitRootCmd",
        "activeWhen": {
          "condition": "conditions.splitCommandVisibility"
        },
        "visibleWhen": false
      },
      "cbaRestructureGroupCommandHandler": {
        "id": "Awb0RestructureGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaConfigBySelectionCommandHandler": {
        "id": "Awb0CBOSCmd",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaConfigByProximityCommandHandler": {
        "id": "Awb0ConfigByProximityCmd",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaPackCommandHandler": {
        "id": "Awb0Pack",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaUnpackCommandHandler": {
        "id": "Awb0Unpack",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaSetInContextCommandHandler": {
        "id": "Awb0SetInContext",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaShowMarkupCommandHandler": {
        "id": "Awb0ShowMarkup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaWBSCloneGroupHandler": {
        "id": "Awb0WBSCloneGroup",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "Awb0EntCBAAlignGroupCommandHandler": {
        "id": "Awb0EntCBAAlignGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAlignGroupCmdVisible"
        },
        "enableWhen": {
          "condition": "conditions.isAlignGroupCmdVisible"
        }
      },
      "Awb0EntCBAOpenAlignmentViewCommandHandler": {
        "id": "Awb0EntCBAOpenAlignmentView",
        "action": "EntCBALaunchAlignTaskCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
        },
        "enableWhen": {
          "condition": "conditions.EntCBALaunchAlignTaskCommandCondition"
        }
      },
      "CBADisableCutInAlignDesignSectionCmdHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.isValidSelectionInAlignedDesignSection"
        },
        "visibleWhen": {
          "condition": "conditions.isValidSelectionInAlignedDesignSection"
        },
        "enableWhen": false
      },
      "CBADisableCutInAlignedPartSectionCmdHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.isValidSelectionInAlignedPartSection"
        },
        "visibleWhen": {
          "condition": "conditions.isValidSelectionInAlignedPartSection"
        },
        "enableWhen": false
      },
      "Awb0EntCBADeselectAllHandler": {
        "id": "Awb0EntCBADeselectAll",
        "action": "Awb0EntCBADeselectAllCommandAction",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isRowSelectionInSrcOrTrg"
        }
      },
      "Awb0FindAlignedCommandHandler": {
        "id": "Awb0FindAligned",
        "action": "FindAlignedAction",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.FindAlignedCommandCondition"
        },
        "enableWhen": {
          "condition": "conditions.FindAlignedCommandCondition"
        }
      },
      "cbaCopyContextMenuCommandHandler": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaCopyContextMenuCommandHandler2": {
        "id": "Awp0CopyContextMenu",
        "action": "copyFnd0AlignedElement",
        "activeWhen": {
          "condition": "conditions.isFnd0AlignedElementSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isFnd0AlignedElementSelected"
        }
      },
      "cbaCopyCommandHandler": {
        "id": "Awp0Copy",
        "action": "copyFnd0AlignedElement",
        "activeWhen": {
          "condition": "conditions.isFnd0AlignedElementSelected"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.isFnd0AlignedElementSelected"
        }
      },
      "cbaPackCtxMenuCommandHandler": {
        "id": "Awb0PackCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaUnpackCtxMenuCommandHandler": {
        "id": "Awb0UnpackCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaInsertParentElementCtxMenuCommandHandler": {
        "id": "Awb0InsertParentElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaReplaceElementCtxMenuCommandHandler": {
        "id": "Awb0ReplaceElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaRemoveElementCtxMenuCommandHandler": {
        "id": "Awb0RemoveElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.activateRemoveElementCtxMenuCmdCondition"
        },
        "visibleWhen": false
      },
      "cbaRemoveLevelCtxMenuCommandHandler": {
        "id": "Awb0RemoveLevelCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaSetInContextCtxMenuCommandHandler": {
        "id": "Awb0SetInContextCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAceReferenceContextMenuCommandHandler": {
        "id": "Awb0AceReferenceContextMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAceCloneCommandCommandHandler": {
        "id": "Awb0AceCloneCommand",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAceReviseContextMenuCommandHandler": {
        "id": "Awb0AceReviseContextMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAceReplaceContextMenuCommandHandler": {
        "id": "Awb0AceReplaceContextMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAceRemoveContextMenuCommandHandler": {
        "id": "Awb0AceRemoveContextMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAceCloneBelowCommandHandler": {
        "id": "Awb0AceCloneBelowCommand",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaIncludeCtxMenuCommandHandler": {
        "id": "Awb0IncludeCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaExcludeCtxMenuCommandHandler": {
        "id": "Awb0ExcludeCtxMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaCreateTraceLinkCtxCommandHandler": {
        "id": "Arm0CreateTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaAddTraceLinkCtxCommandHandler": {
        "id": "Arm0AddTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaExistingTraceLinkCommandHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "cbaPasteContextMenuCommandHandler": {
        "id": "Awp0PasteContextMenu",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        },
        "visibleWhen": false
      },
      "RevisionRuleClauseUpCommandHandler": {
        "id": "RevisionRuleClauseUp",
        "action": "moveClauseUp",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.RevisionRuleClauseUpCommandEnable"
        }
      },
      "RevisionRuleClauseDownCommandHandler": {
        "id": "RevisionRuleClauseDown",
        "action": "moveClauseDown",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.RevisionRuleClauseDownCommandEnable"
        }
      },
      "RevisionRuleClauseAddCommandHandler": {
        "id": "RevisionRuleClauseAdd",
        "action": "launchAddClausePanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.RevisionRuleClauseAddCommandEnable"
        }
      },
      "RevisionRuleClauseAddCommandHandlerForRevOcc": {
        "id": "RevisionRuleClauseAdd",
        "action": "launchAddClausePanel",
        "activeWhen": {
          "condition": "conditions.isRevisableOccurrenceStruct"
        },
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.RevisionRuleClauseAddCommandEnableForRevOcc"
        }
      },
      "RevisionRuleClauseDeleteCommandHandler": {
        "id": "RevisionRuleClauseDelete",
        "action": "deleteClause",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.RevisionRuleClauseDeleteCommandEnable"
        }
      },
      "RevisionRuleAdminAddCommandHandler": {
        "id": "RevisionRuleAdminAdd",
        "action": "launchAddAdminPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0RevisionRuleAdminAddCommandConditionActive"
        }
      },
      "RevisionRuleAdminDeleteCommandHandler": {
        "id": "RevisionRuleAdminDelete",
        "action": "deleteRevisionRule",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0RevisionRuleAdminAddCommandConditionActive"
        },
        "enableWhen": {
          "condition": "conditions.RevisionRuleAdminDeleteCommandEnable"
        }
      },
      "RevisionRuleAdminCommandHandler": {
        "id": "RevisionRuleAdmin",
        "action": "launchRevisionRuleAdminPanel",
        "activeWhen": {
          "condition": "conditions.RevisionRuleAdminCommandConditionActive"
        },
        "visibleWhen": {
          "condition": "conditions.RevisionRuleAdminCommandConditionActive"
        }
      },
      "CloseRevisionRuleAdminPanelCommandHandler": {
        "id": "Awp0CloseCommandPanel",
        "action": "closeRevisionRulePanel",
        "activeWhen": {
          "condition": "conditions.isRevisionRulePanelLaunched"
        },
        "visibleWhen": true
      },
      "ClausePropertyAddCommandHandler": {
        "id": "ClausePropertyAdd",
        "action": "launchClausePropertyAddPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.ClausePropertyAddCommandActive"
        }
      },
      "AddClausePropertyCommandHandler": {
        "id": "AddClauseProperty",
        "action": "launchAddClausePropertyPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.AddClausePropertyCommandActive"
        }
      },
      "ClausePropertyRemoveCommandHandler": {
        "id": "ClausePropertyRemove",
        "action": "removeClauseProperty",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveReplacePropActive"
        }
      },
      "RemoveClausePropertyCommandHandler": {
        "id": "RemoveClauseProperty",
        "action": "clausePropertyRemove",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.IsAddRevisionRuleClausePropertyPresent"
        }
      },
      "ClausePropertyReplaceCommandHandler": {
        "id": "ClausePropertyReplace",
        "action": "launchClausePropertyReplacePanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveReplacePropActive"
        }
      },
      "ReplaceClausePropertyCommandHandler": {
        "id": "ReplaceClauseProperty",
        "action": "launchReplaceClausePropertyPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRevisionRuleEditable"
        },
        "enableWhen": {
          "condition": "conditions.IsAddRevisionRuleClausePropertyPresent"
        }
      },
      "Awb0AddPartitionCommandHandler": {
        "id": "Awb0AddPartition",
        "action": "launchAddPartitionPanel",
        "activeWhen": {
          "condition": "conditions.isAddPartitionCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAddPartitionCommandVisible"
        },
        "enableWhen": {
          "condition": "conditions.isAddPartitionCommandEnabled"
        }
      },
      "sptn0ImportBOMCmdHandler": {
        "id": "Awb0ImportFromExcel",
        "activeWhen": {
          "condition": "conditions.enableImportBOMCommandForPartition"
        },
        "visibleWhen": false
      },
      "sptn0CompareCmdHandler": {
        "id": "Awb0Compare",
        "activeWhen": {
          "condition": "conditions.isCompareApplicableInPartition"
        },
        "visibleWhen": false
      },
      "sptn0ShowMarkupCommandHandler": {
        "id": "Awb0ShowMarkup",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": false
      },
      "sptn0ExcelRoundTripHandler": {
        "id": "Arm0ExportImport",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": false
      },
      "sptn0ExportExcelCommandHandler": {
        "id": "Arm0Export",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": false
      },
      "sptn0ImportExcelCommandHandler": {
        "id": "Arm0ImportExcel",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": false
      },
      "structurePartitionOpenGroupCommandHandler": {
        "id": "Awp0OpenGroup",
        "activeWhen": {
          "condition": "conditions.isAtleastOnePartitionElementSelectedForStructurePartition"
        },
        "visibleWhen": false
      },
      "structurePartitionDuplicateHandeler": {
        "id": "Awb0ShowDuplicate",
        "activeWhen": {
          "condition": "conditions.isStrPartitionDuplicateSupported"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "structurePartitionSetInContextHandeler": {
        "id": "Awb0SetInContext",
        "activeWhen": {
          "condition": "conditions.isStrPartitionSetInContextSupported"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "structurePartitionSetInContextCtxHandeler": {
        "id": "Awb0SetInContextCtxMenu",
        "activeWhen": {
          "condition": "conditions.isStrPartitionSetInContextSupportedOnCtx"
        },
        "visibleWhen": false
      },
      "structurePartitionCompareGroupHandler": {
        "id": "Awb0CompareGroup",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "structurePartitionElemEffectivityHandeler": {
        "id": "Awb0OccurrenceEffectivity",
        "activeWhen": {
          "condition": "conditions.strPartitionElemEffectivitySupported"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "structurePartitionRollupGroupCmdHandler": {
        "id": "Awb0RollupGroup",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "structurePartitionPackHandler": {
        "id": "Awb0Pack",
        "activeWhen": {
          "condition": "conditions.isAtleastOnePartitionElementSelectedForStructurePartition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "structurePartitionPackCtxMenuHandler": {
        "id": "Awb0PackCtxMenu",
        "activeWhen": {
          "condition": "conditions.isAtleastOnePartitionElementSelectedForStructurePartition"
        },
        "visibleWhen": false
      },
      "structurePartitionSplitHandler": {
        "id": "Awb0Separate",
        "action": "separateElementToDistinctElements",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isAutoPartitionUpdateScheme"
        },
        "enableWhen": {
          "condition": "conditions.isSplitEnableInAutoPartitionMode"
        }
      },
      "Awb0RemoveElementStructurePartitionHandler": {
        "id": "Awb0RemoveElement",
        "action": "showConfirmationMessage",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isRemoveActiveForPartitionLine"
        },
        "enableWhen": {
          "condition": "conditions.isRemoveActiveForPartitionLineEnabled"
        }
      },
      "Awb0RemoveElementCtxMenuStrPtnHandler": {
        "id": "Awb0RemoveElementCtxMenu",
        "action": "showConfirmationMessage",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isRemoveActiveForPartitionLine"
        },
        "enableWhen": {
          "condition": "conditions.isRemoveActiveForPartitionLineEnabled"
        }
      },
      "Awb0PartitionGroupHandler": {
        "id": "Awb0Partition",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isPartitionGroupVisible"
        },
        "enableWhen": {
          "condition": "conditions.isPartitionGroupVisible"
        }
      },
      "Awb0Unassigned": {
        "id": "Awb0Unassigned",
        "action": "toggleUnassignedMode",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isUnassignedCmdVisible"
        },
        "enableWhen": {
          "condition": "conditions.isUnassignedCmdVisible"
        },
        "selectWhen": {
          "condition": "conditions.isInUnassignedMode"
        }
      },
      "Awb0SplitRootCmdStructurePartitionHandler": {
        "id": "awb0SplitRootCmd",
        "action": "disableUnassignedMode",
        "visibleWhen": true,
        "activeWhen": {
          "condition": "conditions.isSplitCmdVisibleAndUnassignedMode"
        },
        "enableWhen": {
          "condition": "conditions.isSplitCmdVisibleAndUnassignedMode"
        },
        "selectWhen": {
          "condition": "conditions.isSplitCmdVisibleAndUnassignedMode"
        }
      },
      "structureFilterCommandPartitionHandler": {
        "id": "Awb0StructureFilterCommand",
        "action": "launchStructureFilterPanel",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedAndNot4GD"
        },
        "visibleWhen": {
          "condition": "conditions.isOccurrenceManagementSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isStructureFilterEnable"
        }
      },
      "addChildElementCommandHandlerOverride": {
        "id": "Awb0AddChildElementDeclarative",
        "activeWhen": {
          "condition": "conditions.isAddChildApplicableInContextOfPartitionScheme"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "addSiblingElementCommandHandlerOverride": {
        "id": "Awb0AddSiblingElementDeclarative",
        "activeWhen": {
          "condition": "conditions.isAddSiblingApplicableInContextOfPartitionScheme"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Awb0GetLiveSearchResultCommandHandlerOverride": {
        "id": "Awb0GetLiveSearchResultCommand",
        "activeWhen": {
          "condition": "conditions.isSchemeAppliedConditionInFindPanel"
        },
        "visibleWhen": false,
        "enableWhen": false
      },
      "Awb0PreviewSolutionVariantCommandHandler": {
        "id": "Awb0PreviewSolutionVariant",
        "action": "getSubsetSVR",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantCmdActiveOrVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isSolutionVariantCmdActiveOrVisible"
        },
        "enableWhen": {
          "condition": "conditions.enableSolutionVariantPreview"
        }
      },
      "openSVCreateNotificationCommandHandler": {
        "id": "Awp0OpenLineItem",
        "action": "openSVCreateNotification",
        "activeWhen": {
          "condition": "conditions.enableOpenSVCreateNotificationCommandCond"
        },
        "visibleWhen": {
          "condition": "conditions.enableOpenSVCreateNotificationCommandCond"
        }
      },
      "Awb0AceUnifiedInContextSearchInSVPreviewCommandHandler": {
        "id": "Awb0AceUnifiedInContextSearch",
        "action": "launchUnifiedNavigationPanel",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "enableWhen": {
          "condition": "conditions.isNavigationSupported"
        }
      },
      "Awb0ExpandInSVPreviewCommandHandler": {
        "action": "showExpandOptions",
        "id": "Awb0Expand",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        }
      },
      "svPreviewTraceLinkHideHandler": {
        "id": "Arm0CreateTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewExistingTraceLinkHideHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewArm0ExportCommandHideExportWithFolderSelectionHandler": {
        "id": "Arm0Export",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewArm0ImportExcelCommandHideExportWithFolderSelectionHandler": {
        "id": "Arm0ImportExcel",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAtt1ImportNewCommandHideHandler": {
        "id": "Att1ImportNew",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAwp0CopyHideHandler": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAwp0PasteContextMenuHideHandler": {
        "id": "Awp0PasteContextMenu",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAwb0ReplaceElementCtxMenuHideHandler": {
        "id": "Awb0ReplaceElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAwb0InsertParentElementCtxMenuHideHandler": {
        "id": "Awb0InsertParentElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAwb0RemoveElementCtxMenuHideHandler": {
        "id": "Awb0RemoveElementCtxMenu",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      },
      "svPreviewAwb0RemoveLevelCtxMenuHideHandler": {
        "id": "Awb0RemoveLevelCtxMenu",
        "activeWhen": {
          "condition": "conditions.isSolutionVariantPreviewSubLocation"
        },
        "visibleWhen": false
      }
    },
    "commandPlacements": {
      "Awb0SeparateCommandPlacement": {
        "id": "Awb0Separate",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 50,
        "parentGroupId": "Awb0RestructureGroup"
      },
      "Awb0PackCmdPlacement": {
        "id": "Awb0Pack",
        "priority": 10,
        "uiAnchor": "Awb0ExpandGroup"
      },
      "Awb0PackCtxMenuCmdPlacement": {
        "id": "Awb0PackCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 40
      },
      "Awb0UnpackCmdPlacement": {
        "id": "Awb0Unpack",
        "priority": 20,
        "uiAnchor": "Awb0ExpandGroup"
      },
      "Awb0UnpackCtxMenuCmdPlacement": {
        "id": "Awb0UnpackCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 41
      },
      "Awb0PackAllCmdPlacement": {
        "id": "Awb0PackAll",
        "priority": 30,
        "uiAnchor": "Awb0ExpandGroup"
      },
      "Awb0UnpackAllCmdPlacement": {
        "id": "Awb0UnpackAll",
        "priority": 40,
        "uiAnchor": "Awb0ExpandGroup"
      },
      "awb0SetPinPlacement": {
        "id": "Awb0SetPin",
        "uiAnchor": "awb0_oneStepPinCommands",
        "priority": 100
      },
      "awb0SetUnPinPlacement": {
        "id": "Awb0SetUnPin",
        "uiAnchor": "awb0_oneStepPinCommands",
        "priority": 100
      },
      "Awb0GetLiveSearchResultCommandPlacement": {
        "id": "Awb0GetLiveSearchResultCommand",
        "uiAnchor": "aw_ICS",
        "priority": 180
      },
      "Awb0MoveUpCommandPlacement": {
        "id": "Awb0MoveUpCommand",
        "uiAnchor": "aw_ICS",
        "priority": 200
      },
      "Awb0MoveDownCommandPlacement": {
        "id": "Awb0MoveDownCommand",
        "uiAnchor": "aw_ICS",
        "priority": 300
      },
      "Awb0SelectAllCommandPlacement": {
        "id": "Awb0SelectAllCommand",
        "uiAnchor": "aw_ICS",
        "priority": 400
      },
      "addChildProductCommandPlacement-classic": {
        "id": "Awb0AddChildProductToSWC",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0AddElementGroupDeclarative"
      },
      "addChildProductCommandPlacement": {
        "id": "Awb0AddChildProductToSWC",
        "uiAnchor": "aw_rightWall",
        "priority": 15,
        "parentGroupId": "Awp0NewGroup"
      },
      "addChildElementCommandPlacement-classic": {
        "id": "Awb0AddChildElementDeclarative",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0AddElementGroupDeclarative"
      },
      "addChildElementCommandPlacement": {
        "id": "Awb0AddChildElementDeclarative",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 10,
        "parentGroupId": "Awb0AddGroup"
      },
      "Awb0AddSubstitutesCommandPlacement": {
        "id": "Awb0AddSubstitutesPWA",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 30,
        "parentGroupId": "Awb0AddGroup"
      },
      "insertLevelCommandPlacement": {
        "id": "Awb0InsertParentElement",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 44,
        "parentGroupId": "Awb0RestructureGroup"
      },
      "insertLevelCtxMenuCommandPlacement": {
        "id": "Awb0InsertParentElementCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 43
      },
      "addSiblingElementCommandPlacement-classic": {
        "id": "Awb0AddSiblingElementDeclarative",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0AddElementGroupDeclarative"
      },
      "addSiblingElementCommandPlacement": {
        "id": "Awb0AddSiblingElementDeclarative",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 20,
        "parentGroupId": "Awb0AddGroup"
      },
      "addSiblingProductToSWCCommandPlacement-classic": {
        "id": "Awb0AddSiblingProductToSWC",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0AddElementGroupDeclarative"
      },
      "addSiblingProductToSWCCommandPlacement": {
        "id": "Awb0AddSiblingProductToSWC",
        "uiAnchor": "aw_rightWall",
        "priority": 25,
        "parentGroupId": "Awp0NewGroup"
      },
      "replaceElementCommandPlacement-classic": {
        "id": "Awb0ReplaceElementDeclarative",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0ReplaceGroupCommand"
      },
      "replaceElementCommandPlacement": {
        "id": "Awb0ReplaceElementDeclarative",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 20,
        "parentGroupId": "Awb0RestructureGroup"
      },
      "replaceElementCtxMenuCmdPlacement": {
        "id": "Awb0ReplaceElementCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 42
      },
      "saveAsAndReplaceElementCommandPlacement-classic": {
        "id": "Awb0SaveAsAndReplaceElement",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0ReplaceGroupCommand"
      },
      "saveAsAndReplaceElementCommandPlacement": {
        "id": "Awb0SaveAsAndReplaceElement",
        "uiAnchor": "aw_rightWall",
        "priority": 660,
        "parentGroupId": "Awp0NewGroup"
      },
      "removeElementCommandPlacement": {
        "id": "Awb0RemoveElement",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 10,
        "parentGroupId": "Awb0RestructureGroup"
      },
      "removeLevelCommandPlacement": {
        "id": "Awb0RemoveLevel",
        "uiAnchor": "aw_primaryWorkAtea",
        "priority": 45,
        "parentGroupId": "Awb0RestructureGroup"
      },
      "removeElementCtxMenuCommandPlacement": {
        "id": "Awb0RemoveElementCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 45
      },
      "removeLevelCtxMenuCommandPlacement": {
        "id": "Awb0RemoveLevelCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 46
      },
      "occEffectivityCommandPlacement-classic": {
        "id": "Awb0OccurrenceEffectivity",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 50,
        "parentGroupId": "AceEffectivityGroup"
      },
      "occEffectivityCommandPlacement": {
        "id": "Awb0OccurrenceEffectivity",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 60,
        "parentGroupId": "Awb0AddGroup"
      },
      "Awb0GroupEffectivityCommandPlacement": {
        "id": "Awb0GroupEffectivity",
        "uiAnchor": "aw_navigate",
        "priority": 50
      },
      "revisionEffectivityCommandPlacement-classic": {
        "id": "Awb0ReleaseStatusEffectivity",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "AceEffectivityGroup"
      },
      "aceShowDuplicateCommandPlacement": {
        "id": "Awb0ShowDuplicate",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 101
      },
      "revisionEffectivityCommandPlacement": {
        "id": "Awb0ReleaseStatusEffectivity",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 70,
        "parentGroupId": "Awb0AddGroup"
      },
      "revisionEffectivityCommandInHomePlacement": {
        "id": "Awp0ReleaseStatusEffectivity",
        "uiAnchor": "aw_rightWall",
        "priority": 4,
        "parentGroupId": "Awp0ManageGroup"
      },
      "awb0StructureFilterCommandDisplay": {
        "id": "Awb0StructureFilterCommand",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 21
      },
      "aceSaveWorkingContextCommandPlacement": {
        "id": "Awb0SaveWorkingContext",
        "uiAnchor": "aw_rightWall",
        "priority": 120,
        "parentGroupId": "Awp0NewGroup"
      },
      "aceUpdateWorkingContextCommandPlacement-classic": {
        "id": "Awb0UpdateWorkingContext",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 100,
        "parentGroupId": "Awb0SaveWorkingContextGroup",
        "showGroupSelected": true
      },
      "aceUpdateWorkingContextCommandPlacement": {
        "id": "Awb0UpdateWorkingContext",
        "uiAnchor": "aw_rightWall",
        "priority": 110,
        "parentGroupId": "Awp0EditGroup",
        "showGroupSelected": true
      },
      "aceSaveAsWorkingContextCommandPlacement-classic": {
        "id": "Awb0SaveAsWorkingContext",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 200,
        "parentGroupId": "Awb0SaveWorkingContextGroup"
      },
      "aceSaveAsWorkingContextCommandPlacement": {
        "id": "Awb0SaveAsWorkingContext",
        "uiAnchor": "aw_rightWall",
        "priority": 35,
        "parentGroupId": "Awp0NewGroup"
      },
      "aceResetStructureCommandPlacement": {
        "id": "Awb0ResetStructure",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 9,
        "parentGroupId": "Awb0ConfigurationGroup"
      },
      "UnifiedInContextSearchCommandPlacement": {
        "id": "Awb0AceUnifiedInContextSearch",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 20
      },
      "AceShowChildrenCommandPlacement": {
        "id": "Awb0ShowChildOccurrences",
        "uiAnchor": "occmgmt_cell_commands",
        "priority": 1,
        "cellDisplay": {
          "position": "BOTTOM_RIGHT"
        }
      },
      "AceShowChildrenBreadcrumbCellCommandPlacement": {
        "id": "Awb0ShowChildOccurrencesFromBreadcrumb",
        "uiAnchor": "occmgmt_breadcrumb_cell_commands",
        "priority": 1,
        "cellDisplay": {
          "position": "BOTTOM_RIGHT"
        }
      },
      "Awb0AddEffectivityForRelnStatusCmdPlacement": {
        "id": "Awb0AddEffectivityForRelnStatusCmd",
        "uiAnchor": "awb0_displayAndRemoveEffectivityForRelnStatus",
        "priority": 1
      },
      "Awb0RemoveEffectivityForRelnStatusCmdPlacement": {
        "id": "Awb0RemoveEffectivityForRelnStatusCmd",
        "uiAnchor": "awb0_displayAndRemoveEffectivityForRelnStatus",
        "priority": 1
      },
      "Awb0AddGroupEffectivityCmdPlacement": {
        "id": "Awb0AddGroupEffectivityCmd",
        "uiAnchor": "awb0_commandGroupEffectivities",
        "relativeTo": "Awb0RemoveGroupEffectivityCmd",
        "priority": 1
      },
      "Awb0RemoveGroupEffectivityCmdPlacement": {
        "id": "Awb0RemoveGroupEffectivityCmd",
        "uiAnchor": "awb0_commandGroupEffectivities",
        "priority": 1
      },
      "Awb0AddEffectivitiesCmdPlacement": {
        "id": "Awb0AddEffectivitiesCmd",
        "uiAnchor": "awb0_commandDisplayAndRemoveEffectivity",
        "priority": 1
      },
      "Awb0RemoveEffectivitiesCmdPlacement": {
        "id": "Awb0RemoveEffectivitiesCmd",
        "uiAnchor": "awb0_commandDisplayAndRemoveEffectivity",
        "priority": 1
      },
      "Awb0ClearAllEffectivitiesCmdPlacement": {
        "id": "Awb0ClearAllEffectivitiesCmd",
        "uiAnchor": "awb0_commandDisplayAndRemoveEffectivity",
        "relativeTo": "Awb0RemoveEffectivitiesCmd",
        "priority": 1
      },
      "Awb0AddNewVariantRuleCmdPlacement": {
        "id": "Awb0AddNewVariantRuleCmd",
        "uiAnchor": "awb0_variantCommands",
        "priority": 1
      },
      "useSubstituteCmdPlacement": {
        "id": "Awb0UseSubstitute",
        "uiAnchor": "aw_objectSet_right",
        "priority": 20
      },
      "showMarkupCmdPlacement": {
        "id": "Awb0ShowMarkup",
        "uiAnchor": "aw_workArea_right",
        "priority": 21
      },
      "configurationFilterCommandPlacement": {
        "id": "Awb0ConfigurationFilter",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 8
      },
      "showIneffectiveCmdPlacement": {
        "id": "Awb0ShowUnconfiguredByOccEffectivity",
        "uiAnchor": "aw_primayWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 15
      },
      "showVariantsInCmdPlacement": {
        "id": "Awb0ShowUnconfiguredByVariants",
        "uiAnchor": "aw_primayWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 16
      },
      "showSuppressedCmdPlacement": {
        "id": "Awb0ShowSuppressed",
        "uiAnchor": "aw_primayWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 17
      },
      "Awb0SetInContextCmdPlacement": {
        "id": "Awb0SetInContext",
        "uiAnchor": "aw_primayWorkArea",
        "parentGroupId": "Awb0RestructureGroup",
        "priority": 51
      },
      "Awb0SetInContextCtxMenu": {
        "id": "Awb0SetInContextCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 50
      },
      "Awb0CBOSCmdPlacement": {
        "id": "Awb0CBOSCmd",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 12
      },
      "Awb0ConfigByProximityCmdPlacement": {
        "id": "Awb0ConfigByProximityCmd",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 13
      },
      "cancelMarkupLevelCmdPlacement": {
        "id": "Awb0CancelMarkupLevel",
        "uiAnchor": "Awb0MarkupAtLevelAnchor",
        "priority": 2
      },
      "cancelMarkupElementCmdPlacement": {
        "id": "Awb0CancelMarkupElement",
        "uiAnchor": "Awb0MarkupAtElementAnchor",
        "priority": 1
      },
      "expandBelowCommandPlacement": {
        "id": "Awb0ExpandBelow",
        "uiAnchor": "Awb0ExpandGroup",
        "priority": 41
      },
      "expandBelowCtxMenuCommandPlacement": {
        "id": "Awb0ExpandBelowCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 38
      },
      "collapseBelowCommandPlacement": {
        "id": "Awb0CollapseBelow",
        "uiAnchor": "Awb0ExpandGroup",
        "priority": 42
      },
      "collapseBelowCtxMenuCommandPlacement": {
        "id": "Awb0CollapseBelowCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 39
      },
      "Awb0ExpandCommandPlacement": {
        "id": "Awb0Expand",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 23
      },
      "applyMarkupCmdPlacement": {
        "id": "Awb0ApplyMarkup",
        "uiAnchor": "Awb0MarkupAtLevelAnchor",
        "priority": 1
      },
      "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivityPlacement2": {
        "id": "fakeCommandToForceServerVisibilityAwb0ViewElementEffectivity",
        "uiAnchor": "aw_rightWall",
        "priority": 0
      },
      "Awb0AceReferenceContextMenuPlacement": {
        "id": "Awb0AceReferenceContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 102
      },
      "Awb0AceCloneContextMenuPlacement": {
        "id": "Awb0AceCloneCommand",
        "uiAnchor": "aw_contextMenu2",
        "priority": 106
      },
      "Awb0AceReviseContextMenuPlacement": {
        "id": "Awb0AceReviseContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 102
      },
      "Awb0AceReplaceContextMenuPlacement": {
        "id": "Awb0AceReplaceContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 105
      },
      "Awb0AceRemoveContextMenuPlacement": {
        "id": "Awb0AceRemoveContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 104
      },
      "Awb0AceCloneBelowContextMenuPlacement": {
        "id": "Awb0AceCloneBelowCommand",
        "uiAnchor": "aw_contextMenu2",
        "priority": 108
      },
      "Awb0AddGroupCommandPlacement": {
        "id": "Awb0AddGroup",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 18
      },
      "Awb0RestructureGroupCommandPlacement": {
        "id": "Awb0RestructureGroup",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 19
      },
      "Awb0ConfigurationGroupCommandPlacement": {
        "id": "Awb0ConfigurationGroup",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 22
      },
      "removeOverrideCommandPlacement": {
        "id": "Awb0RemoveOverride",
        "uiAnchor": "aw_Override",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_CENTER",
          "selected": true
        }
      },
      "Awb0AceCloneCommandPlacement": {
        "id": "Awb0AceCloneCommand",
        "uiAnchor": "aw_rightWall",
        "priority": 650,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awb0AceCloneBelowCommandPlacement": {
        "id": "Awb0AceCloneBelowCommand",
        "uiAnchor": "aw_rightWall",
        "priority": 700,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awb0SaveVariantRuleCommandPlacement": {
        "id": "Awb0SaveVariantRule",
        "uiAnchor": "awb_variantConfigurationCommandBar",
        "priority": 100
      },
      "Awb0SaveAsVariantRuleCommandPlacement": {
        "id": "Awb0SaveAsVariantRule",
        "uiAnchor": "awb_variantConfigurationCommandBar",
        "priority": 200
      },
      "Awb0EffectivityCellCommandPlacement": {
        "id": "Awb0EditEffectivity",
        "uiAnchor": "occmgmt_effectivity_cell_commands",
        "priority": 100,
        "cellDisplay": {
          "hover": true,
          "selected": true,
          "position": "TOP_RIGHT"
        }
      },
      "Awb0ExpressionEffectivityPlacement": {
        "id": "Awb0ExpressionEffectivity",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 60,
        "parentGroupId": "Awb0AddGroup"
      },
      "awb0AddRevisionPlacement": {
        "id": "Awb0AddRevision",
        "uiAnchor": "aw_addRevision",
        "priority": 260
      },
      "awb0RemoveRevisionPlacement": {
        "id": "Awb0RemoveRevision",
        "uiAnchor": "aw_addRevision",
        "priority": 250
      },
      "Awb0ImportFromExcelCommandPlacement": {
        "id": "Awb0ImportFromExcel",
        "uiAnchor": "aw_rightWall",
        "priority": 500,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awb0AceImportPreviewOverwriteContextMenuPlacement": {
        "id": "Awb0ImportPreviewAceOverwriteContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 105
      },
      "Awb0AceImportPreviewReviseContextMenuPlacement": {
        "id": "Awb0AceImportPreviewReviseContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 105
      },
      "Awb0AceImportPreviewReferenceContextMenuPlacement": {
        "id": "Awb0AceImportPreviewReferenceContextMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 105
      },
      "Awb0AddChildRMBMenuCommandPlacement": {
        "id": "Awb0AddChildRow",
        "uiAnchor": "aw_contextMenu2",
        "priority": 20
      },
      "Awb0AddSiblingRMBMenuCommandPlacement": {
        "id": "Awb0AddSiblingRow",
        "uiAnchor": "aw_contextMenu2",
        "priority": 20
      },
      "Awb0SaveRMBMenuCommandPlacement": {
        "id": "Awb0SaveRow",
        "uiAnchor": "aw_workArea_right",
        "priority": 20
      },
      "Awb0RemoveRMBMenuCommandPlacement": {
        "id": "Awb0RemoveAllRows",
        "uiAnchor": "aw_workArea_right",
        "priority": 15
      },
      "Awb0AddRefCommandPlacement": {
        "id": "Awb0AddRef",
        "uiAnchor": "aw_editActionCell",
        "priority": 30
      },
      "Awb0RemoveRowTableCommandPlacement": {
        "id": "Awb0RemoveRow",
        "uiAnchor": "occmgmt_cell_commands",
        "priority": 30
      },
      "Awb0RemoveRowTreeCommandPlacement": {
        "id": "Awb0RemoveRow",
        "uiAnchor": "occmgmt_tree_cell_commands",
        "priority": 30
      },
      "awb0OpenInViewCommandPlacement": {
        "id": "awb0OpenInViewCommand",
        "uiAnchor": "aw_workArea_right"
      },
      "awb0SplitCommandPlacement": {
        "id": "awb0SplitRootCmd",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awp0ModelObjListDisplayToggles",
        "priority": 130
      },
      "Awb0CreateSessionPlacement": {
        "id": "Awb0CreateSessionCommand",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0NewGroup",
        "priority": 100,
        "relativeTo": "Awb0SaveWorkingContext"
      },
      "Awb0SaveAsSessionPlacement": {
        "id": "awb0SaveAsSession",
        "uiAnchor": "aw_workArea_right",
        "parentGroupId": "Awb0SessionGroup",
        "priority": 20
      },
      "Awb0SaveSessionCommandPlacement": {
        "id": "Awb0SaveSession",
        "uiAnchor": "aw_workArea_right",
        "priority": 1140,
        "relativeTo": "Awb0SessionGroup"
      },
      "Awb0SessionGroupCommandPlacement": {
        "id": "Awb0SessionGroup",
        "uiAnchor": "aw_workArea_right",
        "priority": 22
      },
      "Awb0ReplayCommandPlacement": {
        "id": "Awb0ReplaySession",
        "uiAnchor": "aw_workArea_right",
        "parentGroupId": "Awb0SessionGroup",
        "priority": 10
      },
      "Awb0ResetCommandPlacement": {
        "id": "Awb0ResetSession",
        "uiAnchor": "aw_workArea_right",
        "parentGroupId": "Awb0SessionGroup",
        "priority": 15
      },
      "Awb0CreateWorksetPlacement": {
        "id": "Awb0CreateWorksetCommand",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 28,
        "parentGroupId": "Awb0AddGroup"
      },
      "includeCtxMenuCommandPlacement": {
        "id": "Awb0IncludeCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 40
      },
      "excludeCtxMenuCommandPlacement": {
        "id": "Awb0ExcludeCtxMenu",
        "uiAnchor": "aw_contextMenu2",
        "priority": 41,
        "relativeTo": "Awb0IncludeCtxMenu"
      },
      "Awb0FilterSettingsCommandPlacement": {
        "id": "Awb0FilterSettings",
        "uiAnchor": "filterSettingsSlot",
        "priority": 10
      },
      "Awb0RecipeClearAllCommandPlacement": {
        "id": "Awb0RecipeClearAll",
        "uiAnchor": "recipeCommandSlot",
        "priority": 20
      },
      "applyProductSnapshotCellCommandPlacement": {
        "id": "applyProductSnapshotCommand",
        "parentGroupId": "Awv0ProductSnapshotListCommand",
        "priority": 1
      },
      "applyProductSnapshotThumbnailPlacement": {
        "id": "applyProductSnapshotCommand",
        "uiAnchor": "aw_3dSnapshotThumbnailViewCommands",
        "priority": 2
      },
      "Awb0ReplayWorksetCommandPlacement": {
        "id": "Awb0ReplayWorkset",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awb0ConfigurationGroup",
        "priority": 11,
        "relativeTo": "Awb0ResetStructure"
      },
      "Ac0ShowObjectDiscussionCommandPlacement": {
        "id": "Ac0ShowObjectCommand",
        "uiAnchor": "aw_ProductSnapshotOnDiscussion2",
        "priority": 10
      },
      "Awb0SaveWorksetCommandPlacement": {
        "id": "Awb0SaveWorkset",
        "uiAnchor": "aw_workArea_right",
        "priority": 22
      },
      "Awb0EntCBALaunchAlignTaskCommandPlacement": {
        "id": "Awb0EntCBALaunchAlignTask",
        "uiAnchor": "aw_rightWall",
        "parentGroupId": "Awp0ViewGroup"
      },
      "Awb0EntCBAAlignCommandPlacement": {
        "id": "Awb0EntCBAAlignCommand",
        "uiAnchor": "alignmentSlot"
      },
      "Awb0EntCBAUnAlignCommandPlacement": {
        "id": "Awb0EntCBAUnAlignCommand",
        "uiAnchor": "alignmentSlot"
      },
      "Awb0EntCBAAlignmentCheckCommandPlacement": {
        "id": "Awb0EntCBAAlignmentCheck",
        "uiAnchor": "AlignmentCheckSlot",
        "priority": 10
      },
      "Awb0EntCBAAlignmentCheckSettingsCommandPlacement": {
        "id": "Awb0EntCBAAlignmentCheckSettings",
        "uiAnchor": "AlignmentCheckSlot"
      },
      "Awb0EntCBAOpenGroupCommandPlacement": {
        "id": "Awb0EntCBAOpenGroup",
        "uiAnchor": "aw_primaryWorkArea"
      },
      "Awb0EntCBAOpenObjectCommandPlacement": {
        "id": "Awb0EntCBAOpenObject",
        "parentGroupId": "Awb0EntCBAOpenGroup"
      },
      "Awb0EntCBAOpenInNewWindowCommandPlacement": {
        "id": "Awb0EntCBAOpenInNewWindow",
        "parentGroupId": "Awb0EntCBAOpenGroup"
      },
      "Awb0EntCBAOpenInNewTabCommandPlacement": {
        "id": "Awb0EntCBAOpenInNewTab",
        "parentGroupId": "Awb0EntCBAOpenGroup"
      },
      "Awb0EntCBAOpenAlignmentViewCommandPlacement": {
        "id": "Awb0EntCBAOpenAlignmentView",
        "parentGroupId": "Awb0EntCBAAlignGroup",
        "priority": 5,
        "uiAnchor": "aw_primaryWorkArea"
      },
      "Awb0EntCBAAlignGroupCommandPlacement": {
        "id": "Awb0EntCBAAlignGroup",
        "uiAnchor": "aw_primaryWorkArea",
        "relativeTo": "Awb0CompareGroup",
        "priority": 1
      },
      "Awb0EntCBADeselectAllCommandPlacement": {
        "id": "Awb0EntCBADeselectAll",
        "uiAnchor": "cbaToolbarRightSlot"
      },
      "Awb0FindAlignedCommandPlacement": {
        "id": "Awb0FindAligned",
        "uiAnchor": "aw_contextMenu2",
        "priority": 1
      },
      "RevisionRuleClauseUpCommandPlacement": {
        "id": "RevisionRuleClauseUp",
        "uiAnchor": "clausesCommandAnchor",
        "priority": 100
      },
      "RevisionRuleClauseDownCommandPlacement": {
        "id": "RevisionRuleClauseDown",
        "uiAnchor": "clausesCommandAnchor",
        "priority": 200
      },
      "RevisionRuleClauseDeleteCommandPlacement": {
        "id": "RevisionRuleClauseDelete",
        "uiAnchor": "clausesCommandAnchor",
        "priority": 300
      },
      "RevisionRuleClauseAddCommandPlacement": {
        "id": "RevisionRuleClauseAdd",
        "uiAnchor": "clausesCommandAnchor",
        "priority": 400
      },
      "RevisionRuleAdminAddCommandPlacement": {
        "id": "RevisionRuleAdminAdd",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 100
      },
      "RevisionRuleAdminDeleteCommandPlacement": {
        "id": "RevisionRuleAdminDelete",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 200
      },
      "RevisionRuleAdminCommandPlacement": {
        "id": "RevisionRuleAdmin",
        "uiAnchor": "occmgmt_revrule_admin_cell_commands",
        "priority": 1,
        "cellDisplay": {
          "hover": true,
          "selected": true,
          "position": "BOTTOM_RIGHT"
        }
      },
      "ClausePropertyAddCommandPlacement": {
        "id": "ClausePropertyAdd",
        "uiAnchor": "clausePropertiesCommandAnchor",
        "priority": 100
      },
      "AddClausePropertyCommandPlacement": {
        "id": "AddClauseProperty",
        "uiAnchor": "addClausePropertiesCommandAnchor",
        "priority": 100
      },
      "ClausePropertyRemoveCommandPlacement": {
        "id": "ClausePropertyRemove",
        "uiAnchor": "clausePropertiesCommandAnchor",
        "priority": 200
      },
      "RemoveClausePropertyCommandPlacement": {
        "id": "RemoveClauseProperty",
        "uiAnchor": "addClausePropertiesCommandAnchor",
        "priority": 200
      },
      "ClausePropertyReplaceCommandPlacement": {
        "id": "ClausePropertyReplace",
        "uiAnchor": "clausePropertiesCommandAnchor",
        "priority": 300
      },
      "ReplaceClausePropertyCommandPlacement": {
        "id": "ReplaceClauseProperty",
        "uiAnchor": "addClausePropertiesCommandAnchor",
        "priority": 300
      },
      "Awb0AddPartitionPlacement": {
        "id": "Awb0AddPartition",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awb0Partition",
        "priority": 15
      },
      "Awb0UnassignedCmdPlacement": {
        "id": "Awb0Unassigned",
        "uiAnchor": "aw_primaryWorkArea",
        "parentGroupId": "Awb0Partition",
        "priority": 200
      },
      "Awb0PartitionCmdPlacement": {
        "id": "Awb0Partition",
        "uiAnchor": "aw_primaryWorkArea",
        "relativeTo": "Awb0Expand",
        "priority": 1
      },
      "Awb0PreviewSolutionVariantCommandPlacement": {
        "id": "Awb0PreviewSolutionVariant",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 102
      }
    },
    "actions": {
      "SaveEditVCA2TableACE": {
        "actionType": "JSFunction",
        "method": "saveEditVCA2TableACE",
        "deps": "js/variantConditionService",
        "inputData": {
          "data": "{{commandContext}}"
        }
      },
      "checkForEditsAndAcePasteContentsFromClipboard": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "acePasteContentsFromClipboard"
          }
        ]
      },
      "getEffectivityPropertiesForEditAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{commandContext.vmo}}"
          ],
          "attributes": [
            "effectivity_dates",
            "effectivity_id",
            "effectivity_protection",
            "effectivity_units",
            "end_item",
            "end_item_rev",
            "range_text"
          ]
        },
        "outputData": {
          "ctx.editEffectivityContext.responseObjects": "modelObjects"
        },
        "events": {
          "success": [
            {
              "name": "launchEditEffectivityPanel"
            }
          ]
        },
        "deps": "js/editEffectivityCommandHandler"
      },
      "aceSaveAsorReviseContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false
        },
        "events": {
          "success": [
            {
              "name": "SaveAsReviseWorkSpaceAdaptSuccessful"
            }
          ]
        }
      },
      "acePasteContentsFromClipboard": {
        "actionType": "JSFunction",
        "method": "acePasteObjectsFromClipboard",
        "deps": "js/aceDefaultPasteHandler",
        "events": {
          "success": [
            {
              "name": "ace.pasteSuccessful"
            }
          ]
        }
      },
      "aceCutContentsToClipboard": {
        "actionType": "JSFunction",
        "method": "aceCutContentsToClipboard",
        "inputData": {
          "objectToCut": "{{ctx.mselected}}"
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleSuccessful"
            }
          ]
        },
        "deps": "js/aceDefaultCutCopyService"
      },
      "separateElementToDistinctElements": {
        "actionType": "JSFunction",
        "method": "getSeperateQuantityAndPrepareAddInput",
        "events": {
          "success": [
            {
              "name": "split.splitStarted"
            }
          ]
        },
        "deps": "js/addElementService"
      },
      "showExpandOptions": {
        "actionType": "popup",
        "inputData": {
          "view": "Awb0ExpandOptions"
        }
      },
      "updateSelectedElementQuantity": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2010-09-DataManagement",
        "method": "setProperties",
        "inputData": {
          "info": [
            {
              "object": "{{ctx.selected}}",
              "vecNameVal": [
                {
                  "name": "awb0Quantity",
                  "values": [
                    "{{}}"
                  ]
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "ace.performSeparateElementsAction"
            }
          ]
        },
        "deps": "js/addElementService"
      },
      "postRemoveAttachmentCleanupAction": {
        "actionType": "JSFunction",
        "method": "postRemoveAttachmentCleanupAction",
        "deps": "js/aceInContextOverrideService"
      },
      "acePostPasteAction": {
        "actionType": "JSFunction",
        "method": "acePostPasteAction",
        "deps": "js/aceDefaultCutCopyService"
      },
      "copyInMarkupMode": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/aceCopyInMarkupModeService",
        "inputData": {
          "objectToCopy": "{{ctx.mselected}}"
        }
      },
      "aceSeparateElementsAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
        "method": "addObject2",
        "inputData": {
          "input": {
            "objectsToBeAdded": [
              "{{ctx.selected}}"
            ],
            "parentElement": "{{ctx.aceActiveContext.context.addElement.parent}}",
            "siblingElement": "{{ctx.selected}}",
            "inputCtxt": {
              "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}"
            },
            "sortCriteria": {
              "propertyName": "",
              "sortingOrder": ""
            },
            "addObjectIntent": "SplitIntent",
            "fetchPagedOccurrences": "{{ctx.aceActiveContext.context.addElement.fetchPagedOccurrences}}",
            "requestPref": {
              "displayMode": [
                "{{function:getDisplayMode}}"
              ]
            },
            "numberOfElements": "{{ctx.aceActiveContext.context.addElement.seperateQuantity}}"
          }
        },
        "outputData": {
          "addElementResponse": "",
          "totalObjectsAdded": "{{function:getTotalNumberOfChildrenAdded}}"
        },
        "events": {
          "success": [
            {
              "name": "addElement.elementsAdded",
              "eventData": {
                "objectsToSelect": "{{function:getNewChildElements}}",
                "addElementResponse": "{{data.addElementResponse}}",
                "viewToReact": "{{ctx.aceActiveContext.key}}"
              },
              "condition": "data.totalObjectsAdded>0"
            },
            {
              "name": "acePwa.reset",
              "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
            }
          ],
          "failure": [
            {
              "name": "addElement.elementsAdded",
              "eventData": {
                "objectsToSelect": "{{function:getNewChildElements}}",
                "addElementResponse": "{{data.addElementResponse}}",
                "viewToReact": "{{ctx.aceActiveContext.key}}"
              },
              "condition": "data.totalObjectsAdded>0 && (ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
            }
          ]
        },
        "deps": "js/addElementService"
      },
      "awb0SetPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addChildElement.awb0SetPin",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "awb0SetUnPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addChildElement.awb0SetUnPin",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "checkForEditsAndPackElements": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "acePackElements"
          }
        ]
      },
      "acePackElements": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.acePackElementsAction"
            }
          ]
        }
      },
      "acePackElementsAction": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.packMode",
          "value": 0
        },
        "events": {
          "success": [
            {
              "name": "perform.packSimilarElements"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "checkForEditsAndUnpackElements": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "aceUnpackElements"
          }
        ]
      },
      "aceUnpackElements": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.aceUnpackElementsAction"
            }
          ]
        }
      },
      "aceUnpackElementsAction": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.packMode",
          "value": 1
        },
        "events": {
          "success": [
            {
              "name": "perform.packSimilarElements"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "packSimilarElements": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2019-06-OccurrenceManagement",
        "method": "packSimilarElements",
        "inputData": {
          "input": {
            "packMode": "{{ctx.aceActiveContext.context.packMode}}",
            "elements": "{{function:getSelections}}",
            "inputCtxt": {
              "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}",
              "requestPref": {
                "displayMode": [
                  "{{function:getTreeOrListDisplayMode}}"
                ],
                "selectedElementUids": "{{function:getSelectedUids}}"
              }
            },
            "sortCriteria": {
              "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
              "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
            }
          }
        },
        "outputData": {
          "packedElementsFromResponse": "{{function:getPackedElements}}",
          "ctx.aceActiveContext.context.packUnpackResponseParentChildInfo": "result.parentChildrenInfos",
          "deletedElements": "result.ServiceData.deleted"
        },
        "events": {
          "success": [
            {
              "name": "tree.postProcessPackUnpackResponse",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
            },
            {
              "name": "aceElementsDeSelectedEvent",
              "eventData": {
                "elementsToDeselect": "{{data.packedElementsFromResponse}}"
              },
              "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && ( ctx.aceActiveContext.context.packMode === 0 )"
            },
            {
              "name": "acePwa.reset",
              "condition": "!(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
            },
            {
              "name": "hideExpandOptionsPopup"
            }
          ]
        },
        "deps": "js/packSimilarElementsService"
      },
      "postProcessPackUnpackResponse": {
        "actionType": "JSFunction",
        "method": "postProcessPackUnpackResponse",
        "inputData": {
          "response": {
            "parentChildrenInfos": "{{ctx.aceActiveContext.context.packUnpackResponseParentChildInfo}}"
          }
        },
        "events": {
          "success": [
            {
              "name": "tree.packUnpackSuccessful"
            }
          ]
        },
        "deps": "js/packSimilarElementsService"
      },
      "acePackAllElements": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.acePackAllElementsAction"
            }
          ]
        }
      },
      "acePackAllElementsAction": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.packAllMode",
          "value": true
        },
        "events": {
          "success": [
            {
              "name": "perform.packAllSimilarElements"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "aceUnpackAllElements": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.aceUnpackAllElementsAction"
            }
          ]
        }
      },
      "aceUnpackAllElementsAction": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.packAllMode",
          "value": false
        },
        "events": {
          "success": [
            {
              "name": "perform.packAllSimilarElements"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "packAllSimilarElements": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.configContext",
          "value": {
            "packSimilarElements": "{{ctx.aceActiveContext.context.packAllMode}}",
            "startFreshNavigation": true
          }
        },
        "events": {
          "success": [
            {
              "name": "updateContextInfo",
              "eventData": {
                "path": "aceActiveContext.context.transientRequestPref",
                "value": {
                  "addUpdatedFocusOccurrence": true,
                  "jitterFreePropLoad": true
                }
              }
            },
            {
              "name": "hideExpandOptionsPopup"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "updateValueOnCtxWithProvidedValue": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "{{data.eventData.path}}",
          "value": "{{data.eventData.value}}"
        },
        "deps": "js/appCtxService"
      },
      "selectAllNavigateResults": {
        "actionType": "JSFunction",
        "method": "toggleSelectAllResults",
        "deps": "js/navigateSearchService",
        "inputData": {
          "data": "{{commandContext}}"
        }
      },
      "moveDownInList": {
        "actionType": "JSFunction",
        "method": "moveUpDown",
        "deps": "js/navigateSearchService",
        "inputData": {
          "data": "{{commandContext}}",
          "moveTo": "Down"
        }
      },
      "moveUpInList": {
        "actionType": "JSFunction",
        "method": "moveUpDown",
        "deps": "js/navigateSearchService",
        "inputData": {
          "data": "{{commandContext}}",
          "moveTo": "Up"
        }
      },
      "getLiveSearchResult": {
        "actionType": "JSFunction",
        "method": "getLiveSearchResult",
        "deps": "js/navigateSearchService",
        "inputData": {
          "data": "{{commandContext}}"
        }
      },
      "launchRevisionEffectivityPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ReleaseStatusEffectivity",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchRevisionEffectivityInHomePanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ReleaseStatusEffectivity",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchOccEffectivityPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0OccurrenceEffectivity",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchViewOccEffectivityPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ViewOccurrenceEffectivity",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchAddGroupEffectivityPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "AddGroupEffectivity",
                "title": "{{i18n.addGroupEffectivity}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "removeGroupEffectivityAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "removeGroupEffectivities",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "launchAddChildProductToSWCPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddChildProductToSWC",
          "location": "aw_toolsAndInfo"
        }
      },
      "checkForEditsAndLaunchAddPanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "launchAddChildElementPanel"
          }
        ]
      },
      "showLeaveConfirmation": {
        "actionType": "JSFunction",
        "method": "leaveConfirmation",
        "inputData": {},
        "events": {},
        "deps": "js/editHandlerService"
      },
      "launchAddChildElementPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddChildElementDeclarative",
          "location": "aw_toolsAndInfo"
        }
      },
      "checkForEditsAndLaunchSiblingPanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "launchAddSiblingElementPanel"
          }
        ]
      },
      "launchAddSiblingElementPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddSiblingElementDeclarative",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchAddSiblingProductToSWCPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddSiblingProductToSWC",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchStructureFilterPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.launchStructureFilterPanelAction"
            }
          ]
        }
      },
      "launchStructureFilterPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0StructureFilterCommand",
          "location": "aw_navigation"
        }
      },
      "checkForEditsAndLaunchReplaceElementPanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "launchReplaceElementPanel"
          }
        ]
      },
      "launchReplaceElementPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ReplaceElementDeclarative",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchSaveAsAndReplace": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0SaveAsAndReplaceElement",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchSaveSWCPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0SaveWorkingContext",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchSaveAsSWCPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0SaveAsWorkingContext",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchUpdateSWCPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0UpdateWorkingContext",
          "location": "aw_toolsAndInfo"
        }
      },
      "launchConfigurationPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.launchConfigurationPanelAction"
            }
          ]
        }
      },
      "launchConfigurationPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ConfigurationFilter",
          "location": "aw_navigation"
        }
      },
      "checkForEditsAndShowConfirmationMessageForRemove": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "showConfirmationMessageForRemove"
          }
        ]
      },
      "showConfirmationMessageForRemove": {
        "actionType": "JSFunction",
        "method": "getDisplayName",
        "deps": "js/typeDisplayName.service",
        "inputData": {
          "modelObject": "{{ctx.selected}}"
        },
        "outputData": {
          "displayNameOfSelectedElement": ""
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.mselected.length === 1",
              "message": "removeSingle"
            },
            {
              "condition": "ctx.mselected.length > 1",
              "message": "removeMultiple"
            }
          ]
        }
      },
      "checkForEditsAndShowConfirmationMessageForRemoveLevel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "showConfirmationMessageForRemoveLevel"
          }
        ]
      },
      "showConfirmationMessageForRemoveLevel": {
        "actionType": "JSFunction",
        "method": "getDisplayNamesForRemoveLevel",
        "deps": "js/removeElementService",
        "inputData": {
          "modelObject": "{{ctx.selected}}"
        },
        "outputData": {
          "displayNames": ""
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.mselected.length === 1",
              "message": "removeSingleLevel"
            }
          ]
        }
      },
      "showConfirmationMessageForReset": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.showConfirmationMessageForResetAction"
            }
          ]
        }
      },
      "showConfirmationMessageForResetAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "aceReset.dummyEvent"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1'",
              "message": "reset"
            },
            {
              "condition": "!(ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1')",
              "message": "resetOutsideSWC"
            }
          ]
        }
      },
      "launchUnifiedNavigationPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.launchUnifiedNavigationPanelAction"
            }
          ]
        }
      },
      "launchUnifiedNavigationPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AceUnifiedInContextSearch",
          "location": "aw_navigation",
          "context": {},
          "push": true,
          "closeWhenCommandHidden": false
        }
      },
      "performResetOfStructure": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.transientRequestPref",
          "value": {
            "savedSessionMode": "reset",
            "calculateFilters": true,
            "jitterFreePropLoad": true
          }
        },
        "events": {
          "success": [
            {
              "name": "updateContextInfo",
              "eventData": {
                "path": "aceActiveContext.context.selectedModelObjects",
                "value": {}
              }
            },
            {
              "name": "ace.resetStructureStarted"
            },
            {
              "name": "ace.resetStructureFreshNavigation"
            },
            {
              "name": "ace.resetStructureClearRecipe"
            },
            {
              "name": "ace.resetStructure"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "resetStructure": {
        "actionType": "JSFunction",
        "method": "updateContextState",
        "inputData": {
          "contextKey": "{{ctx.aceActiveContext.key}}",
          "newState": {
            "uid": "{{ctx.aceActiveContext.context.currentState.uid}}",
            "page": "{{ctx.aceActiveContext.context.currentState.page}}",
            "pageId": "{{ctx.aceActiveContext.context.currentState.pageId}}"
          },
          "mergeWithCurrentState": false
        },
        "events": {
          "success": [
            {
              "name": "ace.ResetContentEvent"
            }
          ]
        },
        "deps": "js/contextStateMgmtService"
      },
      "showChildrenFromPwaAction": {
        "actionType": "JSFunction",
        "method": "showChildOccurences",
        "inputData": {
          "vmo": "{{commandContext.vmo}}",
          "contextKey": "{{function:getContextKeyFromParentScope}}"
        },
        "deps": "js/showChildOccsCommandHandler"
      },
      "showChildrenFromBreadcrumbAction": {
        "actionType": "JSFunction",
        "method": "showChildOccurences",
        "inputData": {
          "vmo": "{{commandContext.vmo}}",
          "contextKey": "{{function:getContextKeyFromBreadcrumbConfig}}"
        },
        "deps": "js/showChildOccsCommandHandler"
      },
      "awb0ReleaseStatusPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "AddReleaseStatusEffectivities",
                "title": "{{i18n.addEffectivities}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "awb0RemoveEffectivityForRelnAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "removeEffectivitiesForRelnEvent",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "awb0AddEffectivitiesPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "AddEffectivities",
                "title": "{{i18n.addEffectivities}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "showConfirmationMessageForClearAll": {
        "actionType": "JSFunction",
        "method": "getDisplayName",
        "deps": "js/typeDisplayName.service",
        "inputData": {
          "modelObject": "{{ctx.mselected}}"
        },
        "outputData": {
          "displayNameOfSelectedElement": ""
        },
        "actionMessages": {
          "success": [
            {
              "message": "ClearAllEffectivities"
            }
          ]
        }
      },
      "awb0RemoveEffectivitiesAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "removeEffectivitiesEvent",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "removeElements": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2021-12-OccurrenceManagement",
        "method": "removeElements2",
        "inputData": {
          "input": "{{function:getRemoveElements2Input}}"
        },
        "outputData": {
          "removedElementsFromResponse": "{{function:getRemovedElements}}",
          "removePartialErrors": "partialErrors",
          "errorMessage": "{{function:processPartialErrors}}"
        },
        "events": {
          "success": [
            {
              "name": "performPostRemoveAction"
            }
          ],
          "failure": [
            {
              "name": "performPostRemoveAction"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "removeFailure"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "removeMultipleFailureMessage"
            }
          ]
        },
        "deps": "js/removeElementService"
      },
      "removeLevels": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-12-OccurrenceManagement",
        "method": "removeLevel",
        "inputData": {
          "inputData": {
            "elementsToRemoveLevel": "{{ctx.mselected}}",
            "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}",
            "sortCriteria": {
              "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
              "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
            }
          }
        },
        "outputData": {
          "removedLevelElementsFromResponse": ""
        },
        "events": {
          "success": [
            {
              "name": "performPostRemoveLevelAction"
            }
          ],
          "failure": [
            {
              "name": "performPostRemoveLevelAction"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "removeLevelSuccessfulMessage"
            }
          ],
          "failure": [
            {
              "message": "removeLevelFailure"
            }
          ]
        },
        "deps": "js/removeElementService"
      },
      "performPostRemoveAction": {
        "actionType": "JSFunction",
        "method": "performPostRemoveAction",
        "inputData": {
          "removedElements": "{{data.removedElementsFromResponse}}",
          "operationName": "removeElement"
        },
        "deps": "js/removeElementService"
      },
      "performPostRemoveLevelAction": {
        "actionType": "JSFunction",
        "method": "performPostRemoveLevelAction",
        "inputData": {
          "removedElements": "{{data.removedLevelElementsFromResponse}}",
          "operationName": "removeLevel"
        },
        "deps": "js/removeElementService"
      },
      "awb0AddNewVariantRuleCmdAction": {
        "actionType": "JSFunction",
        "method": "publishAddNewVariantRuleEvent",
        "deps": "js/variantInfoConfigurationService"
      },
      "checkForEditsAndLaunchAddSubstitutesPanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "launchAddSubstitutesPanel"
          }
        ]
      },
      "launchAddSubstitutesPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddSubstitutes",
          "location": "aw_toolsAndInfo"
        }
      },
      "CheckForEditsAndLaunchInsertLevelPanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showLeaveConfirmation",
            "condition": "conditions.isACEPWAEditInProgressInTreeOrTable"
          },
          {
            "action": "getInfoForInsertLevelAndLaunchInsertLevelPanel"
          }
        ]
      },
      "getInfoForInsertLevelAndLaunchInsertLevelPanel": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-12-OccurrenceManagement",
        "method": "getInfoForInsertLevel",
        "inputData": {
          "getInfoForInsertLevelIn": {
            "elementsToBeReparented": "{{function:populateInsertLevelInputInformation}}",
            "fetchAllowedOccRevTypes": false
          }
        },
        "outputData": {
          "insertLevelResponse": "",
          "allowedTypeInfo": "{{function:extractAllowedTypesInfoFromResponse}}"
        },
        "events": {
          "success": [
            {
              "name": "insertLevel.launchInsertLevelPanel"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "insertLevelResponse.ServiceData.partialErrors[0].errorValues[0].code==126006",
              "message": "getInfoForInsertLevelFailure"
            }
          ]
        },
        "deps": "js/insertElementService"
      },
      "launchInsertLevelPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0InsertLevel",
          "location": "aw_toolsAndInfo"
        }
      },
      "removeSubstitutes": {
        "actionType": "JSFunction",
        "method": "removeSubstitutes",
        "inputData": {
          "selectedObject": "{{ctx.pselected}}",
          "selectedSubstitutes": "{{ctx.mselected}}"
        },
        "outputData": {},
        "deps": "js/substitutesService"
      },
      "applyMarkup": {
        "actionType": "JSFunction",
        "method": "applyMarkupPreProcessing",
        "inputData": {
          "data": "{{data}}"
        },
        "outputData": {},
        "deps": "js/showMarkupService",
        "events": {
          "success": [
            {
              "name": "awb0Markup.ApplyMarkupSOA"
            }
          ]
        }
      },
      "applyMarkupSOA": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2018-12-Markup",
        "method": "applyMarkup",
        "inputData": {
          "input": [
            {
              "element": {
                "uid": "{{ctx.selected.uid}}",
                "type": "{{ctx.selected.type}}"
              },
              "recursive": false,
              "evaluate": false
            }
          ]
        },
        "outputData": {
          "noOfObjectsCreatedOrReplaced": "{{function:setSourceAndTargetElements}}"
        },
        "events": {
          "success": [
            {
              "name": "ace.replaceRowsInTree",
              "eventData": {
                "targetUids": "{{data.targetUids}}",
                "srcUids": "{{data.srcUids}}"
              },
              "condition": "data.noOfObjectsCreatedOrReplaced > 0 && ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
            },
            {
              "name": "reRenderTableOnClient",
              "condition": "data.noOfObjectsCreatedOrReplaced === 0 && ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
            },
            {
              "name": "awb0ApplyMarkup.success",
              "condition": "!ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
            },
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selected}}",
                  "{{ctx.pselected}}"
                ],
                "refreshLocationFlag": true
              }
            }
          ]
        },
        "deps": "js/showMarkupService"
      },
      "cancelMarkupLevel": {
        "actionType": "JSFunction",
        "method": "getDisplayName",
        "deps": "js/typeDisplayName.service",
        "inputData": {
          "modelObject": "{{ctx.mselected[0]}}"
        },
        "outputData": {
          "displayNameOfSelectedElement": ""
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.mselected.length === 1",
              "message": "removeSingleForLevel"
            },
            {
              "condition": "ctx.mselected.length > 1",
              "message": "removeMultipleForLevel"
            }
          ]
        }
      },
      "cancelMarkupElement": {
        "actionType": "JSFunction",
        "method": "getDisplayName",
        "deps": "js/typeDisplayName.service",
        "inputData": {
          "modelObject": "{{ctx.mselected[0]}}"
        },
        "outputData": {
          "displayNameOfSelectedElement": ""
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.mselected.length === 1",
              "message": "removeSingleForElement"
            },
            {
              "condition": "ctx.mselected.length > 1",
              "message": "removeMultipleForElement"
            }
          ]
        }
      },
      "cancelMarkupSOA": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2018-12-Markup",
        "method": "cancelMarkup",
        "inputData": {
          "element": {
            "uid": "{{ctx.pselected.uid}}",
            "type": "{{ctx.pselected.type}}"
          },
          "markups": "{{ctx.mselected}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selected}}",
                  "{{ctx.pselected}}"
                ],
                "refreshLocationFlag": true
              }
            }
          ]
        },
        "deps": "js/showMarkupService"
      },
      "aceShowObjectDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{ctx.selected}}",
            "path": "uid"
          },
          "page": "{{i18n.occMgmtTitle}}",
          "pageId": "tc_xrt_Content"
        }
      },
      "aceShowObjectDelegateCellAction": {
        "actionType": "JSFunction",
        "method": "openObject",
        "inputData": {
          "openedObject": "{{commandContext.vmo}}",
          "page": "{{i18n.occMgmtTitle}}",
          "pageId": "tc_xrt_Content"
        },
        "deps": "js/showObjectCellDelegateService"
      },
      "aceReviseObjectDelegateAction": {
        "actionType": "JSFunction",
        "method": "performPostReviseAction",
        "inputData": {
          "openedObject": "{{commandContext.vmo}}",
          "page": "{{i18n.occMgmtTitle}}",
          "pageId": "tc_xrt_Content"
        },
        "deps": "js/aceReviseObjectsService"
      },
      "aceJitterFreeReviseDelegateAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2021-06-OccurrenceManagement",
        "method": "updateContentBasedOnRevision2",
        "inputData": {
          "input": {
            "element": "{{ctx.selected}}",
            "workspaceObject": {
              "uid": "{{commandContext.vmo.uid}}",
              "type": "ItemRevision"
            },
            "productContext": {
              "uid": "{{ctx.aceActiveContext.context.productContextInfo.uid}}",
              "type": "Awb0ProductContextInfo"
            }
          }
        },
        "outputData": {
          "updatedElements": "result.ServiceData.updated"
        },
        "actionMessages": {
          "failure": [
            {
              "message": "soaFailureMessage"
            }
          ]
        }
      },
      "aceOpenInTabDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": {
            "$adapt": "{{ctx.selected}}",
            "path": "uid"
          },
          "page": "{{i18n.occMgmtTitle}}",
          "pageId": "tc_xrt_Content",
          "retainTreeExp": true
        },
        "navigateIn": "newTab"
      },
      "aceOpenInWindowDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": {
            "$adapt": "{{ctx.selected}}",
            "path": "uid"
          },
          "page": "{{i18n.occMgmtTitle}}",
          "pageId": "tc_xrt_Content",
          "retainTreeExp": true
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "aceOpenInRACDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "launcher/openinrac",
        "navigationParams": {
          "-s": "226TCSession",
          "-o": {
            "$adapt": "{{ctx.selected}}",
            "path": "uid"
          },
          "-attach": "true"
        },
        "navigateIn": "newTab"
      },
      "useSubstitute": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2018-05-OccurrenceManagement",
        "method": "preferSubstitute",
        "inputData": {
          "occurrence": {
            "uid": "{{ctx.pselected.uid}}",
            "type": "{{ctx.pselected.type}}"
          },
          "preferredSubstitute": {
            "uid": "{{ctx.selected.uid}}",
            "type": "{{ctx.selected.type}}"
          }
        },
        "outputData": {
          "plain": "plain"
        },
        "actionMessages": {
          "failure": [
            {
              "message": "soaFailureMessage"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "ace.UseSubstitute",
              "condition": "!(ctx.tcSessionData.tcMajorVersion > 11 || (ctx.tcSessionData.tcMajorVersion === 11 && (ctx.tcSessionData.tcMinorVersion > 2 || (ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber >= 6))))"
            },
            {
              "name": "ace.replaceRowsInTree",
              "eventData": {
                "targetUids": [
                  "{{data.plain[0]}}"
                ],
                "srcUids": [
                  "{{ctx.pselected.uid}}"
                ]
              },
              "condition": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && (ctx.tcSessionData.tcMajorVersion > 11 || (ctx.tcSessionData.tcMajorVersion === 11 && (ctx.tcSessionData.tcMinorVersion > 2 || (ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber >= 6))))"
            },
            {
              "name": "aceElementsSelectedEvent",
              "eventData": {
                "elementsToSelect": "{{data.plain[0]}}"
              },
              "condition": "ctx.tcSessionData.tcMajorVersion > 11 || (ctx.tcSessionData.tcMajorVersion === 11 && (ctx.tcSessionData.tcMinorVersion > 2 || (ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber >= 6)))"
            }
          ]
        }
      },
      "updateActiveContextToRefreshSelectedObjectInPWA": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.refreshSelectedObjectInPWA",
          "value": true
        },
        "events": {
          "success": [
            {
              "name": "ace.refreshSelectedObjectInPWA.updated"
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "refreshPwaWithStartFreshNavigation": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.configContext",
          "value": {
            "useProductIndex": false,
            "startFreshNavigation": true
          }
        },
        "deps": "js/appCtxService"
      },
      "resetShowConnectionState": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.persistentRequestPref.includeConnections",
          "value": false
        },
        "deps": "js/appCtxService"
      },
      "resetStructureFreshNavigation": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.startFreshNavigation",
          "value": true
        },
        "deps": "js/appCtxService"
      },
      "resetStructureClearRecipe": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.recipe",
          "value": ""
        },
        "deps": "js/appCtxService"
      },
      "toggleMarkup": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.toggleMarkupAction"
            }
          ]
        }
      },
      "toggleMarkupAction": {
        "actionType": "JSFunction",
        "method": "updateCtxWithShowMarkupValue",
        "deps": "js/showMarkupService",
        "inputData": {
          "value": "{{!ctx.aceActiveContext.context.isMarkupEnabled}}"
        },
        "events": {
          "success": [
            {
              "name": "ace.refreshSelectedObjectInPWA.updated"
            }
          ]
        }
      },
      "toggleIneffective": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.toggleIneffectiveAction"
            }
          ]
        }
      },
      "toggleIneffectiveAction": {
        "actionType": "JSFunction",
        "method": "updateCtxWithViewToggleValue",
        "deps": "js/aceStructureConfigurationService",
        "inputData": {
          "value": "{{!ctx.aceActiveContext.context.showInEffectiveOcc}}",
          "toggleKey": "ShowExcludedByEffectivity"
        },
        "events": {
          "success": [
            {
              "name": "updateContextInfo",
              "eventData": {
                "path": "aceActiveContext.context.transientRequestPref.jitterFreePropLoad",
                "value": true
              }
            },
            {
              "name": "ace.refreshSelectedObjectInPWA.updated"
            }
          ]
        }
      },
      "toggleVariantsIn": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.toggleVariantsInAction"
            }
          ]
        }
      },
      "toggleVariantsInAction": {
        "actionType": "JSFunction",
        "method": "updateCtxWithViewToggleValue",
        "deps": "js/aceStructureConfigurationService",
        "inputData": {
          "value": "{{!ctx.aceActiveContext.context.showVariantsInOcc}}",
          "toggleKey": "ShowExcludedByVariants"
        },
        "events": {
          "success": [
            {
              "name": "updateContextInfo",
              "eventData": {
                "path": "aceActiveContext.context.transientRequestPref.jitterFreePropLoad",
                "value": true
              }
            },
            {
              "name": "ace.refreshSelectedObjectInPWA.updated"
            }
          ]
        }
      },
      "toggleSuppressedIn": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.toggleSuppressedInAction"
            }
          ]
        }
      },
      "toggleSuppressedInAction": {
        "actionType": "JSFunction",
        "method": "updateCtxWithViewToggleValue",
        "deps": "js/aceStructureConfigurationService",
        "inputData": {
          "value": "{{!ctx.aceActiveContext.context.showSuppressedOcc}}",
          "toggleKey": "ShowSuppressed"
        },
        "events": {
          "success": [
            {
              "name": "updateContextInfo",
              "eventData": {
                "path": "aceActiveContext.context.transientRequestPref.jitterFreePropLoad",
                "value": true
              }
            },
            {
              "name": "ace.refreshSelectedObjectInPWA.updated"
            }
          ]
        }
      },
      "aceExpandBelow": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.aceExpandBelowAction"
            }
          ]
        }
      },
      "aceCollapseBelow": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.aceCollapseBelowAction"
            }
          ]
        }
      },
      "aceExpandBelowAction": {
        "actionType": "JSFunction",
        "method": "performExpandBelow",
        "deps": "js/aceExpandBelowService",
        "inputData": {
          "expansionLevel": -1,
          "viewKey": "{{commandContext.viewKey}}"
        },
        "events": {
          "success": [
            {
              "name": "hideExpandOptionsPopup"
            }
          ]
        }
      },
      "aceCollapseBelowAction": {
        "actionType": "JSFunction",
        "method": "performCollapseBelow",
        "inputData": {
          "viewKey": "{{commandContext.viewKey}}"
        },
        "deps": "js/aceExpandBelowService",
        "events": {
          "success": [
            {
              "name": "hideExpandOptionsPopup"
            }
          ]
        }
      },
      "hideExpandOptionsPopup": {
        "actionType": "JSFunction",
        "method": "hide",
        "deps": "js/popupService"
      },
      "addCloneDataToColumns": {
        "actionType": "JSFunction",
        "method": "setDuplicateActionOnLine",
        "inputData": {
          "operationType": 0
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "addReferenceDataToColumns": {
        "actionType": "JSFunction",
        "method": "setDuplicateActionOnLine",
        "inputData": {
          "operationType": 1
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "addReviseDataToColumns": {
        "actionType": "JSFunction",
        "method": "setDuplicateActionOnLine",
        "inputData": {
          "operationType": 2
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "addReplaceDataToColumns": {
        "actionType": "JSFunction",
        "method": "setDuplicateActionOnLine",
        "inputData": {
          "operationType": 3
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "addRemoveDataToColumns": {
        "actionType": "JSFunction",
        "method": "setDuplicateActionOnLine",
        "inputData": {
          "operationType": 5
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "addCloneBelowDataToColumns": {
        "actionType": "JSFunction",
        "method": "setDuplicateActionOnLine",
        "inputData": {
          "operationType": 6
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "openInteractiveDuplicateNotification": {
        "actionType": "JSFunction",
        "method": "openInteractiveDuplicateNotification",
        "inputData": {
          "notificationObject": "{{commandContext.lineItem}}"
        },
        "events": {
          "success": [
            {
              "name": "NotificationMessage.markRead"
            }
          ]
        },
        "deps": "js/aceInteractiveDuplicateService"
      },
      "enableDuplicateMode": {
        "actionType": "JSFunction",
        "method": "enableDuplicateMode",
        "deps": "js/aceInteractiveDuplicateService",
        "events": {
          "success": [
            {
              "name": "complete",
              "eventData": {
                "source": "toolAndInfoPanel"
              }
            }
          ]
        }
      },
      "awb0SaveAsorReviseContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "Awb0SaveAsRevisePreProcessingSuccessful"
            }
          ]
        }
      },
      "awb0SaveAsorReviseCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      },
      "configureBySelection": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "path": "aceActiveContext.context.requestPref",
          "value": {
            "configBasedOnSel": "true"
          }
        },
        "events": {
          "success": [
            {
              "name": "ace.configureBasedOnSelectionUpdatedInReqPref"
            }
          ]
        }
      },
      "configByProximityTarget": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "setStartFreshNavigation"
          },
          {
            "action": "doConfigByProximityTarget"
          }
        ]
      },
      "doConfigByProximityTarget": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "path": "aceActiveContext.context.requestPref",
          "value": {
            "configByProximityTarget": "true",
            "filterOrRecipeChange": "true"
          }
        },
        "actionMessages": {
          "success": [
            {
              "message": "notifyAppliedVariantRuleWithConfigureByProximity",
              "condition": "ctx.aceActiveContext.context.productContextInfo.props.awb0VariantRules.dbValues != undefined && ctx.aceActiveContext.context.productContextInfo.props.awb0VariantRules.dbValues.length > 0 && !ctx.aceActiveContext.context.supportedFeatures.Awb0ConfiguredByProximity"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "ace.configureBasedOnSelectionUpdatedInReqPref"
            }
          ]
        }
      },
      "setStartFreshNavigation": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "path": "aceActiveContext.context.startFreshNavigation",
          "value": true
        }
      },
      "updateConfigurationParams": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "path": "aceActiveContext.context.configContext",
          "value": {
            "r_uid": null,
            "var_uids": null,
            "fromUnit": null,
            "toUnit": null,
            "startDate": null,
            "endDate": null
          }
        }
      },
      "aceSetInContext": {
        "actionType": "Event",
        "method": "Event",
        "deps": "js/aceInContextOverrideService",
        "inputData": {
          "events": [
            {
              "name": "toggleInContextOverrideOnSelectedParentAssembly"
            }
          ]
        }
      },
      "toggleInContextOverrideInTreeView": {
        "actionType": "JSFunction",
        "method": "toggleInContextOverrideOnSelectedParentAssemblyInTreeView",
        "deps": "js/aceInContextOverrideService",
        "inputData": {}
      },
      "toggleInContextOverrideFromNonTreeView": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "toggleInContextOverrideOnSelectedParentAssemblyInNonTreeView"
          },
          {
            "action": "switchToTreeViewInAce"
          }
        ]
      },
      "switchToTreeViewInAce": {
        "actionType": "JSFunction",
        "method": "changeViewMode",
        "deps": "js/viewMode.service",
        "inputData": {
          "viewMode": "TreeView"
        }
      },
      "toggleInContextOverrideOnSelectedParentAssemblyInNonTreeView": {
        "actionType": "JSFunction",
        "method": "updateContextState",
        "inputData": {
          "contextKey": "{{ctx.aceActiveContext.key}}",
          "newState": {
            "incontext_uid": "{{ctx.selected.uid !== ctx.aceActiveContext.context.currentState.incontext_uid ? ctx.selected.uid : null}}"
          },
          "mergeWithCurrentState": true
        },
        "deps": "js/contextStateMgmtService"
      },
      "removePropertyOverride": {
        "actionType": "JSFunction",
        "method": "removePropertyOverride",
        "outputData": {
          "removeOverrideResponse": ""
        },
        "deps": "js/aceInContextOverrideService"
      },
      "Awb0SaveVariantRule": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ClassicVariants.updateVariantRule",
              "eventData": {}
            }
          ]
        }
      },
      "Awb0SaveAsVariantRule": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awb0SaveVariantRule",
                "title": "{{i18n.saveButtonText}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "removeAttachment": {
        "actionType": "JSFunction",
        "method": "removeAttachment",
        "deps": "js/aceInContextOverrideService",
        "events": {
          "success": [
            {
              "name": "performRemoveAttachmentOverride"
            },
            {
              "name": "performCutAttachmentOperation"
            }
          ]
        }
      },
      "removeAttachmentOverrideSoaCall": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2019-12-OccurrenceManagement",
        "method": "detachObjects",
        "deps": "js/aceInContextOverrideService",
        "inputData": {
          "input": [
            {
              "primaryObj": {
                "type": "{{ctx.aceActiveContext.context.selectedModelObjects[0].type}}",
                "uid": "{{ctx.aceActiveContext.context.selectedModelObjects[0].uid}}"
              },
              "secondaryObjs": "{{function:getSecondaryObjects}}"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedRemoveOverrideInput}}",
                "createdObjects": "",
                "childObjects": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cutToAwClipboard"
            },
            {
              "name": "postRemoveAttachmentCleanupAction"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleSuccessful"
            }
          ]
        }
      },
      "cutAttachmentSoaCall": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "deps": "js/cutUtils",
        "inputData": {
          "inputData": "{{function:cutInputs}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{function:adaptedRelatedModifiedRemoveOverrideInput}}",
                "createdObjects": "",
                "childObjects": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cutToAwClipboard"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleSuccessful"
            }
          ],
          "failure": [
            {
              "message": "soaFailureMessage"
            }
          ]
        }
      },
      "launchEditEffectivityPanel": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/editEffectivityCommandHandler",
        "inputData": {
          "vmo": "{{commandContext.vmo}}",
          "$scope": "{{$parent}}"
        }
      },
      "resetShowPortState": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.persistentRequestPref.includeInterfaces",
          "value": false
        },
        "deps": "js/appCtxService"
      },
      "launchExpressionEffectivityPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ExpressionEffectivity",
          "location": "aw_toolsAndInfo"
        }
      },
      "saveUserWorkingContextStateAndSignOut": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "saveUserWorkingContextState"
          },
          {
            "action": "signOut"
          }
        ]
      },
      "saveUserWorkingContextState": {
        "actionType": "JSFunctionAsync",
        "method": "saveUserWorkingContextState",
        "deps": "js/backgroundWorkingContextService"
      },
      "updateCtxAndLaunchSaveAsAndReplacePanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "updatePartialCtxForSaveAsAndReplace"
          },
          {
            "action": "launchSaveAsAndReplace"
          }
        ]
      },
      "updatePartialCtxForSaveAsAndReplace": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.adaptedPropForSaveAsReplace",
          "value": "awb0Archetype"
        },
        "deps": "js/appCtxService"
      },
      "awb0AddRevisionCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awb0AddRevision",
                "title": "{{i18n.addRevisionTitle}}",
                "recreatePanel": true,
                "isolateMode": true,
                "supportGoBack": true,
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "awb0RemoveRevisionCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awb0RemoveRevisionFromListEvent",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "revOccRemoveAlternates": {
        "actionType": "JSFunction",
        "method": "removeAlternates",
        "inputData": {
          "selectedAlternates": "{{ctx.mselected}}",
          "selectedObjects": "{{ctx.xrtSummaryContextObject.props.awb0Archetype.dbValues}}"
        },
        "outputData": {},
        "deps": "js/alternatesService"
      },
      "revOccSaveAsorReviseInContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false
        },
        "events": {
          "success": [
            {
              "name": "SaveAsReviseWorkSpaceAdaptSuccessful"
            }
          ]
        }
      },
      "revOccCreateChangeInputAction": {
        "actionType": "JSFunction",
        "method": "getPartAndUsageListFromSelection",
        "outputData": {
          "createChangeInput": ""
        },
        "deps": "js/revOccUtils"
      },
      "revOccSubmitToWorkflow": {
        "actionType": "JSFunction",
        "method": "getPartAndUsageListFromSelection",
        "outputData": {
          "submitWorkflowInput": ""
        },
        "events": {
          "success": [
            {
              "name": "revOcc.submitWorkflow.adaptedInputs"
            }
          ]
        },
        "deps": "js/revOccUtils"
      },
      "revOccGetPropsForSubmitToWorkflow": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": "{{data.submitWorkflowInput}}",
          "attributes": [
            "owning_site",
            "checked_out_user"
          ]
        },
        "events": {
          "success": [
            {
              "name": "revOcc.workflow.getSelectedBOTypeName"
            }
          ]
        }
      },
      "revOccGetSelectedBOTypeName": {
        "actionType": "JSFunction",
        "method": "getTheBOType",
        "deps": "js/Awp0NewWorkflowProcessCommandHandler",
        "inputData": {
          "selections": "{{data.submitWorkflowInput}}",
          "data": "{{data}}"
        },
        "events": {
          "success": [
            {
              "name": "revOcc.workflow.getTypesFromBO"
            }
          ]
        }
      },
      "revOccGetTypeFromBOConstant": {
        "actionType": "TcSoaService",
        "serviceName": "BusinessModeler-2007-06-Constants",
        "method": "getTypeConstantValues",
        "inputData": {
          "keys": "{{data.inputForGetTypeConstantValues}}"
        },
        "outputData": {
          "applicableTypes": "constantValues"
        },
        "events": {
          "success": [
            {
              "name": "revOcc.workflow.validateForCreatingWorkflowPresenterEvent"
            }
          ]
        }
      },
      "revOccGalidateForCreatingWorkflowPresenterAction": {
        "actionType": "JSFunction",
        "method": "populateErrorMessage",
        "deps": "js/Awp0NewWorkflowProcessCommandHandler",
        "inputData": {
          "selections": "{{data.submitWorkflowInput}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        }
      },
      "revOccRegisterAppCreateChangePanelCtxAction": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "name": "appCreateChangePanel.appSelectedObjects",
          "value": "{{data.createChangeInput}}"
        }
      },
      "revOccCreateChangeInContext": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "revOccCreateChangeInputAction"
          },
          {
            "action": "revOccRegisterAppCreateChangePanelCtxAction"
          },
          {
            "action": "Cm1ShowCreateChangeInContextPanel"
          }
        ]
      },
      "revOccJitterFreeReviseDelegateAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
        "method": "updateContentBasedOnRevision",
        "inputData": {
          "input": {
            "workspaceObject": {
              "uid": "{{commandContext.vmo.uid}}",
              "type": "{{commandContext.vmo.type}}"
            },
            "productContext": {
              "uid": "{{ctx.aceActiveContext.context.productContextInfo.uid}}",
              "type": "Awb0ProductContextInfo"
            }
          }
        },
        "outputData": {
          "updatedElements": "result.ServiceData.updated"
        }
      },
      "setReferenceActionOnLine": {
        "actionType": "JSFunction",
        "method": "setActionOnLine",
        "deps": "js/importPreviewSetActionOnLine",
        "inputData": {
          "actionString": "Reference"
        }
      },
      "setReviseActionOnLine": {
        "actionType": "JSFunction",
        "method": "setActionOnLine",
        "deps": "js/importPreviewSetActionOnLine",
        "inputData": {
          "actionString": "Revise"
        }
      },
      "setOverwriteActionOnLine": {
        "actionType": "JSFunction",
        "method": "setActionOnLine",
        "deps": "js/importPreviewSetActionOnLine",
        "inputData": {
          "actionString": "Overwrite"
        }
      },
      "launchImportFromExcelPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ImportFromExcel",
          "location": "aw_toolsAndInfo",
          "closeWhenCommandHidden": false
        }
      },
      "closeImportPreview": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "importBOMPreview.closeImportPreview"
            }
          ]
        }
      },
      "addChildRowCommandAction": {
        "actionType": "JSFunction",
        "method": "addRow",
        "inputData": {
          "dataProvider": "{{data.dataProviders}}",
          "isChild": true
        },
        "deps": "js/aceInlineAuthoringHandler"
      },
      "addSiblingRowCommandAction": {
        "actionType": "JSFunction",
        "method": "addRow",
        "inputData": {
          "dataProvider": "{{data.dataProviders}}",
          "isChild": false
        },
        "deps": "js/aceInlineAuthoringHandler"
      },
      "removeAllInlineRowAction": {
        "actionType": "JSFunction",
        "method": "removeRow",
        "deps": "js/aceInlineAuthoringHandler"
      },
      "saveRowAction": {
        "actionType": "JSFunction",
        "method": "saveRow",
        "deps": "js/aceInlineAuthoringHandler"
      },
      "launchAddRefPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddRef",
          "location": "aw_toolsAndInfo",
          "context": {
            "viewModelProperty": "{{commandContext}}",
            "occurrenceType": "{{data.occurrenceType}}"
          },
          "closeWhenCommandHidden": true
        }
      },
      "getOccTypeAction": {
        "actionType": "JSFunction",
        "method": "getOccType",
        "inputData": {
          "prop": "{{commandContext}}"
        },
        "outputData": {
          "occurrenceType": ""
        },
        "deps": "js/aceInlineAuthoringHandler"
      },
      "launchAddPanel": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "getOccTypeAction"
          },
          {
            "action": "launchAddRefPanel"
          }
        ]
      },
      "removeRowAction": {
        "actionType": "JSFunction",
        "method": "removeRow",
        "inputData": {
          "vmo": [
            "{{commandContext.vmo}}"
          ],
          "removeSingle": true
        },
        "deps": "js/aceInlineAuthoringHandler"
      },
      "awb0launchOpenInViewCommandPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "awb0OpenInViewCommand",
          "location": "aw_toolsAndInfo",
          "context": {
            "context": "{{ctx.aceActiveContext.context}}",
            "includeTypes": "Item",
            "searchFilters": "ItemRevision"
          }
        }
      },
      "awb0launchOpenInViewCommandPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.launchOpenInViewCommand"
            }
          ]
        }
      },
      "openInSplitView": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showMultiObject",
        "navigationParams": {
          "uid": "{{data.eventData.uid}}",
          "uid2": "{{data.eventData.uid2}}",
          "pci_uid": "{{data.eventData.pci_uid}}",
          "pci_uid2": "{{data.eventData.pci_uid2}}"
        }
      },
      "awb0OpenInSplitView": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.clearExpansionState"
            },
            {
              "name": "ace.openInSplitViewFromSWC",
              "condition": "ctx.aceActiveContext.context.elementToPCIMap"
            },
            {
              "name": "ace.openInSplitView",
              "eventData": {
                "uid": {
                  "$adapt": "{{ctx.mselected[0]}}",
                  "path": "uid"
                },
                "uid2": {
                  "$adapt": "{{ctx.mselected[1]}}",
                  "path": "uid"
                },
                "pci_uid": "{{function:getPciForFirstSelection}}",
                "pci_uid2": "{{function:getPciForSecondSelection}}"
              }
            }
          ]
        },
        "deps": "js/occmgmtUtils"
      },
      "clearExpansionState": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "resetTreeExpansionState",
          "value": true
        },
        "deps": "js/appCtxService"
      },
      "openWithoutSWCContext": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "requestPref",
          "value": {
            "dataFilterMode": "compare"
          }
        },
        "deps": "js/appCtxService"
      },
      "toggleSplitMode": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.retainCurrentExpansionState",
              "condition": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && ctx.aceActiveContext.context.currentState.c_uid === ctx.aceActiveContext.context.currentState.t_uid"
            },
            {
              "name": "ace.clearExpansionState"
            },
            {
              "name": "enableSplitMode",
              "condition": "ctx.splitView === undefined && ctx.aceActiveContext && !ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature'] && ctx.sublocation.enableOccMgmtCommands === true"
            },
            {
              "name": "clearLocalStorageForInavtiveView"
            },
            {
              "name": "disableSplitMode",
              "condition": "ctx.splitView && ctx.splitView.mode"
            }
          ]
        }
      },
      "enableSplitMode": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showMultiObject",
        "navigationParams": {
          "uid": "{{ctx.aceActiveContext.context.currentState.uid}}",
          "uid2": "{{ctx.aceActiveContext.context.currentState.uid}}",
          "c_uid": "{{ctx.aceActiveContext.context.currentState.c_uid}}",
          "c_uid2": "{{ctx.aceActiveContext.context.currentState.c_uid}}",
          "pci_uid": "{{ctx.aceActiveContext.context.currentState.pci_uid}}",
          "pci_uid2": "{{ctx.aceActiveContext.context.currentState.pci_uid}}",
          "o_uid": "{{ctx.aceActiveContext.context.currentState.o_uid}}",
          "o_uid2": "{{ctx.aceActiveContext.context.currentState.o_uid}}",
          "t_uid": "{{ctx.aceActiveContext.context.currentState.t_uid}}",
          "t_uid2": "{{ctx.aceActiveContext.context.currentState.t_uid}}",
          "spageId": "{{ctx.aceActiveContext.context.currentState.spageId}}",
          "spageId2": "{{ctx.aceActiveContext.context.currentState.spageId}}"
        }
      },
      "disableSplitMode": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.aceActiveContext.context.currentState.uid}}",
          "c_uid": "{{ctx.aceActiveContext.context.currentState.c_uid}}",
          "pci_uid": "{{ctx.aceActiveContext.context.currentState.pci_uid}}",
          "o_uid": "{{ctx.aceActiveContext.context.currentState.o_uid}}",
          "t_uid": "{{ctx.aceActiveContext.context.currentState.t_uid}}",
          "spageId": "{{ctx.aceActiveContext.context.currentState.spageId}}"
        }
      },
      "awb0StartTreeEditPre": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "acePwaCommand.awb0StartTreeEdit"
            }
          ]
        }
      },
      "awb0StartTreeEdit": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/startEditGroupCommandService",
        "inputData": {
          "handleContext": "{{ctx.aceActiveContext.context.vmc.name}}",
          "view": "{{ctx.ViewModeContext.ViewModeContext}}"
        }
      },
      "retainCurrentExpansionState": {
        "actionType": "JSFunction",
        "method": "retainCurrentExpansionState",
        "deps": "js/occmgmtTreeTableDataService"
      },
      "Awb0SelectAllCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "primaryWorkarea.selectActionForAce",
              "eventData": {
                "selectAll": true
              }
            }
          ]
        }
      },
      "Awb0EnableMultiSelectCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "primaryWorkarea.multiSelectActionForAce",
              "eventData": {
                "multiSelect": true
              }
            }
          ]
        }
      },
      "Awb0DisableMultiSelectCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "primaryWorkarea.multiSelectActionForAce",
              "eventData": {
                "multiSelect": false
              }
            }
          ]
        }
      },
      "Awb0DeselectAllCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.activateWindow",
              "eventData": {
                "key": "{{commandContext.viewKey}}"
              }
            },
            {
              "name": "primaryWorkarea.selectActionForAce",
              "eventData": {
                "selectAll": false
              }
            }
          ]
        }
      },
      "updateInctiveView": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "aceElementsDeSelectedEvent",
              "eventData": {
                "viewToReact": "{{function:getInactiveViewKey}}",
                "silentSelection": true,
                "elementsToDeselect": "{{data.deletedElements}}"
              },
              "condition": "data.deletedElements && data.deletedElements.length > 0"
            },
            {
              "name": "ace.refreshInactiveViewWithSameConfig"
            }
          ]
        },
        "deps": "js/occmgmtSplitViewUpdateService"
      },
      "refreshInactiveViewWithSameConfig": {
        "actionType": "JSFunction",
        "method": "refreshInactiveViewWithSameConfig",
        "deps": "js/occmgmtSplitViewUpdateService"
      },
      "clearLocalStorageForInavtiveView": {
        "actionType": "JSFunction",
        "method": "clearLocalStorageForInavtiveView",
        "deps": "js/occmgmtSplitViewUpdateService"
      },
      "addProductOpenedInSplitViewToSessionStorage": {
        "actionType": "JSFunction",
        "method": "addProductOpenedInSplitViewToSessionStorage",
        "deps": "js/occmgmtSplitViewUpdateService",
        "inputData": {
          "uid": "{{ctx.aceActiveContext.context.currentState.uid}}",
          "filterCount": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0FilterCount.dbValues[0]}}"
        }
      },
      "continueWithoutSaving": {
        "actionType": "JSFunction",
        "method": "setContinueWithUnsaved",
        "deps": "js/discoverySubscriptionService",
        "inputData": {
          "continueWithoutSave": true
        },
        "events": {
          "success": [
            {
              "name": "saveAsReviseNonDirtyWorkset"
            }
          ]
        }
      },
      "saveAsReviseWorksetAfterSaving": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "performSaveWorkset"
          },
          {
            "action": "saveAsReviseOpenPanelBatch"
          }
        ]
      },
      "saveAsReviseOpenPanelBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "registerSaveAsReviseWorksetListeners"
          },
          {
            "action": "saveAsReviseOpenPanel"
          }
        ]
      },
      "registerSaveAsReviseWorksetListeners": {
        "actionType": "JSFunction",
        "method": "initializeSaveAsReviseWorksetListeners",
        "deps": "js/discoverySubscriptionService"
      },
      "saveAsReviseOpenPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0ShowSaveAsWorkset",
          "location": "aw_toolsAndInfo"
        }
      },
      "updateSelectedOnCtxOnSaveAsReviseWS": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false
        },
        "events": {
          "success": [
            {
              "name": "saveAsReviseDirtyWorkset",
              "condition": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.fnd0PendingChanges.dbValues[0] === '1'"
            },
            {
              "name": "saveAsReviseNonDirtyWorkset",
              "condition": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.fnd0PendingChanges.dbValues[0] === '0'"
            }
          ]
        }
      },
      "openSnapshotAction": {
        "actionType": "JSFunction",
        "method": "openProductSnapshot",
        "inputData": {
          "snapshotObj": "{{commandContext.vmo}}"
        },
        "events": {
          "success": [
            {
              "condition": "ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'",
              "name": "occmgmtsubset.applySnapshot"
            }
          ]
        },
        "deps": "js/discoverySnapshotService"
      },
      "openInNewTabCommandContext": {
        "actionType": "JSFunction",
        "method": "openProductSnapshot",
        "inputData": {
          "snapshotObj": "{{commandContext.vmo}}",
          "navigateIn": "newTab"
        },
        "deps": "js/discoverySnapshotService"
      },
      "openInNewWindowCommandContext": {
        "actionType": "JSFunction",
        "method": "openProductSnapshot",
        "inputData": {
          "snapshotObj": "{{commandContext.vmo}}",
          "navigateIn": "newWindow"
        },
        "deps": "js/discoverySnapshotService"
      },
      "showObjectCellCommandContext": {
        "actionType": "JSFunction",
        "method": "openProductSnapshot",
        "inputData": {
          "snapshotObj": "{{ctx.selected}}"
        },
        "deps": "js/discoverySnapshotService"
      },
      "openInNewTabCellCommandContext": {
        "actionType": "JSFunction",
        "method": "openProductSnapshot",
        "inputData": {
          "snapshotObj": "{{ctx.selected}}",
          "navigateIn": "newTab"
        },
        "deps": "js/discoverySnapshotService"
      },
      "openInNewWindowCellCommandContext": {
        "actionType": "JSFunction",
        "method": "openProductSnapshot",
        "inputData": {
          "snapshotObj": "{{ctx.selected}}",
          "navigateIn": "newWindow"
        },
        "deps": "js/discoverySnapshotService"
      },
      "Awb0CreateWorksetCommandPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0CreateWorkset",
          "location": "aw_toolsAndInfo"
        }
      },
      "Awb0CreateSessionCommandPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0CreateSession",
          "location": "aw_toolsAndInfo"
        }
      },
      "Awb0SaveAsSessionCommandPanelAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0SaveAsSession",
          "location": "aw_toolsAndInfo"
        }
      },
      "performSaveSession": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showSaveSessionInfoAction"
          },
          {
            "action": "saveSessionPendingChanges"
          }
        ]
      },
      "showSaveSessionInfoAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "showSaveSessionInfoEvent"
            }
          ]
        }
      },
      "clearFilterCache": {
        "actionType": "JSFunction",
        "method": "clearAllCacheOnReset",
        "deps": "js/discoveryFilterService"
      },
      "saveSessionPendingChanges": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
        "method": "updateWorkingContext",
        "inputData": {
          "input": [
            {
              "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
              "workingContext": "{{function:getWorkContextObject}}",
              "saveResult": true,
              "operation": "Save"
            }
          ]
        },
        "outputData": {
          "partialErrors": "partialErrors",
          "errorMessages": "{{partialErrors[0].errorValues[0].message}}"
        },
        "events": {
          "success": [
            {
              "name": "ace.saveSessionSuccess"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "saveSessionConfirmPopupNoOverwrite",
              "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'false'"
            },
            {
              "message": "saveSessionConfirmPopup",
              "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'true'"
            }
          ]
        },
        "deps": "soa/kernel/clientDataModel"
      },
      "overwriteSessionPendingChangesAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
        "method": "updateWorkingContext",
        "inputData": {
          "input": [
            {
              "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
              "workingContext": "{{function:getWorkContextObject}}",
              "saveResult": true,
              "operation": "Overwrite"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "ace.saveSessionSuccess"
            }
          ]
        },
        "deps": "soa/kernel/clientDataModel"
      },
      "performReplayOfSession": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "updateRecipeAndFilterCategoriesOnReplay",
            "condition": "conditions.isTcReleaseLessThan13_3"
          },
          {
            "action": "updateReplayInAppContext",
            "condition": "conditions.isTcReleaseLessThan13_3"
          },
          {
            "action": "updateReplay",
            "condition": "conditions.isTcReleaseAtLeast13_3"
          },
          {
            "action": "updateJitterFreeContextState"
          },
          {
            "action": "doReplayWithPrimaryWorkAreaReset"
          }
        ]
      },
      "updateRecipeAndFilterCategoriesOnReplay": {
        "actionType": "JSFunction",
        "method": "updateRecipeAndFilterInfoForReplay",
        "inputData": {},
        "deps": "js/structureFilterService"
      },
      "updateReplayInAppContext": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.requestPref",
          "value": {
            "replayRecipe": "true",
            "calculateFilters": true
          }
        },
        "deps": "js/appCtxService"
      },
      "updateReplay": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.requestPref.replayRecipe",
          "value": "true"
        },
        "deps": "js/appCtxService"
      },
      "updateJitterFreeContextState": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.retainTreeExpansionStateInJitterFreeWay",
          "value": true
        },
        "deps": "js/appCtxService"
      },
      "doReplayWithPrimaryWorkAreaReset": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "acePwa.reset"
            }
          ]
        }
      },
      "launchStructureFilterPanelActionForIncludeBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "includeSelectedElementToFilterBatch",
            "condition": "ctx.sidenavCommandId && ctx.sidenavCommandId === 'Awb0StructureFilterCommand'"
          },
          {
            "action": "launchStructureFilterPanelActionForInclude",
            "condition": "!ctx.sidenavCommandId || ctx.sidenavCommandId !== 'Awb0StructureFilterCommand'"
          }
        ]
      },
      "includeSelectedElementToFilterBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "updateInclContextState"
          },
          {
            "action": "addSelectedElementToFilter"
          }
        ]
      },
      "launchStructureFilterPanelActionForInclude": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "inputData": {
          "commandId": "Awb0StructureFilterCommand",
          "location": "aw_navigation",
          "context": {
            "operation": "Include"
          }
        },
        "deps": "js/commandPanel.service"
      },
      "updateInclContextState": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "panelContext.operation",
          "value": "Include"
        },
        "deps": "js/appCtxService"
      },
      "addSelectedElementToFilter": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awFilter.addSelectedElementToFilter"
            }
          ]
        }
      },
      "launchStructureFilterPanelActionForExcludeBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "excludeSelectedElementToFilterBatch",
            "condition": "ctx.sidenavCommandId && ctx.sidenavCommandId === 'Awb0StructureFilterCommand'"
          },
          {
            "action": "launchStructureFilterPanelActionForExclude",
            "condition": "!ctx.sidenavCommandId || ctx.sidenavCommandId !== 'Awb0StructureFilterCommand' "
          }
        ]
      },
      "excludeSelectedElementToFilterBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "updateExclContextState"
          },
          {
            "action": "addSelectedElementToFilter"
          }
        ]
      },
      "launchStructureFilterPanelActionForExclude": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "inputData": {
          "commandId": "Awb0StructureFilterCommand",
          "location": "aw_navigation",
          "context": {
            "operation": "Exclude"
          }
        },
        "deps": "js/commandPanel.service"
      },
      "updateExclContextState": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "panelContext.operation",
          "value": "Exclude"
        },
        "deps": "js/appCtxService"
      },
      "openSettings": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awb0FilterPanelSettings",
                "supportGoBack": true,
                "title": "{{i18n.settings}}"
              }
            }
          ]
        }
      },
      "clearAllConfirmationMessage": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {}
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "clearAllMessage"
            }
          ]
        }
      },
      "clearRecipe": {
        "actionType": "JSFunction",
        "method": "clearRecipe",
        "inputData": {
          "data": "{{commandContext}}"
        },
        "deps": "js/discoveryFilterService"
      },
      "performReplayOfWorkset": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "setDefaultSelectionForWorksetReplay"
          },
          {
            "action": "updateReplay"
          },
          {
            "action": "updateJitterFreeContextState"
          },
          {
            "action": "doReplayWithPrimaryWorkAreaReset"
          }
        ]
      },
      "setDefaultSelectionForWorksetReplay": {
        "actionType": "JSFunction",
        "method": "setDefaultSelectionForWorksetReplay",
        "deps": "js/createWorksetService"
      },
      "postRemoveActionSubsetFromWorkset": {
        "actionType": "JSFunction",
        "method": "postRemoveSubsetFromWorkset",
        "inputData": {
          "removedElements": "{{data.removedElementsFromResponse}}"
        },
        "deps": "js/createWorksetService"
      },
      "performSaveWorkset": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showSaveWorksetInfoAction"
          },
          {
            "action": "saveWorksetPendingChanges"
          }
        ]
      },
      "showSaveWorksetInfoAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "showSaveWorksetInfoEvent"
            }
          ]
        }
      },
      "saveWorksetPendingChanges": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
        "method": "updateWorkingContext",
        "inputData": {
          "input": [
            {
              "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
              "workingContext": "{{ctx.aceActiveContext.context.worksetTopNode}}",
              "saveResult": true,
              "operation": "Save"
            }
          ]
        },
        "outputData": {
          "partialErrors": "partialErrors",
          "errorMessages": "{{partialErrors[0].errorValues[0].message}}"
        },
        "events": {
          "success": [
            {
              "name": "ace.saveSessionSuccess"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "concurrentSaveWorksetConfirmPopupNoOverwrite",
              "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'false'"
            },
            {
              "message": "concurrentSaveWorksetConfirmPopup",
              "condition": "partialErrors && partialErrors[0].errorValues[0].code === 126262 && ctx.preferences.AWBShowOverwriteForConcurrentSave[0] === 'true'"
            }
          ]
        },
        "deps": "soa/kernel/clientDataModel"
      },
      "configureBySelectionInWorkset": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "path": "aceActiveContext.context.requestPref",
          "value": {
            "configBasedOnSel": "true"
          }
        },
        "events": {
          "success": [
            {
              "name": "updateConfigurationParamsForCBOS"
            }
          ]
        }
      },
      "updateConfigurationParamsForCBOS": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "path": "aceActiveContext.context.configContext",
          "value": {
            "r_uid": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0CurrentRevRule.dbValues[0]}}",
            "startDate": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0StartEffDates.dbValues[0]}}",
            "endDate": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0EndEffDates.dbValues[0]}}",
            "ue": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0EffUnitNo.dbValues[0]}}",
            "ei_uid": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0EffEndItem.dbValues[0]}}",
            "var_uids": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0VariantRules.dbValues}}",
            "iro_uid": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0VariantRuleOwningRev.dbValues[0]}}"
          }
        }
      },
      "saveAndOpenInVis": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "performSaveWorkset",
            "condition": "conditions.isSaveWorksetActive"
          },
          {
            "action": "performSaveSession",
            "condition": "conditions.isSaveSessionActive"
          },
          {
            "action": "openInVis"
          }
        ]
      },
      "launchOpenInVis": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "showUnsavedObjectMessageWithWriteAccessForOpenInVis",
            "condition": "conditions.isObjectUnsavedHasWriteAccess"
          },
          {
            "action": "showUnsavedObjectMessageNoWriteAccessForOpenInVis",
            "condition": "conditions.isObjectUnsavedNoWriteAccess"
          },
          {
            "action": "openInVis",
            "condition": "conditions.isOpenInVisDefault"
          }
        ]
      },
      "showUnsavedObjectMessageWithWriteAccessForOpenInVis": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "showUnsavedObjectMessageWithWriteAccessForOpenInVis"
            }
          ]
        }
      },
      "showUnsavedObjectMessageNoWriteAccessForOpenInVis": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "showUnsavedObjectMessageNoWriteAccessForOpenInVis"
            }
          ]
        }
      },
      "openInVis": {
        "actionType": "JSFunction",
        "method": "executeOpenInVisCommand",
        "deps": "js/Awv0VisualizationService"
      },
      "overwriteWorksetPendingChangesAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2020-05-OccurrenceManagement",
        "method": "updateWorkingContext",
        "inputData": {
          "input": [
            {
              "productInfo": "{{ctx.aceActiveContext.context.productContextInfo}}",
              "workingContext": "{{ctx.aceActiveContext.context.worksetTopNode}}",
              "saveResult": true,
              "operation": "Overwrite"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "ace.saveSessionSuccess"
            }
          ]
        },
        "deps": "soa/kernel/clientDataModel"
      },
      "saveAsWSOnConcurrentSaveBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "updateSaveAsOnConcurrentSaveOnCtx"
          },
          {
            "action": "registerSaveAsReviseWorksetListeners"
          },
          {
            "action": "updateSelectedOnCtxForConcurrentSaveWS"
          }
        ]
      },
      "updateSaveAsOnConcurrentSaveOnCtx": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "aceActiveContext.context.saveAsOnConcurrentSave",
          "value": true
        },
        "deps": "js/appCtxService"
      },
      "updateSelectedOnCtxForConcurrentSaveWS": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.aceActiveContext.context.openedElement}}",
          "openNewRevision": true,
          "showOpenNewRevisionCheckbox": false
        },
        "events": {
          "success": [
            {
              "name": "SaveAsReviseOpenPanelEvent"
            }
          ]
        }
      },
      "openProductSnapshotViaTileAction": {
        "actionType": "JSFunction",
        "method": "openProductSnapshotViaTile",
        "inputData": {
          "snapshotObj": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "condition": "ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'",
              "name": "occmgmtsubset.applySnapshot"
            }
          ]
        },
        "deps": "js/discoverySnapshotService"
      },
      "AlignDesignCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0AlignDesign",
          "location": "aw_toolsAndInfo"
        },
        "actionMessages": {
          "failure": [
            {
              "message": "alignDesignCommandFailure"
            }
          ]
        }
      },
      "AlignPartCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0AlignPart",
          "location": "aw_toolsAndInfo"
        }
      },
      "SetPrimaryCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "createRelations",
        "inputData": {
          "input": "{{function:getSetPrimaryInput}}"
        },
        "outputData": {
          "partialErorrs": "ServiceData.partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            },
            {
              "name": "cba.refreshObjects",
              "eventData": {
                "primarySelection": [
                  "{{ctx.pselected}}"
                ],
                "secondarySelection": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cadbomalignment.primaryDesignRepresentationChanged",
              "eventData": {}
            },
            {
              "name": "cba.notifyViewerAlignmentUpdated",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "primarySelection": "{{ctx.pselected}}",
                "secondarySelection": "{{ctx.mselected}}"
              },
              "excludeLocalDataCtx": true,
              "condition": "ctx.sublocation.enableOccMgmtCommands === true"
            }
          ],
          "failure": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": false,
                "relations": "",
                "relatedModified": [
                  "{{data.primarySelection}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "setPrimaryDesignFailure"
            }
          ]
        },
        "deps": "js/CadBomAlignmentService"
      },
      "RemoveDesignAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteRelations",
        "inputData": {
          "input": "{{function:getRemoveInput}}"
        },
        "outputData": {},
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            },
            {
              "name": "cba.refreshObjects",
              "eventData": {
                "primarySelection": [
                  "{{ctx.pselected}}"
                ],
                "secondarySelection": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cba.partDesignUnAlignment",
              "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "secondarySelection": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cba.notifyViewerAlignmentUpdated",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "primarySelection": "{{ctx.pselected}}",
                "secondarySelection": "{{ctx.mselected}}"
              },
              "excludeLocalDataCtx": true,
              "condition": "ctx.sublocation.enableOccMgmtCommands === true"
            }
          ],
          "failure": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": false,
                "relations": "",
                "relatedModified": [
                  "{{data.primarySelection}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "RemoveDesignActionFailure"
            }
          ]
        },
        "deps": "js/CadBomAlignmentService"
      },
      "RemovePartAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteRelations",
        "inputData": {
          "input": "{{function:getRemovePartInput}}"
        },
        "outputData": {},
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": false,
                "relations": "",
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            },
            {
              "name": "cba.refreshObjects",
              "eventData": {
                "primarySelection": [
                  "{{ctx.pselected}}"
                ],
                "secondarySelection": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cba.partDesignUnAlignment",
              "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "secondarySelection": "{{ctx.mselected}}"
              }
            },
            {
              "name": "cba.notifyViewerAlignmentUpdated",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "primarySelection": "{{ctx.pselected}}",
                "secondarySelection": "{{ctx.mselected}}"
              },
              "excludeLocalDataCtx": true,
              "condition": "ctx.sublocation.enableOccMgmtCommands === true && ctx.splitView"
            }
          ],
          "failure": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": false,
                "relations": "",
                "relatedModified": [
                  "{{data.primarySelection}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "RemovePartActionFailure"
            }
          ]
        },
        "deps": "js/CadBomAlignmentService"
      },
      "EntCBAShowObjectCellDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{commandContext.vmo}}",
            "path": "props.fnd0UnderlyingObject.dbValues[0]"
          }
        }
      },
      "EntCBAShowObjectDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}"
        }
      },
      "EntCBAOpenObjectInNewTabDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}"
        },
        "navigateIn": "newTab"
      },
      "EntCBAOpenObjectInNewWindowDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}"
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "EntCBAOpenObjectInRACDelegateAction": {
        "actionType": "Navigate",
        "navigateTo": "launcher/openinrac",
        "navigationParams": {
          "-s": "226TCSession",
          "-o": "{{ctx.mselected[0].props.fnd0UnderlyingObject.dbValues[0]}}",
          "-attach": "true"
        },
        "navigateIn": "newTab"
      },
      "EntCBALaunchAlignTaskCommandAction": {
        "actionType": "JSFunction",
        "method": "launchCBA",
        "deps": "js/CadBomOccurrenceAlignmentService"
      },
      "EntCBAAlignCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-EntCba-2019-12-Alignments",
        "method": "alignOccurrences",
        "inputData": {
          "input": "{{function:getOccAlignmentInput}}"
        },
        "outputData": {
          "alignmentResponse": "",
          "isAlignmentChanged": true
        },
        "actionMessages": {
          "failure": [
            {
              "message": "EntCBAAlignCommandActionFailure"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cba.updateStructures",
              "eventData": {
                "response": "{{data.alignmentResponse}}",
                "isAlignment": true
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBASrcContext.activeTab.id !== 'Awb0ViewerFeature'",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.CBASrcContext.selectedModelObjects[0]}}"
                ]
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBATrgContext.activeTab.id !== 'Awb0ViewerFeature'",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.CBATrgContext.selectedModelObjects[0]}}"
                ]
              }
            },
            {
              "name": "cba.alignmentUpdated",
              "eventData": {
                "viewToReact": "CBATrgContext"
              },
              "excludeLocalDataCtx": true
            }
          ],
          "failure": [
            {
              "name": "cba.alignmentSuccess",
              "eventData": {
                "objects": "{{data.alignmentResponse.updated}}"
              },
              "condition": "alignmentResponse.updated && alignmentResponse.updated.length > 0"
            },
            {
              "name": "cba.alignmentUpdated",
              "eventData": {
                "viewToReact": "CBATrgContext"
              },
              "condition": "alignmentResponse.updated && alignmentResponse.updated.length > 0",
              "excludeLocalDataCtx": true
            }
          ]
        },
        "deps": "js/CadBomOccurrenceAlignmentService"
      },
      "EntCBAUnAlignCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-EntCba-2019-12-Alignments",
        "method": "unalignOccurrences",
        "inputData": {
          "input": "{{function:getOccUnAlignmentInput}}"
        },
        "outputData": {
          "unAlignmentResponse": "",
          "isAlignmentChanged": true
        },
        "events": {
          "success": [
            {
              "name": "cba.updateStructures",
              "eventData": {
                "response": "{{data.unAlignmentResponse}}",
                "isAlignment": false
              }
            },
            {
              "name": "cba.alignmentUpdated",
              "eventData": {
                "viewToReact": "CBATrgContext"
              },
              "excludeLocalDataCtx": true
            }
          ],
          "failure": [
            {
              "name": "cba.unAlignmentSuccess",
              "eventData": {
                "objects": "{{data.unAlignmentResponse.updated}}"
              },
              "condition": "unAlignmentResponse.updated && unAlignmentResponse.updated.length > 0"
            },
            {
              "name": "cba.alignmentUpdated",
              "eventData": {
                "viewToReact": "CBATrgContext"
              },
              "condition": "unAlignmentResponse.updated && unAlignmentResponse.updated.length > 0",
              "excludeLocalDataCtx": true
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "EntCBAUnAlignCommandActionFailure"
            }
          ]
        },
        "deps": "js/CadBomOccurrenceAlignmentService"
      },
      "EntCBATopAlignCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "createRelations",
        "inputData": {
          "input": "{{function:getTopAlignmentInput}}"
        },
        "outputData": {
          "createRelationsOutput": ""
        },
        "events": {
          "success": [
            {
              "name": "cba.partDesignAlignment",
              "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "secondarySelection": "",
                "isTopAlignment": true
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBASrcContext.activeTab.id !== 'Awb0ViewerFeature'",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.CBASrcContext.selectedModelObjects[0]}}"
                ]
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBATrgContext.activeTab.id !== 'Awb0ViewerFeature'",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.CBATrgContext.selectedModelObjects[0]}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "EntCBAAlignCommandActionFailure"
            }
          ]
        },
        "deps": "js/CadBomAlignmentService"
      },
      "EntCBATopUnAlignCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteRelations",
        "inputData": {
          "input": "{{function:getTopAlignmentInput}}"
        },
        "outputData": {
          "deleteRelationsOutput": ""
        },
        "events": {
          "success": [
            {
              "name": "cba.partDesignUnAlignment",
              "condition": "ctx.cbaContext.srcStructure && ctx.cbaContext.trgStructure",
              "eventData": {
                "contextName": "{{ctx.aceActiveContext.key}}",
                "secondarySelection": "",
                "isTopAlignment": true
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBASrcContext.activeTab.id !== 'Awb0ViewerFeature'",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.CBASrcContext.selectedModelObjects[0]}}"
                ]
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx.CBATrgContext.activeTab.id !== 'Awb0ViewerFeature'",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.CBATrgContext.selectedModelObjects[0]}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.deleteRelationsOutput.deleted  === undefined",
              "message": "AlignmentDoNotExist"
            }
          ],
          "failure": [
            {
              "message": "EntCBAUnAlignCommandActionFailure"
            }
          ]
        },
        "deps": "js/CadBomAlignmentService"
      },
      "fireReExecuteAlignmentCheck": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "cba.reExecuteAlignmentCheck",
              "eventData": {
                "contextName": "{{data.eventData.contextName}}",
                "secondarySelection": "{{data.eventData.secondarySelection}}",
                "isTopAlignment": "{{data.eventData.isTopAlignment}}"
              }
            }
          ]
        }
      },
      "showTopUnAlignConfirmationMessage": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {}
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "TopUnAlignConfirmationMessage"
            }
          ]
        }
      },
      "showUnAlignmentConfirmationMessage": {
        "actionType": "JSFunction",
        "method": "getUnAlignmentConfirmationInput",
        "deps": "js/CadBomOccurrenceAlignmentService",
        "inputData": {
          "data": "{{function:getUnAlignmentConfirmationInput}}"
        },
        "outputData": {
          "unAlignConfirmationInput": ""
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.CBASrcContext.selectedModelObjects.length === 1 && ctx.CBATrgContext.selectedModelObjects.length === 1 && ctx.CBASrcContext.isRowSelected===true && ctx.CBATrgContext.isRowSelected===true",
              "message": "removeSingleDesignPartAlignmentMessage"
            },
            {
              "condition": "ctx.CBASrcContext.selectedModelObjects.length ===1 && ctx.CBATrgContext.selectedModelObjects.length >1 && ctx.CBASrcContext.isRowSelected===true && ctx.CBATrgContext.isRowSelected===true",
              "message": "removeSingleDesignMultiplePartsAlignmentMessage"
            },
            {
              "condition": "ctx.CBASrcContext.selectedModelObjects.length >1 && ctx.CBATrgContext.selectedModelObjects.length ===1 && ctx.CBATrgContext.isRowSelected===true && ctx.CBASrcContext.isRowSelected===true",
              "message": "removeMultipleDesignsSinglePartAlignmentMessage"
            },
            {
              "condition": "ctx.CBASrcContext.selectedModelObjects.length === 1 && ctx.CBASrcContext.isRowSelected === true && ctx.CBATrgContext.isRowSelected === false",
              "message": "removeSingleDesignAlignmentMessage"
            },
            {
              "condition": "ctx.CBATrgContext.selectedModelObjects.length === 1 && ctx.CBATrgContext.isRowSelected === true && ctx.CBASrcContext.isRowSelected === false",
              "message": "removeSinglePartAlignmentMessage"
            },
            {
              "condition": "ctx.CBASrcContext.selectedModelObjects.length >1 && ctx.CBASrcContext.isRowSelected === true && ctx.CBATrgContext.isRowSelected === false",
              "message": "removeMultipleDesignsAlignmentMessage"
            },
            {
              "condition": "ctx.CBATrgContext.selectedModelObjects.length > 1 && ctx.CBATrgContext.isRowSelected === true && ctx.CBASrcContext.isRowSelected === false",
              "message": "removeMultiplePartsAlignmentMessage"
            }
          ]
        }
      },
      "openAlignmentCheckSettingPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "EntCBAAlignmentCheckSettings",
          "location": "aw_toolsAndInfo"
        }
      },
      "executeAlignmentCheckPostPartCADUnAlign": {
        "actionType": "JSFunction",
        "method": "reExecuteAlignmentCheck",
        "inputData": {
          "objects": "{{function:getAffectedObjectUIDPostPartCADAlignmentUpdate}}"
        },
        "deps": "js/CadBomOccAlignmentCheckService"
      },
      "explodeEBOMStructure": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "CBATrgContext.configContext",
          "value": {
            "startFreshNavigation": true
          }
        },
        "events": {
          "success": [
            {
              "name": "updateContextInfo",
              "eventData": {
                "path": "aceActiveContext.context.transientRequestPref",
                "value": {
                  "jitterFreePropLoad": true,
                  "showExplodedLines": true,
                  "useProductIndex": false,
                  "packSimilarElements": false
                }
              }
            }
          ]
        },
        "deps": "js/appCtxService"
      },
      "executeAlignmentCheck": {
        "actionType": "JSFunction",
        "method": "executeAlignmentCheck",
        "deps": "js/CadBomOccAlignmentCheckService"
      },
      "updateAlignmentCheckStatus": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "cbaContext.alignmentCheckContext",
          "value": {
            "alignmentCheckClicked": true
          }
        },
        "deps": "js/appCtxService"
      },
      "clearFindAlignedIndicators": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "cbaContext.findAlignedContext.findAlignedInfo",
          "value": {}
        },
        "deps": "js/appCtxService"
      },
      "executeAlignmentCheckBatch": {
        "actionType": "batchJob",
        "steps": [
          {
            "action": "clearFindAlignedIndicators"
          },
          {
            "action": "updateAlignmentCheckStatus",
            "condition": "conditions.isSummarizedMode"
          },
          {
            "action": "explodeEBOMStructure",
            "condition": "conditions.isSummarizedMode"
          },
          {
            "action": "executeAlignmentCheck",
            "condition": "conditions.isExplodedMode"
          }
        ]
      },
      "executeAlignmentCheckPostAlignUnAlign": {
        "actionType": "JSFunction",
        "method": "reExecuteAlignmentCheck",
        "inputData": {
          "data": "{{data.eventData.objects}}",
          "isStructureUpdated": "{{data.eventData.isStructureUpdated}}"
        },
        "deps": "js/CadBomOccAlignmentCheckService"
      },
      "processCBAColumnsArrangeSettings": {
        "actionType": "JSFunction",
        "method": "processColumnsArrangeSettings",
        "inputData": {
          "dataProvider": "{{commandContext.dataProvider}}",
          "gridId": "{{commandContext.gridId}}",
          "gridOptions": "{{commandContext.gridOptions}}"
        },
        "events": {
          "success": [
            {
              "name": "openArrangePanelBasic"
            }
          ]
        },
        "deps": "js/CadBomColumnArrangeService"
      },
      "openCBANotification": {
        "actionType": "JSFunction",
        "method": "openCBANotification",
        "inputData": {
          "notificationObject": "{{commandContext.lineItem}}"
        },
        "events": {
          "success": [
            {
              "name": "NotificationMessage.markRead"
            }
          ]
        },
        "deps": "js/CadBomOccAlignmentCheckService"
      },
      "cbaRefreshObjectsAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2007-01-DataManagement",
        "method": "refreshObjects",
        "inputData": {
          "objects": "{{function:getRefreshObjectsInput}}"
        },
        "outputData": {},
        "deps": "js/CadBomAlignmentService"
      },
      "openTreeTableObjectAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.CBASrcContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
        }
      },
      "openTreeTableObjectInNewTab": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.CBASrcContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
        },
        "navigateIn": "newTab"
      },
      "openTreeTableObjectInNewWindow": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.CBASrcContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "openTreeTableBOMObjectAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.CBATrgContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
        }
      },
      "openTreeTableBOMObjectInNewTab": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.CBATrgContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
        },
        "navigateIn": "newTab"
      },
      "openTreeTableBOMObjectInNewWindow": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.CBATrgContext.selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[0]}}"
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "openItemObjectAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}"
        }
      },
      "openItemObjectInNewTabAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.selected.uid}}"
        },
        "navigateIn": "newTab"
      },
      "openItemObjectInNewWindowAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "locale": "{{ctx.userSession.props.fnd0locale.dbValues[0]}}",
          "uid": "{{ctx.selected.uid}}"
        },
        "navigateIn": "newWindow",
        "options": {
          "top": 10,
          "left": 10
        }
      },
      "notifyViewerAlignmentUpdated": {
        "actionType": "JSFunction",
        "method": "notifyStructureViewers",
        "deps": "js/cbaViewerService",
        "inputData": {
          "contextName": "{{data.eventData.contextName}}",
          "primarySelection": "{{data.eventData.primarySelection}}",
          "secondarySelection": "{{data.eventData.secondarySelection}}"
        }
      },
      "updateStructuresPostAlignment": {
        "actionType": "JSFunction",
        "method": "updateStructureAfterAlignment",
        "deps": "js/cbaEditStructureService",
        "inputData": {
          "data": "{{data.eventData}}"
        },
        "outputData": {
          "isStructureUpdated": ""
        },
        "events": {
          "success": [
            {
              "name": "cba.alignmentSuccess",
              "eventData": {
                "objects": "{{data.alignmentResponse.updated}}",
                "isStructureUpdated": "{{data.isStructureUpdated}}"
              },
              "condition": "data.eventData.isAlignment===true"
            },
            {
              "name": "cba.unAlignmentSuccess",
              "eventData": {
                "objects": "{{data.unAlignmentResponse.updated}}",
                "isStructureUpdated": "{{data.isStructureUpdated}}"
              },
              "condition": "data.eventData.isAlignment===false"
            }
          ]
        }
      },
      "Awb0EntCBADeselectAllCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "primaryWorkarea.selectAction",
              "eventData": {
                "selectAll": false
              }
            }
          ]
        }
      },
      "FindAlignedAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "cba.findAlignedObject",
              "eventData": {
                "vmo": "{{ctx.selected}}",
                "contextName": "{{ctx.aceActiveContext.key}}",
                "contextMenuAction": true
              }
            }
          ]
        }
      },
      "resetFindAlignedState": {
        "actionType": "JSFunction",
        "method": "resetFindAlignedState",
        "inputData": {
          "data": "{{data.eventData.objects}}",
          "isStructureUpdated": "{{data.eventData.isStructureUpdated}}"
        },
        "deps": "js/cbaFindAlignedService"
      },
      "copyFnd0AlignedElement": {
        "actionType": "Copy",
        "method": "copyUrlToClipboard",
        "inputData": {
          "objectToCopy": {
            "$adapt": "{{ctx.mselected}}"
          },
          "copyType": "Object"
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "copySingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "copyMultipleSuccessful"
            }
          ]
        }
      },
      "launchRevisionRuleAdminPanel": {
        "actionType": "JSFunction",
        "method": "activateRevisionRuleAdminPanel",
        "deps": "js/revisionRuleAdminPanelService",
        "inputData": {
          "vmo": "{{commandContext.vmo}}",
          "scope": "{{$parent}}"
        }
      },
      "closeRevisionRulePanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "RevisionRuleAdminPanel.closeRevisionRulePanel",
              "eventData": {}
            }
          ]
        }
      },
      "launchAddClausePanel": {
        "actionType": "JSFunction",
        "method": "launchAddClausePanel",
        "deps": "js/addClauseToRevRuleService"
      },
      "deleteRevisionRule": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "RevisionRuleAdmin.deleteRevisionRule",
              "eventData": {}
            }
          ]
        }
      },
      "deleteClause": {
        "actionType": "JSFunction",
        "method": "deleteClause",
        "inputData": {
          "data": "{{commandContext}}"
        },
        "deps": "js/revisionRuleAdminPanelService"
      },
      "launchAddAdminPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "AddRevisionRule",
          "location": "aw_navigation"
        }
      },
      "moveClauseUp": {
        "actionType": "JSFunction",
        "method": "moveClauseUp",
        "inputData": {
          "data": "{{commandContext}}"
        },
        "deps": "js/revisionRuleAdminPanelService"
      },
      "moveClauseDown": {
        "actionType": "JSFunction",
        "method": "moveClauseDown",
        "inputData": {
          "data": "{{commandContext}}"
        },
        "deps": "js/revisionRuleAdminPanelService"
      },
      "launchClausePropertyAddPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "RevisionRuleAdminPanel.launchClauseAddPropertyPanel",
              "eventData": {}
            }
          ]
        }
      },
      "launchAddClausePropertyPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "AddClausePanel.launchAddClausePropertyPanel",
              "eventData": {}
            }
          ]
        }
      },
      "launchClausePropertyReplacePanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "RevisionRuleAdminPanel.launchClauseReplacePropertyPanel",
              "eventData": {}
            }
          ]
        }
      },
      "launchReplaceClausePropertyPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "AddClausePanel.launchReplaceClausePropertyPanel",
              "eventData": {}
            }
          ]
        }
      },
      "removeClauseProperty": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "RevisionRuleAdminPanel.removeClauseProperty",
              "eventData": {}
            }
          ]
        }
      },
      "clausePropertyRemove": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "AddClausePanel.clausePropertyRemove",
              "eventData": {}
            }
          ]
        }
      },
      "launchAddPartitionPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awb0AddPartition",
          "location": "aw_toolsAndInfo"
        }
      },
      "showConfirmationMessage": {
        "actionType": "JSFunction",
        "method": "getDisplayName",
        "deps": "js/typeDisplayName.service",
        "inputData": {
          "modelObject": "{{ctx.selected}}"
        },
        "outputData": {
          "displayNameOfSelectedElement": ""
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.mselected.length === 1",
              "message": "removeSinglePartition"
            },
            {
              "condition": "ctx.mselected.length > 1",
              "message": "removeMultipleSelection"
            }
          ]
        }
      },
      "removeElementsForPartition": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-ActiveWorkspaceBom-2021-12-OccurrenceManagement",
        "method": "removeElements2",
        "inputData": {
          "input": "{{function:getRemoveElements2Input}}"
        },
        "outputData": {
          "removedElementsFromResponse": "{{function:getRemovedElements}}",
          "removePartialErrors": "partialErrors",
          "errorMessage": "{{function:processPartialErrors}}",
          "updated": "updated"
        },
        "events": {
          "success": [
            {
              "name": "performPostRemoveActionForPartition"
            },
            {
              "name": "updateAcePwaWithCreatedPartition",
              "condition": "data.updated != undefined && data.updated.length > 0"
            }
          ],
          "failure": [
            {
              "name": "performPostRemoveActionForPartition"
            },
            {
              "name": "updateAcePwaWithCreatedPartition",
              "condition": "data.updated != undefined && data.updated.length > 0"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "removeFailure"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "removeMessageMultipleFailure"
            }
          ]
        },
        "deps": "js/removeElementService"
      },
      "performPostRemoveActionForPartition": {
        "actionType": "JSFunction",
        "method": "performPostRemoveAction",
        "inputData": {
          "removedElements": "{{data.removedElementsFromResponse}}"
        },
        "deps": "js/removeElementService"
      },
      "updateAcePwaWithCreatedPartition": {
        "actionType": "JSFunction",
        "method": "updateAcePwaWithCreatedPartition",
        "inputData": {
          "removedElements": "{{data.removedElementsFromResponse}}"
        },
        "deps": "js/partitionRemoveElementService"
      },
      "toggleUnassignedMode": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "ace.retainCurrentExpansionState",
              "condition": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && ctx.aceActiveContext.context.currentState.c_uid === ctx.aceActiveContext.context.currentState.t_uid"
            },
            {
              "name": "ace.clearExpansionState"
            },
            {
              "name": "updateCtxWithUnassigned"
            },
            {
              "name": "initializeUnassignedService"
            }
          ]
        }
      },
      "enableSplitModeForUnassigned": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showMultiObject",
        "navigationParams": {
          "uid": "{{ctx.aceActiveContext.context.currentState.uid}}",
          "uid2": "{{ctx.aceActiveContext.context.currentState.uid}}",
          "c_uid": "{{ctx.aceActiveContext.context.currentState.c_uid}}",
          "c_uid2": "{{ctx.aceActiveContext.context.currentState.c_uid}}",
          "pci_uid": "{{ctx.aceActiveContext.context.currentState.pci_uid}}",
          "pci_uid2": "{{ctx.aceActiveContext.context.currentState.pci_uid}}",
          "o_uid": "{{ctx.aceActiveContext.context.currentState.o_uid}}",
          "o_uid2": "{{ctx.aceActiveContext.context.currentState.o_uid}}",
          "t_uid": "{{ctx.aceActiveContext.context.currentState.t_uid}}",
          "t_uid2": "{{ctx.aceActiveContext.context.currentState.t_uid}}",
          "spageId": "{{ctx.aceActiveContext.context.currentState.spageId}}",
          "spageId2": "{{ctx.aceActiveContext.context.currentState.spageId}}"
        }
      },
      "updateCtxWithUnassigned": {
        "actionType": "JSFunction",
        "method": "updatePartialCtx",
        "inputData": {
          "path": "requestPref",
          "value": {
            "unassignedMode": true
          }
        },
        "deps": "js/appCtxService"
      },
      "disableUnassignedMode": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.occmgmtContext.currentState.uid}}",
          "c_uid": "{{ctx.occmgmtContext.currentState.c_uid}}",
          "pci_uid": "{{ctx.occmgmtContext.currentState.pci_uid}}",
          "o_uid": "{{ctx.occmgmtContext.currentState.o_uid}}",
          "t_uid": "{{ctx.occmgmtContext.currentState.t_uid}}",
          "spageId": "{{ctx.occmgmtContext.currentState.spageId}}"
        }
      },
      "initializeUnassignedService": {
        "actionType": "JSFunction",
        "method": "initializeUnassignedService",
        "deps": "js/partitionUnassignedService",
        "events": {
          "success": [
            {
              "name": "enableSplitModeForUnassigned",
              "condition": "ctx.aceActiveContext && !ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature'] && ctx.sublocation.enableOccMgmtCommands === true"
            },
            {
              "name": "disableUnassignedMode",
              "condition": "ctx.splitView && ctx.splitView.mode && ctx.occmgmtContext2.supportedFeatures.Awb0UnassignedFeature !== undefined && ctx.occmgmtContext2.supportedFeatures.Awb0UnassignedFeature === true"
            }
          ]
        }
      },
      "aceShowObjectForSolutionVariant": {
        "actionType": "JSFunction",
        "method": "openSolutionVariant",
        "inputData": {
          "updatedObjs": "{{ctx.aceActiveContext.context.rootSVItemRev}}",
          "page": "{{i18n.occMgmtTitle}}",
          "pageId": "tc_xrt_Content"
        },
        "deps": "js/solutionVariantService"
      },
      "openSVCreateNotification": {
        "actionType": "JSFunction",
        "method": "openSolutionVariantSuccessNotification",
        "inputData": {
          "notificationObject": "{{commandContext.lineItem}}"
        },
        "events": {
          "success": [
            {
              "name": "NotificationMessage.markRead"
            }
          ]
        },
        "deps": "js/solutionVariantService"
      },
      "postProcessSearchSVResults": {
        "actionType": "JSFunction",
        "method": "postProcessSearchSVResponse",
        "deps": "js/solutionVariantService",
        "inputData": {
          "data": "{{data.searchSVItemOutputList}}"
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.aceActiveContext.context.rootSVExists === true",
              "message": "solutionVariantExists"
            }
          ]
        }
      },
      "getSubsetSVR": {
        "actionType": "JSFunction",
        "method": "getSubsetSVR",
        "deps": "js/solutionVariantService",
        "events": {
          "success": [
            {
              "name": "invokeSearchSVSoa"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.aceActiveContext.context.isValidSVR === false",
              "message": "invalidOrIncompleteSVRMessage"
            }
          ],
          "failure": [
            {
              "message": "svCreateFailureMessage"
            }
          ]
        }
      },
      "searchSolutionVariants": {
        "actionType": "TcSoaService",
        "serviceName": "StructureManagement-2018-11-SolutionVariantManagement",
        "method": "searchSolutionVariantItems3",
        "inputData": {
          "searchSVItemInputList": [
            {
              "selectedItemRevision": {
                "uid": "{{ctx.selected.props.awb0Archetype.dbValues[0]}}"
              },
              "searchItemRevision": {
                "uid": "{{ctx.selected.props.awb0Archetype.dbValues[0]}}"
              }
            }
          ],
          "searchParameter": {
            "searchVariantRule": {
              "uid": "{{ctx.aceActiveContext.context.inputVariantRule}}"
            },
            "svCategories": 4,
            "searchPreferences": {
              "outputPageSize": "10",
              "userOrSystemSelected": "0",
              "fullOrPartialMatching": "1"
            }
          }
        },
        "outputData": {
          "searchSVItemOutputList": ""
        },
        "events": {
          "success": [
            {
              "name": "postProcessSearchSVRsponse",
              "eventData": {
                "createSVResponse": "{{data.searchSVItemOutputList}}"
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "svCreateFailureMessage"
            }
          ]
        }
      },
      "goBack": {
        "actionType": "JSFunction",
        "method": "goBack",
        "deps": "js/locationNavigation.service"
      }
    },
    "messages": {
      "reset": {
        "messageType": "WARNING",
        "messageText": "{{i18n.resetConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Reset",
            "text": "{{i18n.reset}}",
            "action": "performResetOfStructure"
          }
        ]
      },
      "soaFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "resetOutsideSWC": {
        "messageType": "WARNING",
        "messageText": "{{i18n.resetConfirmationOutsideSWC}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Reset",
            "text": "{{i18n.reset}}",
            "action": "performResetOfStructure"
          }
        ]
      },
      "removeSingle": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeSingleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "removeElements"
          }
        ],
        "messageTextParams": [
          "{{data.displayNameOfSelectedElement}}"
        ]
      },
      "removeMultiple": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeMultipleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "removeElements"
          }
        ],
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "removeSingleLevel": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeSingleLevelConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemoveLevel}}",
            "action": "removeLevels"
          }
        ],
        "messageTextParams": [
          "{{data.displayNames[0]}}",
          "{{data.displayNames[1]}}"
        ]
      },
      "removeMultipleFailureMessage": {
        "expression": {
          "successCount": "data.removedElementsFromResponse.length",
          "length": "ctx.mselected.length"
        },
        "messageType": "ERROR",
        "messageKey": "removeNotyError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{expression.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.removePartialErrors}}"
        }
      },
      "removeFailure": {
        "messageType": "ERROR",
        "messageText": "{{i18n.removeFailure}}",
        "messageTextParams": [
          "{{data.errorMessage.name}}",
          "{{data.errorMessage.msg}}",
          "{{data.errorMessage.name}}",
          "{{data.errorMessage.msg}}"
        ]
      },
      "removeLevelSuccessfulMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.removeLevelSuccessful}}",
        "messageTextParams": [
          "{{data.displayNames[0]}}"
        ]
      },
      "removeLevelFailure": {
        "messageType": "ERROR",
        "messageText": "{{data.removedLevelElementsFromResponse.ServiceData.partialErrors[0].errorValues[0].message}}"
      },
      "getInfoForInsertLevelFailure": {
        "messageType": "ERROR",
        "messageText": "{{data.insertLevelResponse.ServiceData.partialErrors[0].errorValues[0].message}}"
      },
      "notifyAppliedVariantRuleWithConfigureByProximity": {
        "messageType": "INFO",
        "messageText": "{{i18n.notifyAppliedVariantRuleWithConfigureByProximity}}"
      },
      "removeSingleForElement": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeSingleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "cancelMarkupSOA"
          }
        ],
        "messageTextParams": [
          "{{data.displayNameOfSelectedElement}}"
        ]
      },
      "removeMultipleForElement": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeMultipleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "cancelMarkupSOA"
          }
        ],
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "removeSingleForLevel": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeSingleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "cancelMarkupSOA"
          }
        ],
        "messageTextParams": [
          "{{data.displayNameOfSelectedElement}}"
        ]
      },
      "removeMultipleForLevel": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeMultipleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "cancelMarkupSOA"
          }
        ],
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "ClearAllEffectivities": {
        "messageType": "WARNING",
        "messageText": "{{i18n.clearAllConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.clear}}",
            "action": "awb0RemoveEffectivitiesAction"
          }
        ],
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "SaveWsConfirmPopupForSaveAsRevise": {
        "messageType": "WARNING",
        "messageText": "{{i18n.unsavedChangesForSaveAs}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "continue",
            "text": "{{i18n.continueForUnsavedWorkset}}",
            "action": "continueWithoutSaving"
          },
          {
            "option": "saveandcontinue",
            "text": "{{i18n.saveAndContinue}}",
            "action": "saveAsReviseWorksetAfterSaving"
          }
        ]
      },
      "saveSessionConfirmPopup": {
        "messageType": "WARNING",
        "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
        "messageTextParams": [
          "{{data.partialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "overwrite",
            "text": "{{i18n.OverwriteText}}",
            "action": "overwriteSessionPendingChangesAction"
          },
          {
            "option": "saveas",
            "text": "{{i18n.SaveAsSessionCmd}}",
            "action": "Awb0SaveAsSessionCommandPanelAction"
          }
        ]
      },
      "saveSessionConfirmPopupNoOverwrite": {
        "messageType": "WARNING",
        "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
        "messageTextParams": [
          "{{data.partialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "saveas",
            "text": "{{i18n.SaveAsSessionCmd}}",
            "action": "Awb0SaveAsSessionCommandPanelAction"
          }
        ]
      },
      "concurrentSaveWorksetConfirmPopup": {
        "messageType": "WARNING",
        "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
        "messageTextParams": [
          "{{data.partialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "overwrite",
            "text": "{{i18n.OverwriteText}}",
            "action": "overwriteWorksetPendingChangesAction"
          },
          {
            "option": "saveas",
            "text": "{{i18n.SaveAsSessionCmd}}",
            "action": "saveAsWSOnConcurrentSaveBatch"
          }
        ]
      },
      "concurrentSaveWorksetConfirmPopupNoOverwrite": {
        "messageType": "WARNING",
        "messageText": "{{i18n.saveSessionConfirmPopupMsg}}",
        "messageTextParams": [
          "{{data.partialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "saveas",
            "text": "{{i18n.SaveAsSessionCmd}}",
            "action": "saveAsWSOnConcurrentSaveBatch"
          }
        ]
      },
      "clearAllMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.confirmClearAllMsg}}",
        "messageTextParams": [],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "clear",
            "text": "{{i18n.ClearText}}",
            "action": "clearRecipe"
          }
        ]
      },
      "showSaveSessionInfoMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.saveSessionInfoMsg}}",
        "messageTextParams": [
          "{{ctx.aceActiveContext.context.workingContextObj.props.object_string.dbValues[0]}}"
        ]
      },
      "showSaveWorksetInfoMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.saveSessionInfoMsg}}",
        "messageTextParams": [
          "{{ctx.aceActiveContext.context.worksetTopNode.props.object_string.dbValues[0]}}"
        ]
      },
      "unsavedObjectMessageWithWriteAccessForOpenInVis": {
        "messageType": "WARNING",
        "messageText": "{{i18n.unsavedObjectMessageForOpenInVis}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "continueForUnsaved",
            "text": "{{i18n.continueForUnsaved}}",
            "action": "openInVis"
          },
          {
            "option": "saveAndOpen",
            "text": "{{i18n.saveAndOpen}}",
            "action": "saveAndOpenInVis"
          }
        ]
      },
      "unsavedObjectMessageNoWriteAccessForOpenInVis": {
        "messageType": "WARNING",
        "messageText": "{{i18n.unsavedObjectMessageForOpenInVis}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "cancel",
            "text": "{{i18n.CancelText}}",
            "action": ""
          },
          {
            "option": "continueForUnsaved",
            "text": "{{i18n.continueForUnsaved}}",
            "action": "openInVis"
          }
        ]
      },
      "EntCBAAlignCommandActionFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "EntCBAUnAlignCommandActionFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "AlignmentDoNotExist": {
        "messageType": "ERROR",
        "messageText": "{{i18n.AlignmentDoNotExist}}",
        "messageTextParams": [
          "{{ctx.cbaContext.srcStructure.props.object_string.dbValues[0]}}",
          "{{ctx.cbaContext.trgStructure.props.object_string.dbValues[0]}}"
        ]
      },
      "TopUnAlignConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.SingleDesignPartUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBATopUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{ctx.CBATrgContext.topElement.props.object_string.dbValues[0]}}",
          "{{ctx.CBASrcContext.topElement.props.object_string.dbValues[0]}}"
        ]
      },
      "removeSingleDesignPartAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.SingleDesignPartUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}",
          "{{data.unAlignConfirmationInput[1]}}"
        ]
      },
      "removeSingleDesignMultiplePartsAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.SingleDesignMultiplePartsUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}",
          "{{data.unAlignConfirmationInput[1]}}"
        ]
      },
      "removeMultipleDesignsSinglePartAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.MultipleDesignsSinglePartUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}",
          "{{data.unAlignConfirmationInput[1]}}"
        ]
      },
      "removeSingleDesignAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.SingleDesignUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}"
        ]
      },
      "removeMultipleDesignsAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.MultipleDesignsUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}"
        ]
      },
      "removeSinglePartAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.SinglePartUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}"
        ]
      },
      "removeMultiplePartsAlignmentMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.MultiplePartsUnAlignmentConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "UnAlign",
            "text": "{{i18n.Awb0EntCBAUnAlignToolTip}}",
            "action": "EntCBAUnAlignCommandAction"
          }
        ],
        "messageTextParams": [
          "{{data.unAlignConfirmationInput[0]}}"
        ]
      },
      "alignDesignCommandFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "RemoveDesignActionFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "RemovePartActionFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "setPrimaryDesignFailure": {
        "messageType": "ERROR",
        "messageText": "{{data.partialErorrs[0].errorValues[0].message}}"
      },
      "removeSinglePartition": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeSingleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "removeElementsForPartition"
          }
        ],
        "messageTextParams": [
          "{{data.displayNameOfSelectedElement}}"
        ]
      },
      "removeMultipleSelection": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeMultipleConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.aceRemove}}",
            "action": "removeElementsForPartition"
          }
        ],
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "removeMessageMultipleFailure": {
        "expression": {
          "successCount": "ctx.mselected.length - data.removePartialErrors.length",
          "length": "ctx.mselected.length"
        },
        "messageType": "ERROR",
        "messageKey": "removeNotyError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{expression.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.removePartialErrors}}"
        }
      },
      "svCreateFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "invalidOrIncompleteSVRMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.invalidOrIncompleteVariantRule}}"
      },
      "solutionVariantExists": {
        "messageType": "INFO",
        "messageText": "{{i18n.existingSVConfirmation}}",
        "messageTextParams": [
          "{{ctx.selected.props.awb0ArchetypeRevName.uiValues[0]}}",
          "{{ctx.aceActiveContext.context.productContextInfo.props.awb0CurrentVariantRule.uiValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancelSVCreation}}"
          },
          {
            "option": "Open",
            "text": "{{i18n.openSV}}",
            "action": "aceShowObjectForSolutionVariant"
          }
        ]
      }
    },
    "conditions": {
      "editVariantTableInAceSubUnderECN": {
        "expression": "ctx.isVariantTableEditing === true && conditions.inECNContext && ctx.aceActiveContext.context.supportedFeatures.Awb0DateEffectivityConfigFeature"
      },
      "inECNContext": {
        "expression": "ctx.userSession.props.cm0GlobalChangeContext && ctx.userSession.props.cm0GlobalChangeContext.dbValue !== null && ctx.userSession.props.cm0GlobalChangeContext.dbValue !==''"
      },
      "aceSaveAsorRevise": {
        "expression": "conditions.saveAsorRevise && ctx.sublocation.enableOccMgmtCommands === true && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
      },
      "disableDeleteInAce": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true"
      },
      "disableDeleteCmdVisibility": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.visibleServerCommands.Awp0Delete",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": {
                "$adapt": "ctx.selected"
              },
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$notin": [
                    "ItemRevision"
                  ]
                }
              }
            }
          ]
        }
      },
      "aceDoesNotSupportsSummaryView": {
        "expression": "conditions.supportsSummaryView && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "aceDoesNotSupportsListView": {
        "expression": "conditions.supportsListView && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "aceDoesNotSupportsTableView": {
        "expression": "conditions.supportsTableView && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "aceDoesNotSupportsTableSummaryView": {
        "expression": "conditions.supportsTableSummaryView && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "aceDoesNotSupportsImageView": {
        "expression": "conditions.supportsImageView && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "NotReleasedAssembly": {
        "expression": "!(ctx.selected.props.awb0ArchetypeRevRelStatus && ctx.selected.props.awb0ArchetypeRevRelStatus.dbValues.length > 0)"
      },
      "isCutAction": {
        "expression": "ctx.cutIntent === true"
      },
      "isAwb0SaveAsorReviseApplicable": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && ctx.visibleServerCommands.Awp0ShowSaveAs === true"
      },
      "isAwb0SaveAsorReviseVisible": {
        "expression": "conditions.isAwb0SaveAsorReviseApplicable && !conditions.isDuplicateEnabled"
      },
      "isAwb0DuplicateVisible": {
        "expression": "!ctx.splitView.mode && !conditions.isUpdateSWCCommandVisible && ctx.mselected.length === 1 && ctx.aceActiveContext.context.openedElement.uid === ctx.selected.uid && !ctx.aceActiveContext.context.isDuplicateEnabled && ctx.aceActiveContext.context.supportedFeatures.Awb0InteractiveDuplicateFeature  && !ctx.aceActiveContext.context.isMarkupEnabled && !conditions.isOverrideContextApplied"
      },
      "isSeparatePossible": {
        "expression": "!ctx.visibleServerCommands.Awb0Unpack && !ctx.aceActiveContext.context.isMarkupEnabled && ctx.visibleServerCommands.Awb0AddChildElement && ctx.selected.props.awb0Quantity.dbValues[ 0 ] > 1 && ctx.selected.props.awb0UoM.dbValues[ 0 ] === '' && !conditions.isOverrideContextApplied"
      },
      "enableOpenInteractiveDuplicateNotificationCommandCond": {
        "expression": "commandContext.group.groupName==='CLONE_CONTENT_SUCCESSFUL'"
      },
      "isDuplicateEnabled": {
        "expression": "ctx.aceActiveContext.context.isDuplicateEnabled"
      },
      "hideFrameworkStartEditTableCommandInDuplicateMode": {
        "expression": "conditions.isAwb0StartTreeEditApplicable && conditions.isDuplicateEnabled"
      },
      "hideFrameworkSaveEditAndCancelEditTableCommandInDuplicateMode": {
        "expression": "!conditions.isAcePWAInNonEditMode && conditions.isDuplicateEnabled"
      },
      "isRootNodeInSelected": {
        "expression": "ctx.mselected.length === 1 && ctx.aceActiveContext.context.topElement.uid === ctx.mselected[0].uid"
      },
      "isUnconfiguredNodeInSelected": {
        "expression": "ctx.mselected.length === 1 && ctx.mselected[0].props.awb0Archetype && ctx.mselected[0].props.awb0Archetype.dbValues[ 0 ] === null "
      },
      "isInteractiveDuplicateMenuApplicable": {
        "expression": "conditions.isDuplicateEnabled && !conditions.isRootNodeInSelected && !conditions.isUnconfiguredNodeInSelected && (ctx.mselected.length > 1 || !ctx.selected.props.hideDuplicateCommand)"
      },
      "isInteractiveDuplicateRemoveApplicable": {
        "expression": "conditions.isInteractiveDuplicateMenuApplicable && (ctx.mselected.length > 1 || ctx.selected.props.awb0PendingAction.dbValue !== 5)"
      },
      "isInteractiveDuplicateUndoApplicable": {
        "expression": "conditions.isInteractiveDuplicateMenuApplicable && (ctx.mselected.length > 1 || (ctx.selected.props.awb0PendingAction.dbValue !== 1 && ctx.selected.props.awb0PendingAction.dbValue !== null ))"
      },
      "isInteractiveDuplicateCloneApplicable": {
        "expression": "conditions.isInteractiveDuplicateMenuApplicable && (ctx.mselected.length > 1 || (ctx.selected.props.awb0PendingAction.dbValue !== 0 && ctx.selected.props.awb0PendingAction.dbValue !== 6) )"
      },
      "isInteractiveDuplicateCloneBelowApplicable": {
        "expression": "conditions.isInteractiveDuplicateMenuApplicable && ctx.aceActiveContext.context.supportedFeatures.Awb0ReplaceAndCloneBelowFeature && (ctx.mselected.length > 1 || ctx.selected.props.awb0PendingAction.dbValue !== 6)"
      },
      "isInteractiveDuplicateReplaceApplicable": {
        "expression": "conditions.isInteractiveDuplicateMenuApplicable && ctx.aceActiveContext.context.supportedFeatures.Awb0ReplaceAndCloneBelowFeature && ctx.mselected.length === 1 && ctx.selected.props.awb0PendingAction.dbValue !== 3"
      },
      "Awb0ViewElementEffectivity": {
        "expression": "ctx.visibleServerCommands.Awb0ViewElementEffectivity"
      },
      "isAcePWAInNonEditMode": {
        "expression": "!ctx[ ctx[commandContext.viewKey].vmc.name ].editInProgress()"
      },
      "isACEPWAEditInProgressInTreeOrTable": {
        "expression": "(ctx.occDataProvider || ctx.occDataProvider2)  && (ctx['occDataProvider'].editInProgress() || ctx['occDataProvider2'].editInProgress()) || ctx.TABLE_CONTEXT && ctx['TABLE_CONTEXT'].editInProgress() || ctx['NONE'].editInProgress()"
      },
      "isTopNodeDisplayedInTree": {
        "expression": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && ctx.aceActiveContext.context.showTopNode === true"
      },
      "isSaveAsAndReplaceCommandSupported": {
        "expression": "ctx.visibleServerCommands.Awb0ReplaceElement && conditions.isSelectionPresentInPWA && ctx.selected.props.awb0UnderlyingObject.dbValues[0] && !conditions.isDuplicateEnabled"
      },
      "isRedLineMode": {
        "expression": "ctx.isRedLineMode === 'true'"
      },
      "isAltsSubsProvider": {
        "expression": "ctx.relationContext.relationInfo[0].relationType === 'Awp0AlternatesProvider' || ctx.relationContext.relationInfo[0].relationType === 'Awb0SubstitutesProvider'"
      },
      "isSolutionVariantProvider": {
        "expression": "ctx.relationContext.relationInfo[0].relationType === 'Smc0SolutionVariantProvider'"
      },
      "isWhereUsedContextProvider": {
        "expression": "ctx.relationContext.relationInfo[0].relationType === 'Awb0ContextProvider'"
      },
      "isPartElement": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0PartElement') > -1"
      },
      "isAwb0ConditionalElement": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0ConditionalElement') > -1"
      },
      "awb0CutCommandActive": {
        "expression": "(!conditions.isRootNodeInSelected && conditions.aceCutPasteActiveCondition && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Content'  && conditions.isAwb0ConditionalElement)  || (conditions.cutVisibility && (conditions.isWhereUsedContextProvider || conditions.isAltsSubsProvider || conditions.isSolutionVariantProvider)) "
      },
      "isSelectionPresentInPWA": {
        "expression": "ctx.aceActiveContext && ctx.aceActiveContext.context.openedElement.uid != ctx.selected.uid"
      },
      "isProductSelectedInSWC": {
        "expression": "ctx.aceActiveContext.context.workingContextObj && ctx.aceActiveContext.context.workingContextObj.uid == ctx.selected.props.awb0BreadcrumbAncestor.dbValues[0]"
      },
      "cmdSelectAllEnabled": {
        "expression": "commandContext.dataProviders.icsPerformSearch.viewModelCollection.totalObjectsLoaded > 0 && commandContext.dataProviders.icsPerformSearch.getSelectedObjects().length === commandContext.dataProviders.icsPerformSearch.viewModelCollection.totalObjectsLoaded"
      },
      "isAddChildCommandSupported": {
        "expression": "ctx.visibleServerCommands.Awb0AddChildElement && !ctx.hiddenCommands.Awb0AddChildElement"
      },
      "isAddSiblingCommandSupported": {
        "expression": "ctx.visibleServerCommands.Awb0AddSiblingElement && conditions.isSelectionPresentInPWA && !conditions.isProductSelectedInSWC && !ctx.hiddenCommands.Awb0AddSiblingElement"
      },
      "isAddSiblingProductToSWCCommandSupported": {
        "expression": "ctx.visibleServerCommands.Awb0AddSiblingProductToSavedBookmark && conditions.isSelectionPresentInPWA"
      },
      "isRemoveCommandSupported": {
        "expression": "ctx.visibleServerCommands.Awb0RemoveElement && ( conditions.isSelectionPresentInPWA || conditions.isTopNodeDisplayedInTree ) && !conditions.isDuplicateEnabled"
      },
      "isSingleElementSelected": {
        "expression": "ctx.aceActiveContext.context.selectedModelObjects && ctx.aceActiveContext.context.selectedModelObjects.length === 1"
      },
      "isRemoveLevelCommandSupported": {
        "expression": "conditions.isSingleElementSelected && ctx.visibleServerCommands.Awb0RemoveLevel && !conditions.isMarkupEnabled && conditions.isValidChangeContext && !conditions.isDuplicateEnabled && !conditions.isOverrideContextApplied"
      },
      "isRemoveLevelCtxCommandSupported": {
        "expression": "conditions.isRemoveLevelCommandSupported && ctx.aceActiveContext.context.selectedModelObjects && ctx.aceActiveContext.context.selectedModelObjects.length === 1"
      },
      "isReplaceCommandSupported": {
        "expression": "ctx.visibleServerCommands.Awb0ReplaceElement  && conditions.isSelectionPresentInPWA && !ctx.hiddenCommands.Awb0ReplaceElement && !conditions.isDuplicateEnabled"
      },
      "isAddChildProductToSWCVisible": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && ctx.visibleServerCommands.Awb0AddChildProductToSavedBookmark"
      },
      "isStructureFilterSupported": {
        "expression": "ctx.aceActiveContext.context.supportedFeatures.Awb0StructureFilterFeature === true && !ctx.hiddenCommands.Awb0StructureFilter"
      },
      "isRevisionEffectivityCommandVisibile": {
        "expression": "ctx.visibleServerCommands.Awb0ReleaseStatusEffectivity && conditions.isSelectionPresentInPWA"
      },
      "isRevisionEffectivityCommandInHomeVisibile": {
        "expression": "ctx.visibleServerCommands.Awp0ReleaseStatusEffectivity"
      },
      "isOccEffectivityCommandVisibile": {
        "expression": "conditions.isAwb0ExpressionEffectivityNotVisible && ctx.visibleServerCommands.Awb0OccurrenceEffectivity  && conditions.isSelectionPresentInPWA"
      },
      "isViewOccEffectivityCommandVisibile": {
        "expression": "conditions.isAwb0ExpressionEffectivityNotVisible && ctx.visibleServerCommands.Awb0ViewElementEffectivity  && conditions.isSelectionPresentInPWA"
      },
      "isCreateSWCCommandVisible": {
        "expression": "ctx.visibleServerCommands.Awb0SaveWorkingContext && !ctx.hiddenCommands.isSaveWorkingContextNotSupported"
      },
      "isSaveAsSWCCommandVisible": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && !ctx.hiddenCommands.isSaveWorkingContextNotSupported && ( ctx.visibleServerCommands.Awb0SaveWorkingContextDuplicateInProductContext || ctx.visibleServerCommands.Awb0SaveWorkingContextDuplicateInSavedBookmark )"
      },
      "isUpdateSWCCommandVisible": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && !ctx.hiddenCommands.isSaveWorkingContextNotSupported && ( ctx.visibleServerCommands.Awb0SaveWorkingContextSaveInProductContext || ctx.visibleServerCommands.Awb0SaveWorkingContextSaveInSavedBookmark )"
      },
      "isConfigurationFilterSupported": {
        "expression": "ctx[commandContext.viewKey].supportedFeatures.Awb0EnableConfigurationPanelFeature === true"
      },
      "isResetApplicable": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && ( ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1' || !ctx.aceActiveContext.context.isOpenedUnderAContext )"
      },
      "isAWBEnableAllStructureFeatures": {
        "expression": "ctx.aceActiveContext.context.supportedFeatures.Awb0UnifiedFindInStructure"
      },
      "isNavigationSupported": {
        "expression": "((ctx.aceActiveContext.context.isOpenedUnderAContext) || ( !ctx.aceActiveContext.context.isOpenedUnderAContext && (ctx[commandContext.viewKey].supportedFeatures.Awb0FindInStructure === true || ctx[commandContext.viewKey].supportedFeatures.Awb0FullTextSearchFeature === true)))"
      },
      "isMoveUpVisible": {
        "expression": "commandContext.dataProviders.icsPerformSearch.viewModelCollection.totalObjectsLoaded > 1 && commandContext.dataProviders.icsPerformSearch.getSelectedObjects().length && commandContext.dataProviders.icsPerformSearch.getSelectedObjects().length === 1 && commandContext.dataProviders.icsPerformSearch.getSelectedIndexes()[0] !== 0"
      },
      "isSelectAllVisible": {
        "expression": "commandContext.dataProviders.icsPerformSearch.viewModelCollection.totalObjectsLoaded > 1 && commandContext.dataProviders.icsPerformSearch.selectionModel.isSelectionEnabled()"
      },
      "isMoveDownVisible": {
        "expression": "commandContext.dataProviders.icsPerformSearch.viewModelCollection.totalObjectsLoaded > 1 && commandContext.dataProviders.icsPerformSearch.getSelectedObjects().length && commandContext.dataProviders.icsPerformSearch.getSelectedObjects().length === 1 && ( commandContext.dataProviders.icsPerformSearch.viewModelCollection.totalObjectsLoaded - 1 ) !== commandContext.dataProviders.icsPerformSearch.getSelectedIndexes()[0]"
      },
      "isLiveSearchResultCommandVisible": {
        "expression": "ctx[commandContext.navigateContext.dbValue].showLiveSearchResultCommand && ctx[commandContext.navigateContext.dbValue].supportedFeatures.Awb0UnifiedFindInStructure && ctx[commandContext.navigateContext.dbValue].supportedFeatures.Awb0FindInStructure && ctx[commandContext.navigateContext.dbValue].productContextInfo.props.awb0AlternateConfiguration.dbValues[ 0 ] !== '' && ( commandContext.dataProviders.icsPerformSearch.noResults || commandContext.searchResults !== undefined)"
      },
      "isShowChildrenCommandVisible": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && commandContext.vmo.props.awb0NumberOfChildren && commandContext.vmo.props.awb0NumberOfChildren.dbValue > 0"
      },
      "isAwb0PanelPinned": {
        "expression": "commandContext.pinnedToForm.dbValue"
      },
      "isAwb0PanelUnPinned": {
        "expression": "commandContext.unpinnedToForm.dbValue"
      },
      "isRemoveEffectivityForRelnStatusVisible": {
        "expression": "commandContext.dataProviders.getRelStatusEffectivities.selectedObjects.length>0 && commandContext.activeView=='DisplayAndRemoveEffectivitiesForRelStatus'"
      },
      "isAddEffectivitiesVisible": {
        "expression": "commandContext.activeView=='DisplayAndRemoveEffectivities'"
      },
      "isRemoveEffectivitiesVisible": {
        "expression": "commandContext.dataProviders.getAppliedEffectivities.selectedObjects.length>0 && commandContext.activeView=='DisplayAndRemoveEffectivities'"
      },
      "isClearAllVisible": {
        "expression": "ctx.mselected.length > 1"
      },
      "isRemoveGroupEffectivitiesVisible": {
        "expression": "commandContext.dataProviders.getAppliedGroupEffectivities.viewModelCollection.totalObjectsLoaded >= 1 && commandContext.dataProviders.getAppliedGroupEffectivities.selectedObjects.length > 0 && commandContext.activeView=='GroupEffectivities'"
      },
      "isAwb0AddNewVariantRuleCmdVisible": {
        "expression": "ctx.variantRule.showOverlayCommand && ctx.aceActiveContext.context.supportedFeatures.Awb0MultipleVariantRuleFeature && !ctx.variantRule.isVariantRuleFeatureReadOnly"
      },
      "isAddSubstitutesSupported": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && ctx.visibleServerCommands.Awb0AddSubstitutes && !ctx.hiddenCommands.Awb0AddSubstitutes"
      },
      "isAddSubstitutesSupportedForPWA": {
        "expression": "!conditions.isDuplicateEnabled && ctx.mselected.length === 1 && ctx.sublocation.enableOccMgmtCommands === true && ctx.visibleServerCommands.Awb0AddSubstitutes && !ctx.hiddenCommands.Awb0AddSubstitutes"
      },
      "isTCServerVersion132OrLater": {
        "expression": "ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 2 )"
      },
      "isValidChangeContext": {
        "expression": "conditions.isTCServerVersion132OrLater || !ctx.aceActiveContext.context.isChangeEnabled"
      },
      "isInsertLevelSupported": {
        "expression": "ctx.visibleServerCommands.Awb0InsertParentElement && !conditions.isMarkupEnabled && conditions.isValidChangeContext && !conditions.isDuplicateEnabled && !conditions.isOverrideContextApplied"
      },
      "isRemoveSubstitutesSupported": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.objectSetSource==='Awb0SubstitutesProvider.ItemRevision' && ctx.visibleServerCommands.Awb0RemoveSubstitutes && !ctx.hiddenCommands.Awb0RemoveSubstitutes"
      },
      "isApplyMarkupSupported": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.objectSetSource==='Awb0MarkupForLevelProvider.Fnd0MarkupChange' && commandContext.dataProvider.viewModelCollection.totalObjectsLoaded > 0 && ctx.visibleServerCommands.Awb0ApplyMarkup"
      },
      "isCancelMarkupAtLevelSupported": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.objectSetSource==='Awb0MarkupForLevelProvider.Fnd0MarkupChange' && commandContext.dataProvider.selectedObjects.length > 0 && ctx.selected.type === 'Fnd0MarkupChange'"
      },
      "isCancelMarkupAtElementSupported": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.objectSetSource==='Awb0MarkupProvider.Fnd0MarkupChange' && commandContext.dataProvider.selectedObjects.length > 0 && ctx.selected.type === 'Fnd0MarkupChange'"
      },
      "isACEShowObjectDelegateActive": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
      },
      "isSubsetFilterApplied": {
        "expression": "ctx.aceActiveContext.context.currentState && ctx.aceActiveContext.context.currentState.filter && ctx.aceActiveContext.context.currentState.filter !== ''"
      },
      "isUnpackCmdVisible": {
        "expression": "( ctx.visibleServerCommands.Awb0Unpack || conditions.isPackedHiddenNodeSelected ) && ctx[commandContext.viewKey].supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
      },
      "isUnpackCmdVisibleInCtxMenu": {
        "expression": "( ctx.visibleServerCommands.Awb0Unpack || conditions.isPackedHiddenNodeSelected )  && ctx.aceActiveContext.context.supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
      },
      "isPackedHiddenNodeSelected": {
        "expression": "ctx.aceActiveContext && ctx.aceActiveContext.context.acePartialSelection && ctx.aceActiveContext.context.acePartialSelection.isPackedHiddenNodeSelected === true"
      },
      "isPackCmdVisible": {
        "expression": "ctx.visibleServerCommands.Awb0Pack  && ctx[commandContext.viewKey].supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
      },
      "isPackCmdVisibleInCtxMenu": {
        "expression": "ctx.visibleServerCommands.Awb0Pack && ctx.aceActiveContext.context.supportedFeatures.Awb0PackSimilarElementsFeature && !conditions.isSubsetFilterApplied && !conditions.isSplitViewOpenedWithSameConfiguration"
      },
      "isPackAllCmdVisible": {
        "expression": "ctx[commandContext.viewKey].supportedFeatures.Awb0PackSimilarElementsFeature && !ctx[commandContext.viewKey].supportedFeatures['4GStructureFeature'] && !conditions.isSplitViewOpenedWithSameConfiguration"
      },
      "topElementHasChild": {
        "expression": "ctx[commandContext.viewKey].rootElement.props.awb0NumberOfChildren && ctx[commandContext.viewKey].rootElement.props.awb0NumberOfChildren.dbValues[0] > 0"
      },
      "isUnpackAllCmdVisible": {
        "expression": "ctx[commandContext.viewKey].supportedFeatures.Awb0PackSimilarElementsFeature && !ctx[commandContext.viewKey].supportedFeatures['4GStructureFeature'] && !conditions.isSplitViewOpenedWithSameConfiguration"
      },
      "isACEShowObjectCellDelegateActive": {
        "expression": {
          "$or": [
            {
              "$and": [
                {
                  "$source": "ctx.sublocation.enableOccMgmtCommands",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "commandContext.vmo",
                  "$query": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Awb0Element"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$source": "commandContext.vmo",
              "$query": {
                "$source": "props.awp0Relationship.displayValues",
                "$query": {
                  "$in": [
                    "Awb0ContextProvider"
                  ]
                }
              }
            }
          ]
        }
      },
      "isACEShowObjectCellDelegateForBookmarkActive": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.sublocation.enableOccMgmtCommands",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "commandContext.vmo",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Awb0SavedBookmark"
                  ]
                }
              }
            }
          ]
        }
      },
      "isACEReviseObjectDelegateActive": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.vmo.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && ( ctx.aceActiveContext.context.supportedFeatures.Awb0JitterFreeReviseFeature !== true || ctx.aceActiveContext.context.topElement.uid === ctx.selected.uid )"
      },
      "isACEJitterFreeReviseDelegateActive": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.vmo.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && ctx.aceActiveContext.context.supportedFeatures.Awb0JitterFreeReviseFeature === true && ctx.aceActiveContext.context.topElement.uid !== ctx.selected.uid && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
      },
      "isACEOpenInTabDelegateActive": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && conditions.cmdOpenInNewTabCommandActive && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && !ctx.aw_hosting_enabled"
      },
      "isACEOpenInWindowDelegateActive": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && conditions.cmdOpenInNewWindowCommandActive && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && !ctx.aw_hosting_enabled"
      },
      "isACEOpenInRACDelegateActive": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && conditions.awp0OpenInRACCommandCondition && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
      },
      "isUseSubstituteSupported": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && commandContext.objectSetSource==='Awb0SubstitutesProvider.ItemRevision' && ctx.visibleServerCommands.Awb0UseSubstitute && !ctx.hiddenCommands.Awb0UseSubstitute"
      },
      "aceCutPasteActiveCondition": {
        "expression": "ctx.sublocation.clientScopeURI==='Awb0OccurrenceManagement'"
      },
      "isAdaptedObjectPresent": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isOccurrenceManagementSubLocation",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "props.awb0UnderlyingObject",
                "$query": {
                  "$notNull": true
                }
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "props.awb0UnderlyingObject.dbValues[0]",
                "$query": {
                  "$isNull": true
                }
              }
            }
          ]
        }
      },
      "aceCutEnableCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.awb0CutCommandActive",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isRemoveCommandSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isAltsSubsProvider",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isSolutionVariantProvider",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isWhereUsedContextProvider",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isMarkupEnabled",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isRedLineMode",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Awb0ConditionalElement"
                  ]
                }
              }
            }
          ]
        }
      },
      "isPasteAllowed": {
        "expression": "conditions.isAddChildProductToSWCVisible || conditions.isAddChildCommandSupported"
      },
      "acePasteVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isPasteAllowed",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.awClipBoardProvider",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": "{{ctx.selectedModelTypeRelations}}"
                }
              }
            },
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": 1
              }
            },
            {
              "$source": "ctx.selected.props.is_modifiable.dbValues",
              "$query": {
                "$in": [
                  "1"
                ]
              }
            },
            {
              "$source": "ctx.selectedModelTypeRelations.length",
              "$query": {
                "$gt": 0
              }
            },
            {
              "$source": "ctx.awClipBoardProvider.length",
              "$query": {
                "$gt": 0
              }
            },
            {
              "$source": "ctx.sublocation.clientScopeURI",
              "$query": {
                "$ne": "Awp0ShowObject"
              }
            },
            {
              "$source": "ctx.sublocation.enableOccMgmtCommands",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isMarkupLineSelected": {
        "expression": "conditions.isMarkupEnabled && ( ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0MarkupElement') > -1 || ctx.selected.props.awb0MarkupType.dbValues[0] === '128' || ctx.selected.props.awb0MarkupType.dbValues[0] === '144' )"
      },
      "isMarkupEnabled": {
        "expression": "ctx.aceActiveContext.context.isMarkupEnabled"
      },
      "showMarkupCondition": {
        "expression": "!ctx.aceActiveContext.context.isChangeEnabled && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation' && ctx.aceActiveContext.context.supportedFeatures.Awb0MarkupFeature === true && ctx.aceActiveContext.context.openedElement.type !=='Arm0RequirementElement' && ctx.aceActiveContext.context.openedElement.type !=='Arm0RequirementSpecElement' && ctx.aceActiveContext.context.openedElement.type !=='Arm0ParagraphElement' && !conditions.isDuplicateEnabled && !ctx.hiddenCommands.Awb0ShowMarkup && !conditions.isOverrideContextApplied"
      },
      "hideMarkupForSessionandSplit": {
        "expression": "conditions.isOccurrenceManagementSubLocation && !conditions.isTypeFnd0AppSession && !ctx.splitView.mode"
      },
      "showUnconfigured": {
        "expression": "ctx.aceActiveContext.context.showInEffectiveOcc"
      },
      "showUnconfiguredVariants": {
        "expression": "ctx.aceActiveContext.context.showVariantsInOcc"
      },
      "showSuppressed": {
        "expression": "ctx.aceActiveContext.context.showSuppressedOcc"
      },
      "showIneffectiveCondition": {
        "expression": "ctx.aceActiveContext.context.showInEffectiveOcc !== undefined && ctx[commandContext.viewKey].supportedFeatures[ 'Awb0DisplayToggleFeature' ] === true && !ctx.hiddenCommands.Awb0ShowUnconfiguredByOccEffectivity"
      },
      "showVariantsInCondition": {
        "expression": "ctx.aceActiveContext.context.showVariantsInOcc !== undefined && ctx[commandContext.viewKey].supportedFeatures[ 'Awb0DisplayToggleFeature' ] === true && !ctx.hiddenCommands.Awb0ShowUnconfiguredByVariants"
      },
      "showSuppressedInCondition": {
        "expression": "ctx.aceActiveContext.context.showSuppressedOcc !== undefined && ctx[commandContext.viewKey].supportedFeatures[ 'Awb0DisplayToggleFeature' ] === true &&!ctx.hiddenCommands.Awb0ShowSuppressed"
      },
      "showViewGroupCondition": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
      },
      "isExpandOptionsEnabled": {
        "expression": "conditions.isExpandBelowApplicable  && ctx[commandContext.viewKey].selectedModelObjects && ctx[commandContext.viewKey].selectedModelObjects.length === 1  && ctx[ commandContext.viewKey ].selectedModelObjects[ 0 ].props.awb0NumberOfChildren && ctx[ commandContext.viewKey ].selectedModelObjects[ 0 ].props.awb0NumberOfChildren.dbValues > 0"
      },
      "isParentAssembliesProvider": {
        "expression": "ctx.relationContext.relationInfo[0].relationType == 'ps_parents'"
      },
      "isReferencesProvider": {
        "expression": "ctx.relationContext.relationInfo[0].relationType == 'Awp0ReferencesProvider'"
      },
      "isExpandOptionsEnabledInCtxMenu": {
        "expression": "conditions.isExpandBelowApplicable && !conditions.isParentAssembliesProvider && !conditions.isReferencesProvider && !conditions.isAltsSubsProvider && !conditions.isWhereUsedContextProvider && !conditions.isSolutionVariantProvider && ctx.aceActiveContext.context.selectedModelObjects && ctx.aceActiveContext.context.selectedModelObjects.length === 1  && ctx.aceActiveContext.context.selectedModelObjects[ 0 ].props.awb0NumberOfChildren && ctx.aceActiveContext.context.selectedModelObjects[ 0 ].props.awb0NumberOfChildren.dbValues > 0"
      },
      "isExpandBelowApplicable": {
        "expression": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' )  && ctx.aceActiveContext.context.selectedModelObjects[ 0 ].modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && ctx.aceActiveContext.context.supportedFeatures[ 'Awb0ExpandBelowFeature' ] === true && !(ctx.selected.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1)"
      },
      "isSetInContextCmdVisible": {
        "expression": "conditions.isOccurrenceManagementSubLocation && ctx.visibleServerCommands.Awb0SetInContext && !ctx.splitView.mode && !conditions.isACEPWAEditInProgressInTreeOrTable && !conditions.isMarkupEnabled && !conditions.isDuplicateEnabled"
      },
      "isCBOSCmdVisible": {
        "expression": "ctx.visibleServerCommands.Awb0CBOSCmd"
      },
      "isConfigByProximityCmdVisible": {
        "expression": "ctx.visibleServerCommands.Awb0ConfigureByValidOverlays"
      },
      "isOccurrenceManagementSubLocation": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true"
      },
      "isSignOutVisibleForACE": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && !ctx.signOutDisabled"
      },
      "isRemoveOverrideApplicable": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true"
      },
      "isTreeOrTreeSummaryView": {
        "expression": "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' )"
      },
      "isNotTreeOrTreeeSummaryView": {
        "expression": "!conditions.isTreeOrTreeSummaryView"
      },
      "isOverrideContextApplied": {
        "expression": "ctx.aceActiveContext.context.currentState && ctx.aceActiveContext.context.currentState.incontext_uid && ctx.aceActiveContext.context.currentState.incontext_uid !== ''"
      },
      "isClassicVariantRulePanelDirty": {
        "expression": "ctx.classicCfgContext && ctx.classicCfgContext.isSavePanelDirty && ctx.classicCfgContext.isSavePanelDirty === true"
      },
      "isClassicVariantRuleModifiable": {
        "expression": "ctx.variantConfigContext.initialVariantRule && ctx.variantConfigContext.initialVariantRule.props && ctx.variantConfigContext.initialVariantRule.props.object_string.dbValue !== 'Adhoc_Rule' && ctx.variantConfigContext.initialVariantRule.props.is_modifiable.dbValues[0] === '1'"
      },
      "checkUserAccessForSaveAsVariantRule": {
        "expression": "ctx.classicCfgContext && ctx.classicCfgContext.hasRootModifyAccess && ctx.classicCfgContext.hasRootModifyAccess === '1'"
      },
      "removeAttachmentVisibility": {
        "expression": "!conditions.isAltsSubsProvider && ctx.sublocation.enableOccMgmtCommands === true && ctx.relationContext.relationInfo[0].relationType !== 'Awb0ContextProvider' && ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && (ctx.relationContext.relationInfo[0].relationType !== 'ps_parents' && ctx.relationContext.relationInfo[0].relationType !== 'Awp0ReferencesProvider')"
      },
      "isRemoveAttachmentOverridePerformed": {
        "expression": "ctx.aceActiveContext.attachmentContext === 'removeOverride'"
      },
      "isCutAttachmentPerformed": {
        "expression": "ctx.aceActiveContext.attachmentContext === undefined"
      },
      "isAwb0EditEffectivityVisible": {
        "expression": {
          "$and": [
            {
              "$source": "commandContext.vmo.cellHeader2",
              "$query": {
                "$notinregexp": ";"
              }
            },
            {
              "$source": "commandContext.vmo.type",
              "$query": {
                "$eq": "Effectivity"
              }
            }
          ]
        }
      },
      "isAwb0ExpressionEffectivityVisible": {
        "expression": "ctx.visibleServerCommands.Awp0ExpressionEffectivity && conditions.isSelectionPresentInPWA"
      },
      "isAwb0ExpressionEffectivityNotVisible": {
        "expression": "!ctx.visibleServerCommands.Awp0ExpressionEffectivity"
      },
      "isUsedInStructuresView": {
        "expression": "commandContext.arrangeData.columnConfigId === 'WhereUsedColConfig'"
      },
      "isSplitViewOpenedWithSameConfiguration": {
        "expression": "ctx.splitView.mode && ctx.occmgmtContext && ctx.occmgmtContext2 && ctx.occmgmtContext.productContextInfo && ctx.occmgmtContext2.productContextInfo && ctx.occmgmtContext.productContextInfo.uid === ctx.occmgmtContext2.productContextInfo.uid"
      },
      "isRemoveRevisionCmdSupported": {
        "expression": "commandContext.dataProviders.getChildRevisionDataProvider.selectedObjects.length > 0 "
      },
      "isSaveAsAndReplaceCmdSupported": {
        "expression": "conditions.isSaveAsAndReplaceCommandSupported && conditions.isRevisableOccurrenceStructure"
      },
      "isSaveAsAndReviseActive": {
        "expression": "( conditions.isAwb0SaveAsorReviseApplicable && conditions.isRevisableOccurrenceStructure )  || conditions.isPersistentRevOccSelected"
      },
      "isSaveAsAndReviseVisible": {
        "expression": "conditions.isAwb0SaveAsorReviseApplicable && conditions.isRevisableOccurrenceStructure && ctx.selected.props.awb0Archetype.dbValues[0]!==null"
      },
      "revOccRemoveAlternateCommandCondition": {
        "expression": "commandContext.objectSetSource ==='Awp0AlternatesProvider.Item' && ctx.visibleServerCommands.Awp0RemoveAlternate && conditions.isRevisableOccurrenceStructure"
      },
      "isRevisableOccurrenceStructure": {
        "expression": "ctx.aceActiveContext.context.supportedFeatures.Awb0RevisibleOccurrenceFeature === true"
      },
      "isRevOccSaveWorkingContextVisible": {
        "expression": "conditions.isCreateSWCCommandVisible && conditions.isRevisableOccurrenceStructure"
      },
      "isRevOccInspectionDefVisible": {
        "expression": "ctx.mselected.length === 1 && conditions.revOccDuplicatedAqc0IsOccStructure && conditions.isRevisableOccurrenceStructure"
      },
      "revOccDuplicatedAqc0IsOccStructure": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1 && conditions.revOccDuplicatedIsOccMgmtSublocation"
      },
      "isRevOccOpenInRichClientVisible": {
        "expression": "( conditions.isACEOpenInRACDelegateActive && conditions.isRevisableOccurrenceStructure) || conditions.isRevOccInContextOfChange"
      },
      "isRevOccCreateRecipeVisible": {
        "expression": "conditions.revOccDuplicatedCreateRecipeFromBomSelection && conditions.revOccDuplicatedIsTcReleaseAtLeast122Version && conditions.isRevisableOccurrenceStructure && conditions.isRootElementPartProduct"
      },
      "revOccDuplicatedCreateRecipeFromBomSelection": {
        "expression": "ctx.occmgmtContext && ctx.occmgmtContext.selectedModelObjects && ctx.occmgmtContext.selectedModelObjects.length > 0"
      },
      "isRevOccGenTraceMatVisible": {
        "expression": "( conditions.revOccDuplicatedIsCreateTracelinkCommandVisibleAce && conditions.isRevisableOccurrenceStructure ) || conditions.isRevOccInContextOfChange"
      },
      "revOccDuplicatedIsCreateTracelinkCommandVisibleAce": {
        "expression": "ctx.occmgmtContext  && (ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0ConditionalElement' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) > -1)"
      },
      "isRevOccRevisionEffectivityCmdVisibile": {
        "expression": "conditions.isRevisionEffectivityCommandVisibile && conditions.isRevisableOccurrenceStructure"
      },
      "isRevOccInContextOfChange": {
        "expression": "ctx.pselected.modelType.typeHierarchyArray.indexOf( 'ChangeItemRevision' ) >-1 && conditions.isPersistentRevOccSelected"
      },
      "isRevOccStructureOrRevOccInContextOfChange": {
        "expression": "conditions.isRevOccInContextOfChange || conditions.isRevisableOccurrenceStructure"
      },
      "isRevOccAwb0SetInContextCmdVisible": {
        "expression": "conditions.isSetInContextCmdVisible && conditions.isRevisableOccurrenceStructure"
      },
      "revOccDuplicatedIsRunningHosted": {
        "expression": "(ctx.aw_hosting_enabled===true)"
      },
      "revOccDuplicatedIsSEECHostType": {
        "expression": "(ctx.aw_host_type.toUpperCase() === 'SEEC')"
      },
      "revOccDuplicatedIsOccMgmtSublocation": {
        "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
      },
      "revOccDuplicatedAwp0OpenInSEECStandAloneNonAceModeCommandCondition": {
        "expression": "!(conditions.revOccDuplicatedIsRunningHosted && conditions.revOccDuplicatedIsSEECHostType ) && conditions.revOccDuplicatedIsOccMgmtSublocation === false && ctx.visibleServerCommands.Awp0OpenInSEEC && conditions.isRevisableOccurrenceStructure"
      },
      "isRevOccOverriddenCm1ShowCreateChangeInContextCmdActive": {
        "expression": "(ctx.visibleServerCommands.Cm1ShowCreateChangeInContext===true) && conditions.isRevisableOccurrenceStructure"
      },
      "revOccOverriddenSc1CreateCmdCond": {
        "expression": "conditions.isRootElementPartProduct && conditions.isRevisableOccurrenceStructure"
      },
      "isRootElementPartProduct": {
        "expression": "ctx.aceActiveContext.context.supportedFeatures.ProductEBOMFeature===true"
      },
      "revOccOverriddenAwb0SeparateCmdCond": {
        "expression": "conditions.isSeparatePossible && conditions.isRevisableOccurrenceStructure"
      },
      "isPersistentRevOccSelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Fnd0AbstractOccRevision' ) > -1"
      },
      "isSub0SubscribeSupported": {
        "expression": "conditions.isRevisableOccurrenceStructure || conditions.isPersistentRevOccSelected"
      },
      "isAwb0ShowDuplicateCmdSupportedForProductUsage": {
        "expression": "conditions.isAwb0DuplicateVisible && conditions.isRootElementPartProduct && conditions.isRevisableOccurrenceStructure"
      },
      "revOccDuplicatedIsTcReleaseAtLeast122Version": {
        "expression": "(ctx.tcSessionData.tcMajorVersion >= 12 && ctx.tcSessionData.tcMinorVersion >= 2) || ctx.tcSessionData.tcMajorVersion >=13"
      },
      "revOccDuplicatedIsInteractiveDuplicateMenuApplicable": {
        "expression": "conditions.isDuplicateEnabled && !conditions.isRootNodeInSelected && conditions.isUnconfiguredNodeInSelected && (ctx.mselected.length > 1 || !ctx.selected.props.hideDuplicateCommand) && conditions.isRevisableOccurrenceStructure"
      },
      "revOccDuplicatedIsReplaceAndCloneBelowApplicable": {
        "expression": "conditions.revOccDuplicatedIsInteractiveDuplicateMenuApplicable && ctx.aceActiveContext.context.supportedFeatures.Awb0ReplaceAndCloneBelowFeature"
      },
      "isRevOccJitterFreeReviseDelegateActive": {
        "expression": "conditions.isRevisableOccurrenceStructure && commandContext.vmo.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1 && ctx.aceActiveContext.context.supportedFeatures.Awb0JitterFreeReviseFeature === true && ctx.aceActiveContext.context.topElement.uid !== ctx.selected.uid && ctx.selected.modelType.typeHierarchyArray.indexOf('Awb0Element') > -1"
      },
      "isImportCmdVisible": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1"
      },
      "checkModelType": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1)"
      },
      "isValidGroupForExcelImport": {
        "expression": "ctx.userSession.props.group_name.dbValues[0] === 'dba' || ctx.userSession.props.group_name.dbValues[0] === 'Project Management' || ctx.userSession.props.group_name.dbValues[0] === 'TC Admin'"
      },
      "enableImportBOMCommand": {
        "expression": "conditions.isImportCmdVisible && conditions.checkModelType && conditions.isValidGroupForExcelImport"
      },
      "isImportPreviewSublocation": {
        "expression": "ctx.sublocation.clientScopeURI === 'Awb0ImportPreview'"
      },
      "is4GDObjectInImportBOM": {
        "expression": "ctx.selected.uid.endsWith('AWB4GD')"
      },
      "disableArm0Export": {
        "expression": "conditions.isImportPreviewSublocation && ctx.workspace.workspaceId !== 'TcRMWorkspace' && ctx.selected.modelType && ( ctx.locationContext.modelObject && ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf( 'Folder' ) !== -1 || ctx.aceActiveContext && !ctx.splitView.mode ) && !conditions.is4GDObjectInImportBOM"
      },
      "disableExcelRoundTripInImportPreviewSublocation": {
        "expression": "conditions.isImportPreviewSublocation && conditions.importBOMRoundTripCommandDisablityCond"
      },
      "importBOMRoundTripCommandDisablityCond": {
        "expression": "!conditions.importBOMParameterTableEditInProgress && (conditions.importBOMMultipleProductSelectedDisable || conditions.importBOMIsParamProjectSelectedDisable || conditions.isParamGroupDisableInImportPreview || conditions.importBOMParamProxySelectedDisable || conditions.importBOMRoundTripParameterDefVisibility || conditions.importPreviewParameterTableIsVisible || conditions.importBOMIsInVRContextExceptStudy )"
      },
      "importBOMParameterTableEditInProgress": {
        "expression": "ctx.NONE && ctx['NONE'].editInProgress() || ctx['ATTRIBUTE_TABLE_CONTEXT'] && ctx['ATTRIBUTE_TABLE_CONTEXT'].editInProgress() || ctx.isMappingTableEditing || ctx['MAPPING_TABLE_CONTEXT'] && ctx['MAPPING_TABLE_CONTEXT'].editInProgress()"
      },
      "importBOMMultipleProductSelectedDisable": {
        "expression": "ctx.mselected.length > 0 && ctx.mselected[ctx.mselected.length -1].modelType.typeHierarchyArray.indexOf('Awb0Element') > -1 && ctx.Att1ShowMappedAttribute"
      },
      "importBOMIsParamProjectSelectedDisable": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamProject' ) > -1"
      },
      "isParamGroupDisableInImportPreview": {
        "expression": "ctx.parammgmtctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamGroup' ) > -1"
      },
      "importBOMParamProxySelectedDisable": {
        "expression": "ctx.parammgmtctx.mselected && ctx.parammgmtctx.mselected.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att1AttributeAlignmentProxy' ) > -1"
      },
      "importBOMRoundTripParameterDefVisibility": {
        "expression": "conditions.importBOMIsParamDictionarySelected || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1 || (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Fnd0HomeFolder' ) > -1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Att0AttributeDefRevision' ))"
      },
      "importPreviewParameterTableIsVisible": {
        "expression": "ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_AttributesForDCP'"
      },
      "importBOMIsInVRContextExceptStudy": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 || ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf( 'Crt0VldnContractRevision' ) > -1 ) && !conditions.importBOMStudyTabContext"
      },
      "importBOMIsParamDictionarySelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Att0ParamDictionary' ) > -1"
      },
      "importBOMStudyTabContext": {
        "expression": "conditions.importBOMStudyTabContextPre124 || conditions.importBOMStudyTabContextFor124"
      },
      "importBOMStudyTabContextPre124": {
        "expression": "ctx.xrtPageContext && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Studies' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Studies')"
      },
      "importBOMStudyTabContextFor124": {
        "expression": "ctx.xrtPageContext && conditions.importBOMIsTcReleaseAtLeast124 && ( ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Requests' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Requests')"
      },
      "importBOMIsTcReleaseAtLeast124": {
        "expression": "ctx.tcSessionData.tcMajorVersion > 12 || ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 4"
      },
      "isActionOnSelectedLineIsNew": {
        "expression": "ctx.selected.props[i18n.actionColumn].uiValue !== i18n.aceImportPreviewNewAction"
      },
      "isReferenceActionApplicableOnContextInImportPreview": {
        "expression": "conditions.isImportPreviewSublocation && ( ctx.mselected.length > 1 || ( conditions.isActionOnSelectedLineIsNew && ctx.selected.props[i18n.actionColumn].uiValue !== i18n.aceImportPreviewReferenceContentMenu ) )"
      },
      "isReviseActionMenuApplicableOnContextInImportPreview": {
        "expression": "conditions.isImportPreviewSublocation && ( ctx.mselected.length > 1 || ( conditions.isActionOnSelectedLineIsNew && ctx.selected.props[i18n.actionColumn].uiValue !== i18n.aceImportPreviewReviseContentMenu ) )"
      },
      "isOverwriteActionMenuApplicableOnContextInImportPreview": {
        "expression": "conditions.isImportPreviewSublocation && ( ctx.mselected.length > 1 || ( conditions.isActionOnSelectedLineIsNew && ctx.selected.props[i18n.actionColumn].uiValue !== i18n.aceImportPreviewOverwriteContentMenu ) )"
      },
      "isTreeModeSupported": {
        "expression": "ctx.ViewModeContext && (ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
      },
      "isTableModeSupported": {
        "expression": "ctx.ViewModeContext && (ctx.ViewModeContext.ViewModeContext === 'TableView' || ctx.ViewModeContext.ViewModeContext === 'TableSummaryView')"
      },
      "isInlineAuthoringMode": {
        "expression": "ctx.isInlineAuthoringMode && ctx.isInlineAuthoringMode === true"
      },
      "isInlineAuthoringSupported": {
        "expression": "!conditions.isInSplitMode && ctx.aceActiveContext.context.supportedFeatures.Awb0InlineAuthoringFeature"
      },
      "isAddChildRowCommandSupported": {
        "expression": "( ( conditions.isInlineMultiRowEnabled && conditions.isInlineAddChildMode ) || ( !ctx.editInProgress && !conditions.isInlineAuthoringMode ) ) && conditions.isTreeModeSupported && conditions.isAddChildCommandSupported && conditions.isInlineAuthoringSupported && !conditions.isTopSelectedAndOrganisationSchemeSet"
      },
      "isAddSiblingRowCommandSupported": {
        "expression": "( ( conditions.isInlineAuthoringMode && conditions.isInlineMultiRowEnabled && !conditions.isInlineAddChildMode ) || ( !ctx.editInProgress && !conditions.isInlineAuthoringMode ) ) && (conditions.isTreeModeSupported || conditions.isTableModeSupported) && conditions.isAddSiblingCommandSupported && conditions.isInlineAuthoringSupported && !conditions.isFirstLevelPartition"
      },
      "isInlineMultiRowEnabled": {
        "expression": "data.preferences.AWC_InlineMultiRowEnabled[0] === 'true'"
      },
      "isInlineAddChildMode": {
        "expression": "ctx.isInlineAddChildMode && ctx.isInlineAddChildMode === true"
      },
      "isRemoveRowCommandSupported": {
        "expression": "(conditions.isTableModeSupported || conditions.isTreeModeSupported) && conditions.isInlineAuthoringMode === true"
      },
      "isSaveRowCommandSupported": {
        "expression": "conditions.isInlineAuthoringMode === true"
      },
      "isValidForAddRef": {
        "expression": "commandContext.propertyName === 'awb0Archetype'"
      },
      "isStartEditAllowedInInlineAuthoringMode": {
        "expression": "conditions.isInlineAuthoringMode && (conditions.isTreeModeSupported || conditions.isTableModeSupported)  && ctx.visibleServerCommands.Awp0StartEdit"
      },
      "isObjectInfoCmdAllowedInInlineAuthoringMode": {
        "expression": "conditions.isInlineAuthoringMode && conditions.cmdObjectInfoActive"
      },
      "isInlineRemoveRowCellCommandSupported": {
        "expression": "commandContext.vmo.isInlineRow && conditions.isRemoveRowCommandSupported"
      },
      "isInlineRemoveElementCommandSupported": {
        "expression": "conditions.isRemoveCommandSupported && conditions.isInlineAuthoringMode"
      },
      "isInlineReplaceRevOccElementCommandSupported": {
        "expression": "conditions.isReplaceCommandSupported && conditions.isInlineAuthoringMode"
      },
      "isSaveAsOrReviseSupportedInInlineAuthoring": {
        "expression": "conditions.isAwb0SaveAsorReviseApplicable && conditions.isInlineAuthoringMode"
      },
      "isAddChildOrSiblingSupportedInInlineAuthoring": {
        "expression": "(conditions.isAddChildCommandSupported || conditions.isAddSiblingCommandSupported) && conditions.isInlineAuthoringMode"
      },
      "isMarkupSupportedInInlineAuthoring": {
        "expression": "conditions.showMarkupCondition && conditions.isInlineAuthoringMode"
      },
      "isShowDuplicateSupportedInInlineAuthoring": {
        "expression": "conditions.isAwb0DuplicateVisible && conditions.isInlineAuthoringMode"
      },
      "isExpandSupportedInInlineAuthoring": {
        "expression": "conditions.isExpandBelowApplicable && conditions.isInlineAuthoringMode"
      },
      "isTopSelectedAndOrganisationSchemeSet": {
        "expression": "(conditions.isRootNodeInSelected && ctx.aceActiveContext.context.productContextInfo.props.fgf0PartitionScheme && ctx.aceActiveContext.context.productContextInfo.props.fgf0PartitionScheme.dbValues[0] !== null)"
      },
      "isFirstLevelPartition": {
        "expression": "(ctx.selected.type === 'Fgf0PartitionElement' && ctx.selected.props.awb0Parent.dbValues[0] === ctx.aceActiveContext.context.topElement.uid)"
      },
      "areSelectionsValidForSplitting": {
        "expression": "!ctx.isNarrowMode && conditions.areElementsSelected || conditions.areItemRevisionsSelected"
      },
      "isPackUnpackParentChildInfoReceived": {
        "expression": "ctx.aceActiveContext.context.packUnpackResponseParentChildInfo && ctx.aceActiveContext.context.packUnpackResponseParentChildInfo.length > 0"
      },
      "areItemRevisionsSelected": {
        "expression": "ctx.mselected && ctx.mselected.length === 2 && ctx.mselected[0].modelType.typeHierarchyArray.includes('ItemRevision') && ctx.mselected[1].modelType.typeHierarchyArray.includes('ItemRevision')"
      },
      "areElementsSelected": {
        "expression": "ctx.mselected && ctx.mselected.length === 2 && ctx.sublocation.enableOccMgmtCommands === true && ctx.aceActiveContext && !ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature'] && ctx.mselected[0].modelType.typeHierarchyArray.includes('Awb0Element') && ctx.mselected[1].modelType.typeHierarchyArray.includes('Awb0Element')"
      },
      "isSplitCommandVisible": {
        "expression": "ctx.aceActiveContext && !ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature'] && ctx.sublocation.enableOccMgmtCommands === true && !ctx.aceActiveContext.context.isOpenedUnderAContext && !ctx.hiddenCommands.awb0SplitRootCmd"
      },
      "isInSplitMode": {
        "expression": "ctx.splitView && ctx.splitView.mode"
      },
      "isAwb0TreeEditInProgress": {
        "expression": "ctx[ ctx[commandContext.viewKey].vmc.name ].editInProgress()"
      },
      "isAwb0AnyTreeEditInProgress": {
        "expression": "ctx['occDataProvider'].editInProgress() || ctx['occDataProvider2'].editInProgress()"
      },
      "isAwb0SummaryEditIsInProgress": {
        "expression": "ctx['NONE'].editInProgress()"
      },
      "isAwb0TreeEditNotInProgress": {
        "expression": "!ctx['NONE'].editInProgress() && !ctx['occDataProvider'].editInProgress() && !ctx['occDataProvider2'].editInProgress()"
      },
      "canAwb0TreeEditStart": {
        "expression": "ctx[ ctx[commandContext.viewKey].vmc.name ].canStartEdit()"
      },
      "isAwb0StartEditApplicable": {
        "expression": "ctx.visibleServerCommands.Awp0StartEditTable && conditions.canAwb0TreeEditStart && conditions.isAwb0TreeEditNotInProgress  && ctx.ViewModeContext.ViewModeContext === 'TreeView'"
      },
      "isAwb0StartTreeEditApplicable": {
        "expression": "ctx.visibleServerCommands.Awp0StartEditTable && conditions.canAwb0TreeEditStart && conditions.isAwb0TreeEditNotInProgress  && ( ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' || ctx.ViewModeContext.ViewModeContext === 'TreeView' )"
      },
      "isAwb0StartSummaryEditApplicable": {
        "expression": "conditions.isStartEditSummaryAllowed && conditions.isAwb0AnyTreeEditInProgress"
      },
      "isAwb0StartSummaryEditVisible": {
        "expression": "conditions.isStartEditSummaryAllowed && conditions.isAwb0TreeEditNotInProgress"
      },
      "awb0SelectAllCondition": {
        "expression": "conditions.awp0SelectAllCondition && ctx.splitView && ctx.splitView.mode"
      },
      "awb0DeselectAllCondition": {
        "expression": "conditions.awp0DeselectAllCondition && ctx.splitView && ctx.splitView.mode"
      },
      "awb0MultiSelectEnableCondition": {
        "expression": "conditions.awp0MultiSelectEnableCondition && ctx.splitView && ctx.splitView.mode"
      },
      "awb0DisableMultiSelectCondition": {
        "expression": "conditions.awp0MultiSelectDisableCondition && ctx.splitView && ctx.splitView.mode"
      },
      "aceSaveAsReviseWorkset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.aceSaveAsorRevise",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "doesdataProviderHasSnapshotSelected": {
        "expression": "(ctx.getRecentObjsProvider.selectedObjects.length === 1 && ctx.getRecentObjsProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf('Fnd0Snapshot')> -1) || (ctx.getClipboardProvider.selectedObjects.length === 1 && ctx.getClipboardProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf('Fnd0Snapshot')> -1) ||  (ctx.getFavoriteProvider.selectedObjects.length === 1 && ctx.getFavoriteProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf('Fnd0Snapshot')> -1) "
      },
      "isSnapshotSelectedInQuickAccess": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.sidenavCommandId",
              "$query": {
                "$eq": "cmdQuickAccess"
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.doesdataProviderHasSnapshotSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": {
                    "$adapt": "commandContext.vmo"
                  },
                  "$query": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Fnd0Snapshot"
                      ]
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "isSnapshotInGlobalSearch": {
        "expression": "(commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1 )||commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1"
      },
      "showSnapshotInAce": {
        "expression": "ctx.aceActiveContext.context.currentState.spageId ==='3D'"
      },
      "showSnapshotInNonAce": {
        "expression": "ctx.aceActiveContext.context.currentState.spageId !=='3D'"
      },
      "isSnapshotInGlobalSearchOrInDiscussion3D": {
        "expression": "conditions.isSnapshotInGlobalSearch && conditions.showSnapshotInAce"
      },
      "isProductSnapshotShownTable": {
        "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1"
      },
      "isHandlerActiveForSnapshot": {
        "expression": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition && commandContext &&  commandContext.vmo && commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1 && ctx.sublocation.clientScopeURI!=='Awb0OccurrenceManagement' "
      },
      "isAwb0CreateWorksetAllowed": {
        "expression": "ctx.aceActiveContext.context.supportedFeatures.Awb0CreateWorkset === true"
      },
      "hideCreateWorksetInMarkupMode": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isAwb0CreateWorksetAllowed",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isMarkupEnabled",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "hideReplaceForSubsetAndWorksetAtNonAce": {
        "expression": "conditions.isReplaceCommandSupported && ( conditions.isWorksetSelectedAtNonAce || ( conditions.isTypeFnd0Workset && ctx.selected && ctx.selected.props.awb0Parent.dbValues[0] === ctx.aceActiveContext.context.topElement.uid ) )"
      },
      "isTcReleaseAtLeast12_4": {
        "expression": "(ctx.tcSessionData.tcMajorVersion >=12 && ctx.tcSessionData.tcMinorVersion >=4) || ctx.tcSessionData.tcMajorVersion >=13"
      },
      "isNotTreeWithSummaryView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
      },
      "isTcReleaseAtLeast13_2": {
        "expression": "(ctx.tcSessionData.tcMajorVersion >=13 && ctx.tcSessionData.tcMinorVersion >=2) || ctx.tcSessionData.tcMajorVersion >=14"
      },
      "isTcReleaseAtLeast13_3": {
        "expression": "(ctx.tcSessionData.tcMajorVersion >=13 && ctx.tcSessionData.tcMinorVersion >=3) || ctx.tcSessionData.tcMajorVersion >=14"
      },
      "isTcReleaseLessThan13_3": {
        "expression": "(ctx.tcSessionData.tcMajorVersion <= 13 && ctx.tcSessionData.tcMinorVersion < 3)"
      },
      "isTcReleaseAtLeast14_1": {
        "expression": "(ctx.tcSessionData.tcMajorVersion >=14 && ctx.tcSessionData.tcMinorVersion >=1)"
      },
      "isTypeFnd0AppSession": {
        "expression": "ctx.aceActiveContext.context.topElement.modelType.typeHierarchyArray.indexOf( 'Fnd0AppSession' ) > -1"
      },
      "isFnd0AppSessionSelected": {
        "expression": "ctx.mselected.length === 1 && ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0AppSession' ) > -1"
      },
      "isAwb0CreateSessionAllowed": {
        "expression": "ctx.aceActiveContext.context.topElement.modelType.typeHierarchyArray.indexOf( 'Awb0ConditionalElement' ) > -1 && !ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature']  && conditions.isTcReleaseAtLeast12_4 && !ctx.splitView.mode && !conditions.isTypeFnd0Workset && !conditions.isWorksetSelectedAtNonAce"
      },
      "isAwb0SaveAsSessionAllowed": {
        "expression": "conditions.isTypeFnd0AppSession && conditions.isTcReleaseAtLeast12_4"
      },
      "hideSWCCommandForSession": {
        "expression": "conditions.isSaveAsSWCCommandVisible && conditions.isAwb0SaveAsSessionAllowed"
      },
      "isWriteAccessProvided": {
        "expression": "ctx.aceActiveContext.context.modelObject.props.is_modifiable.dbValues[0]==='1'"
      },
      "isWriteAccessProvidedOnWorksetRev": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.is_modifiable.dbValues[0] === '1'"
      },
      "isWriteAccessNotProvidedOnWorksetRev": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.is_modifiable.dbValues[0] === '0'"
      },
      "isWriteAccessProvidedOnWorksetItem": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetItemTopNode.props.is_modifiable.dbValues[0] === '1'"
      },
      "isWriteAccessNotProvidedOnWorksetItem": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetItemTopNode.props.is_modifiable.dbValues[0] === '0'"
      },
      "isPendingChanges": {
        "expression": "ctx.aceActiveContext.context.workingContextObj && ctx.aceActiveContext.context.workingContextObj.props.awb0PendingChanges.dbValues[0] === '1'"
      },
      "isPendingChangesOnWorkset": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode && ctx.aceActiveContext.context.worksetTopNode.props.fnd0PendingChanges.dbValues[0] === '1'"
      },
      "isSaveSessionActive": {
        "expression": "conditions.isTcReleaseAtLeast12_4 && conditions.isTypeFnd0AppSession && !conditions.isFnd0SnapshotOpened && conditions.isWriteAccessProvided "
      },
      "isSaveSessionApplicable": {
        "expression": "conditions.isSaveSessionActive && conditions.isPendingChanges"
      },
      "isEditWorkingContextVisible": {
        "expression": "conditions.isUpdateSWCCommandVisible && conditions.isTypeFnd0AppSession"
      },
      "disableCutOnProductInSessionInContains": {
        "expression": {
          "$and": [
            {
              "$source": "ctx",
              "$query": {
                "$and": [
                  {
                    "$source": "xrtPageContext.secondaryXrtPageID",
                    "$query": {
                      "$eq": "tc_xrt_Overview"
                    }
                  },
                  {
                    "$source": "xrtPageContext.primaryXrtPageID",
                    "$query": {
                      "$eq": "tc_xrt_Content"
                    }
                  },
                  {
                    "$source": "xrtSummaryContextObject.modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Fnd0AppSession"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "isOpenInRichClientVisibleForSession": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.awp0OpenInRACCommandCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0AppSession",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isBOMWorkset": {
        "expression": "(ctx.aceActiveContext !== undefined && ctx.aceActiveContext.context.worksetTopNode !== undefined) || (ctx.mselected.length === 1 && ctx.sublocation.clientScopeURI !== 'Awb0OccurrenceManagement' && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0Workset' ) > -1 ))"
      },
      "isWorksetSelected": {
        "expression": "ctx.mselected.length === 1 && ctx.aceActiveContext.context.worksetTopNode !== undefined && ctx.mselected[0].props.awb0UnderlyingObject.dbValues[0]=== ctx.aceActiveContext.context.worksetTopNode.uid"
      },
      "isSelectionUnderWorksetContext": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode !== undefined"
      },
      "isItemRevisionSelectedinSWAForWorkset": {
        "expression": {
          "$or": [
            {
              "$and": [
                {
                  "$source": "conditions.isWorksetItemrevisionSelectedAceSWA",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.removeAttachmentVisibility",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "conditions.isWorksetItemRevisionSelectedNonAceSWA",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isWorksetItemrevisionSelectedAceSWA": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode !== undefined && ctx.mselected[0].modelType.name === 'ItemRevision' && ctx.sublocation.clientScopeURI === 'Awb0OccurrenceManagement'"
      },
      "isWorksetItemRevisionSelectedNonAceSWA": {
        "expression": "ctx.pselected.modelType.name === 'Fnd0WorksetRevision' && ctx.sublocation.clientScopeURI !== 'Awb0OccurrenceManagement' && ctx.mselected[0].modelType.name === 'ItemRevision'"
      },
      "isWorksetNotInSelectedObjects": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$all": {
                  "$source": "props.awb0UnderlyingObject.dbValues[0]",
                  "$query": {
                    "$neq": "{{ctx.aceActiveContext.context.worksetTopNode.uid}}"
                  }
                }
              }
            }
          ]
        }
      },
      "isWorksetSelectedAtNonAce": {
        "expression": "ctx.mselected.length === 1 && ctx.sublocation.clientScopeURI !== 'Awb0OccurrenceManagement' && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf( 'Fnd0Workset' ) > -1 )"
      },
      "isSmartDiscovery": {
        "expression": "(ctx.aceActiveContext.context.productContextInfo.props.awb0AlternateConfiguration !== undefined && ctx.aceActiveContext.context.productContextInfo.props.awb0AlternateConfiguration.dbValues[0] === '')"
      },
      "isIncludeExcludeVisible": {
        "expression": "ctx.filter.validSelectionsToIncludeOrExclude"
      },
      "isIncludeExcludeEnabled": {
        "expression": "conditions.isIncludeExcludeVisible && !ctx.aceActiveContext.context.updatedRecipe"
      },
      "isResetGroupCommandVisible": {
        "expression": "conditions.isTypeFnd0AppSession && !conditions.isFnd0SnapshotOpened"
      },
      "isClearAllRecipeVisible": {
        "expression": "commandContext.recipe && commandContext.recipe.length > 0 && !ctx.aceActiveContext.context.updatedRecipe"
      },
      "isFnd0SnapshotOpened": {
        "expression": "ctx.aceActiveContext.context.topElement.modelType.typeHierarchyArray.indexOf( 'Fnd0Snapshot' ) > -1"
      },
      "isSelectedHasParent": {
        "expression": "ctx.mselected && ctx.mselected.length === 1 && ctx.mselected[0].props.awb0Parent && ctx.mselected[0].props.awb0Parent.dbValues[0] !== null"
      },
      "isReplayOfWorksetApplicable": {
        "expression": "conditions.isTypeFnd0Workset && conditions.isTcReleaseAtLeast13_3"
      },
      "isInsertLevelCtxCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isInsertLevelSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isRemoveLevelCtxCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRemoveLevelCtxCommandSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isInsertLevelCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isInsertLevelSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isRemoveLevelCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRemoveLevelCommandSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isRevisionEffectivityCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRevisionEffectivityCommandVisibile",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isOccEffectivityCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isAwb0ExpressionEffectivityNotVisible",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isTypeFnd0Workset": {
        "expression": "ctx.aceActiveContext.context.worksetTopNode !== undefined && ctx.aceActiveContext.context.worksetTopNode.modelType.typeHierarchyArray.indexOf( 'Fnd0WorksetRevision' ) > -1"
      },
      "isSubstituteCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isAddSubstitutesSupportedForPWA",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isSeparateCmdVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSeparatePossible",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isAlternateCmdVisibleForWorkset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.ps0AddAlternateCommandConditionForPWA",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isSubsetUnderWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isWorksetSelectedAtNonAce",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            }
          ]
        }
      },
      "isResetApplicableForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isResetApplicable",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isSubsetUnderWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isSplitCommandVisibleForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSplitCommandVisible",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "awb0CutCommandActiveForWorkset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.aceCutEnableCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isWorksetSelectedAtNonAce",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            }
          ]
        }
      },
      "awp0CopyCommandActiveForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isMarkAsSuspectCommandEnabledForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "initiateComplianceCheckCommandVisibleForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "executeRecipeCommandConditionForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isBranchUploadEnabledForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isSubsetOrWorksetSelected": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "setFreezePointCmdEnabledForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "createRecipeEnabledForWorkset": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSubsetUnderWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isSaveAsReplaceCmdForSubset": {
        "expression": {
          "$and": [
            {
              "$or": [
                {
                  "$source": "conditions.isSubsetUnderWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isWorksetSelectedAtNonAce",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "conditions.isSaveAsAndReplaceCommandSupported",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "discoveryIsSaveAsReviseUnSupported": {
        "expression": {
          "$or": [
            {
              "$and": [
                {
                  "$source": "conditions.aceSaveAsorRevise",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$or": [
                    {
                      "$source": "conditions.isSubsetUnderWorksetSelected",
                      "$query": {
                        "$eq": true
                      }
                    },
                    {
                      "$source": "conditions.isProductUnderSessionSelected",
                      "$query": {
                        "$eq": true
                      }
                    }
                  ]
                }
              ]
            },
            {
              "$and": [
                {
                  "$source": "conditions.saveAsorRevise",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isWorksetSelectedAtNonAce",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            }
          ]
        }
      },
      "isProductUnderSessionSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0AppSession",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$all": {
                  "$source": "props.awb0Parent.isNulls",
                  "$query": {
                    "$eq": true
                  }
                }
              }
            }
          ]
        }
      },
      "isBomLineUnderSessionSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0AppSession",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isSelectedHasParent",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$gt": 1
                  }
                }
              ]
            }
          ]
        }
      },
      "isSubsetUnderWorksetSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$all": {
                  "$source": "props.awb0Parent.dbValues",
                  "$query": {
                    "$eq": "{{ctx.aceActiveContext.context.topElement.uid}}"
                  }
                }
              }
            }
          ]
        }
      },
      "isOpenValidForSelectedObjectsInWorkset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isACEShowObjectDelegateActive",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$neq": 1
              }
            },
            {
              "$or": [
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$neq": 1
                  }
                },
                {
                  "$source": "conditions.isWorksetSelected",
                  "$query": {
                    "$eq": false
                  }
                }
              ]
            }
          ]
        }
      },
      "isBomLineUnderSubsetForWorksetSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$all": {
                  "$source": "props.awb0Parent.dbValues",
                  "$query": {
                    "$neq": "{{ctx.aceActiveContext.context.topElement.uid}}"
                  }
                }
              }
            }
          ]
        }
      },
      "isShowVariantsUnconfiguredApplicableForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.showVariantsInCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isSubsetUnderWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$gt": 1
                  }
                }
              ]
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isShowEffUnconfiguredApplicableForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.showIneffectiveCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isSubsetUnderWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$gt": 1
                  }
                }
              ]
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isShowSuppressedApplicableForSubset": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.showSuppressedInCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isSubsetUnderWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$gt": 1
                  }
                }
              ]
            },
            {
              "$source": "conditions.isWorksetSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isShowVariantsUnconfiguredApplicableForSession": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.showVariantsInCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isBomLineUnderSessionSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isShowEffUnconfiguredApplicableForSession": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.showIneffectiveCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isBomLineUnderSessionSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isShowSuppressedApplicableForSession": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.showSuppressedInCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isBomLineUnderSessionSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isReplayOfWorksetEnabled": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$all": {
                  "$or": [
                    {
                      "$source": "props.awb0UnderlyingObject.dbValues[0]",
                      "$query": {
                        "$eq": "{{ctx.aceActiveContext.context.worksetTopNode.uid}}"
                      }
                    },
                    {
                      "$source": "props.awb0Parent.dbValues[0]",
                      "$query": {
                        "$eq": "{{ctx.aceActiveContext.context.topElement.uid}}"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "isDiscussionLocationAndSnapshot": {
        "expression": "(ctx.sublocation.historyNameToken==='feed' || ctx.sublocation.historyNameToken==='actionableFeed') && commandContext.vmo.type === 'Fnd0Snapshot' "
      },
      "isSnapshotInGlobalSearchOrInDiscussion": {
        "expression": "(conditions.isSnapshotInGlobalSearch && conditions.showSnapshotInNonAce) || (conditions.isDiscussionLocationAndSnapshot && conditions.showSnapshotInNonAce)"
      },
      "isShowSnapshotInNonAceOrInAceAndNotCreate": {
        "expression": "conditions.showSnapshotInNonAce || (conditions.showSnapshotInAce && !ctx.Ac0ConvCtx.createNewConversation)"
      },
      "isSaveWorksetActive": {
        "expression": "conditions.isTcReleaseAtLeast14_1 && conditions.isTypeFnd0Workset && conditions.isWriteAccessProvidedOnWorksetRev"
      },
      "isSaveWorksetApplicable": {
        "expression": "conditions.isSaveWorksetActive && conditions.isPendingChangesOnWorkset"
      },
      "isSessionUnsavedHasWriteAccess": {
        "expression": "conditions.isTypeFnd0AppSession && conditions.isPendingChanges && conditions.isWriteAccessProvided"
      },
      "isSessionUnsavedNoWriteAccess": {
        "expression": "conditions.isTypeFnd0AppSession && conditions.isPendingChanges && !conditions.isWriteAccessProvided"
      },
      "isWorksetUnsavedHasWriteAccess": {
        "expression": "conditions.isTcReleaseAtLeast14_1 && (ctx.aceActiveContext.context.worksetTopNode && conditions.isWorksetSelected && conditions.isPendingChangesOnWorkset && conditions.isWriteAccessProvidedOnWorksetRev)"
      },
      "isWorksetUnsavedNoWriteAccess": {
        "expression": "conditions.isTcReleaseAtLeast14_1 && (ctx.aceActiveContext.context.worksetTopNode && conditions.isWorksetSelected && conditions.isPendingChangesOnWorkset && conditions.isWriteAccessNotProvidedOnWorksetRev)"
      },
      "aceCBOSForWorksetApplicable": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTcReleaseAtLeast14_1",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isCBOSCmdVisible",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "aceCBOSForWorksetVisible": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.aceCBOSForWorksetApplicable",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isWorksetNotInSelectedObjects",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isBomLineUnderSubsetForWorksetSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSelectionsInSingleSubsetInWorkset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isSelectionsInSingleSubsetInWorkset": {
        "expression": "ctx.filter.validSelectionsInSingleSubsetInWorkset"
      },
      "discoveryOpenInVisApplicable": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTcReleaseAtLeast14_1",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.Awp0OpenVVICmdCond",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isFnd0AppSessionSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isProductUnderSessionSelected",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            }
          ]
        }
      },
      "discoveryIsOpenInTcVisUnSupported": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isWorksetSelectedAtNonAce",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isObjectUnsavedHasWriteAccess": {
        "expression": "conditions.isSessionUnsavedHasWriteAccess || conditions.isWorksetUnsavedHasWriteAccess"
      },
      "isObjectUnsavedNoWriteAccess": {
        "expression": "conditions.isSessionUnsavedNoWriteAccess || conditions.isWorksetUnsavedNoWriteAccess"
      },
      "isOpenInVisDefault": {
        "expression": "!conditions.isObjectUnsavedHasWriteAccess && !conditions.isObjectUnsavedNoWriteAccess"
      },
      "findInContextOfWorksetApplicable": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTcReleaseAtLeast14_1",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isNavigationSupported",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "findInContextOfWorksetEnable": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.findInContextOfWorksetApplicable",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$and": [
                    {
                      "$source": "ctx.mselected.length",
                      "$query": {
                        "$eq": 1
                      }
                    },
                    {
                      "$source": "ctx.mselected",
                      "$query": {
                        "$all": {
                          "$source": "props.awb0UnderlyingObject.dbValues[0]",
                          "$query": {
                            "$eq": "{{ctx.aceActiveContext.context.worksetTopNode.uid}}"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "$and": [
                    {
                      "$source": "ctx.mselected.length",
                      "$query": {
                        "$eq": 1
                      }
                    },
                    {
                      "$source": "conditions.isSubsetUnderWorksetSelected",
                      "$query": {
                        "$eq": true
                      }
                    }
                  ]
                },
                {
                  "$source": "conditions.isSelectionsInSingleSubsetInWorkset",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            }
          ]
        }
      },
      "isTopNodeNotInSelectedObjects": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.mselected",
              "$query": {
                "$all": {
                  "$source": "uid",
                  "$query": {
                    "$neq": "{{ctx.aceActiveContext.context.rootElement.uid}}"
                  }
                }
              }
            }
          ]
        }
      },
      "hideCBOSForTopNode": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isCBOSCmdVisible",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTopNodeNotInSelectedObjects",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isTypeFnd0Workset",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "discoveryRollupReportCommandVisibility": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true && conditions.isTreeOrTreeSummaryView && ctx.visibleServerCommands.Wnb1IsRollupCommandVisible && !ctx.splitView.mode && !conditions.isDuplicateEnabled && !conditions.isUpdateSWCCommandVisible && !conditions.isMarkupEnabled"
      },
      "discoveryHideRollUpReport": {
        "expression": "conditions.discoveryRollupReportCommandVisibility && conditions.isTypeFnd0Workset"
      },
      "isPLMXMLExportSupported": {
        "expression": {
          "$or": [
            {
              "$and": [
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$gt": 0
                  }
                },
                {
                  "$source": "ctx.preferences.AWC_PLMXML_export_supported_types",
                  "$query": {
                    "$notNull": true
                  }
                },
                {
                  "$source": "ctx.mselected",
                  "$query": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": "{{ctx.preferences.AWC_PLMXML_export_supported_types}}"
                    }
                  }
                },
                {
                  "$source": "ctx.mselected",
                  "$query": {
                    "$all": {
                      "$source": "modelType.typeHierarchyArray",
                      "$query": {
                        "$notin": [
                          "Sc0SRMXChange",
                          "Sc0SRMXChangeRevision"
                        ]
                      }
                    }
                  }
                },
                {
                  "$source": "ctx.locationContext.modelObject",
                  "$query": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$notin": [
                        "Sc0SRMXChangeRevision"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$and": [
                {
                  "$source": "ctx.mselected.length",
                  "$query": {
                    "$gt": 0
                  }
                },
                {
                  "$source": "ctx.preferences.AWC_PLMXML_export_supported_types",
                  "$query": {
                    "$isNull": true
                  }
                },
                {
                  "$source": "ctx.mselected",
                  "$query": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$in": [
                        "Awb0Element",
                        "Folder",
                        "Item",
                        "ItemRevision",
                        "Form",
                        "Dataset",
                        "CCObject",
                        "StructureContext",
                        "TransactionElement",
                        "FaultCode",
                        "CfgAttachmentLine",
                        "AppearanceGroup",
                        "DC_Admin",
                        "DCt_GraphicPriority",
                        "DCt_Language",
                        "Schedule",
                        "Cls0HierarchyNode",
                        "Lbr0Library",
                        "Lbr0LibraryElement",
                        "Mdl0SubsetDefinition",
                        "Ptn0Partition",
                        "Cpd0DesignElement",
                        "Cpd0DesignFeature"
                      ]
                    }
                  }
                },
                {
                  "$source": "ctx.mselected",
                  "$query": {
                    "$all": {
                      "$source": "modelType.typeHierarchyArray",
                      "$query": {
                        "$notin": [
                          "Sc0SRMXChange",
                          "Sc0SRMXChangeRevision"
                        ]
                      }
                    }
                  }
                },
                {
                  "$source": "ctx.locationContext.modelObject",
                  "$query": {
                    "$source": "modelType.typeHierarchyArray",
                    "$query": {
                      "$notin": [
                        "Sc0SRMXChangeRevision"
                      ]
                    }
                  }
                }
              ]
            }
          ]
        }
      },
      "isExportToPLMXMLDisabled": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isPLMXMLExportSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSubsetOrWorksetSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isValidSelectionInAlignedDesignSection": {
        "expression": "ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedDesignsProvider' || ( conditions.removeAttachmentVisibility && ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedDesignsProvider')"
      },
      "isValidSelectionInAlignedPartSection": {
        "expression": "ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedPartsProvider' || ( conditions.removeAttachmentVisibility && ctx.relationContext.relationInfo[0].relationType==='Fnd0AlignedPartsProvider')"
      },
      "isReloadViewerCondition": {
        "expression": "ctx.sublocation.enableOccMgmtCommands === true"
      },
      "Awp0AlignDesignCommandCondition": {
        "expression": "commandContext.objectSetSource==='Fnd0AlignedDesignsProvider.Fnd0AlignedDesign' && (!conditions.isSolutionVariantPart)"
      },
      "Awp0UnAlignDesignCommandCondition": {
        "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type==='Fnd0AlignedDesign' && (!conditions.isSolutionVariantPart)"
      },
      "Awp0AlignPartCommandCondition": {
        "expression": "commandContext.objectSetSource==='Fnd0AlignedPartsProvider.Fnd0AlignedPart'"
      },
      "Awp0UnAlignPartCommandCondition": {
        "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type==='Fnd0AlignedPart'"
      },
      "Awp0SetPrimaryDesignCommandCondition": {
        "expression": "ctx.mselected && ctx.mselected.length ==1 && ctx.mselected[0].type==='Fnd0AlignedDesign' && ctx.mselected[0].props.fnd0IsPrimary.dbValues[0]!='1' && (!conditions.isSolutionVariantPart)"
      },
      "isSolutionVariantPart": {
        "expression": "ctx.aceActiveContext && ((ctx.mselected[0].modelType.typeHierarchyArray.includes('Awb0PositionedElement') && conditions.isCurrentSelectionSVPart) || (ctx.mselected[0].type==='Fnd0AlignedDesign' && conditions.isPrimarytSelectionSVPart)) || conditions.isCurrentSelectionSVPart || conditions.isPrimarytSelectionSVPart"
      },
      "isCurrentSelectionSVPart": {
        "expression": "ctx.mselected[0].props.awb0IsVi.dbValues[0]==='1' || ctx.mselected[0].props.is_vi.dbValues[0]==='1'"
      },
      "isPrimarytSelectionSVPart": {
        "expression": "ctx.pselected.props.awb0IsVi.dbValues[0]==='1' || ctx.pselected.props.is_vi.dbValues[0]==='1'"
      },
      "EntCBAShowObjectCondition": {
        "expression": {
          "$source": {
            "$adapt": "commandContext.vmo"
          },
          "$query": {
            "$source": "type",
            "$query": {
              "$in": [
                "Fnd0AlignedDesign",
                "Fnd0AlignedPart"
              ]
            }
          }
        }
      },
      "EntCBAOpenObjectCondition": {
        "expression": "ctx.mselected.length == 1 && (ctx.mselected[0].type=='Fnd0AlignedDesign' || ctx.mselected[0].type=='Fnd0AlignedPart')"
      },
      "entCBACutDesignVisibility": {
        "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='Fnd0AlignedDesign'"
      },
      "entCBACutPartVisibility": {
        "expression": "ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='Fnd0AlignedPart'"
      },
      "EntCBALaunchAlignTaskCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awb0EntCBALaunchAlignTask && !ctx.isNarrowMode && (conditions.isCBAItemRevisionSelected || conditions.isCBAElementSelected || conditions.areCBAItemRevisionsSelected || conditions.areCBAElementsSelected || conditions.isAlignedDesignOrPartSelected)"
      },
      "isDoubleSelection": {
        "expression": "ctx.mselected && ctx.mselected.length === 2 "
      },
      "isSingleSelection": {
        "expression": "ctx.mselected && ctx.mselected.length === 1 "
      },
      "isCBAItemRevisionSelected": {
        "expression": "conditions.isSingleSelection && ctx.mselected[0].modelType.typeHierarchyArray.includes('ItemRevision') "
      },
      "areCBAItemRevisionsSelected": {
        "expression": "conditions.isDoubleSelection && ctx.mselected[0].modelType.typeHierarchyArray.includes('ItemRevision') && ctx.mselected[1].modelType.typeHierarchyArray.includes('ItemRevision')"
      },
      "is4GStructure": {
        "expression": "ctx.aceActiveContext && ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature']"
      },
      "isAWB0Element": {
        "expression": "ctx.mselected[0].modelType.typeHierarchyArray.includes('Awb0Element')"
      },
      "isCBAElementSelected": {
        "expression": "conditions.isSingleSelection && !conditions.is4GStructure && conditions.isAWB0Element"
      },
      "areCBAElementsSelected": {
        "expression": "conditions.isDoubleSelection && !conditions.is4GStructure && conditions.isAWB0Element"
      },
      "isAlignedDesignOrPartSelected": {
        "expression": "ctx.pselected && conditions.isSingleSelection && (ctx.mselected[0].type === 'Fnd0AlignedPart' || ctx.mselected[0].type === 'Fnd0AlignedDesign')"
      },
      "isEntCBASubLocation": {
        "expression": "ctx.splitView && ctx.splitView.mode===true && ctx.sublocation.nameToken === 'com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation' && (conditions.isSchemeApplied || !conditions.isSchemeApplied)"
      },
      "isColumnArrangeIconVisible": {
        "expression": "commandContext.gridOptions.enableArrangeMenu && commandContext.isArrangeSupported && (commandContext.gridId === 'cbaSourceTree' || commandContext.gridId === 'cbaTargetTree')"
      },
      "enableOpenCBANotificationCommandCond": {
        "expression": "commandContext.group.groupName==='CBA'"
      },
      "editCommandVisibility": {
        "expression": "conditions.isEntCBASubLocation && ctx.visibleServerCommands.Awp0StartEditTable && ( ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' || ctx.ViewModeContext.ViewModeContext === 'TreeView' ) && ctx[ ctx[commandContext.viewKey].vmc.name ].canStartEdit() && !ctx['NONE'].editInProgress() && !ctx['srcOccDataProvider'].editInProgress() && !ctx['trgOccDataProvider'].editInProgress()"
      },
      "multiSelectEnableCondition": {
        "expression": "conditions.isEntCBASubLocation && conditions.awp0MultiSelectEnableCondition && ctx.splitView && ctx.splitView.mode"
      },
      "isSingleSelectedInTreeView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeView' && ctx[ commandContext.viewKey ].selectedModelObjects.length === 1"
      },
      "isSingleSelectedInTreeSummaryView": {
        "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView' && ctx[ commandContext.viewKey ].selectedModelObjects.length === 1 && ctx[ commandContext.viewKey ].swaSelectionContext.selected.length <= 1"
      },
      "isSingleRowSelected": {
        "expression": "ctx[ commandContext.viewKey ].selectedModelObjects.length === 1 && ctx[ commandContext.viewKey ].isRowSelected === true"
      },
      "openGroupCommandsVisibility": {
        "expression": "conditions.isEntCBASubLocation &&( conditions.isSingleSelectedInTreeView || conditions.isSingleSelectedInTreeSummaryView || conditions.isSingleRowSelected ) && !conditions.isUnconfiguredNodeSelected && !ctx.selected.modelType.typeHierarchyArray.includes('Fgf0PartitionElement')"
      },
      "openObjectFromTreeTableCondition": {
        "expression": "conditions.isSingleSelection && !conditions.EntCBAOpenObjectCondition && !conditions.isItemOrItemRevisionSelected"
      },
      "isPartElementSelected": {
        "expression": "ctx[ commandContext.viewKey ].selectedModelObjects[0].modelType.typeHierarchyArray.indexOf('Awb0PartElement') > -1"
      },
      "openBOMObjectFromTreeTableActiveCondition": {
        "expression": "conditions.isPartElementSelected && conditions.isSingleSelection && !conditions.EntCBAOpenObjectCondition && !conditions.isItemOrItemRevisionSelected"
      },
      "openBOMObjectFromTreeTableVisibleCondition": {
        "expression": "conditions.isPartElementSelected &&  ctx.selected.props.awb0Archetype && ctx.selected.props.awb0Archetype.dbValues[0]!==null && conditions.isSingleSelection && !conditions.EntCBAOpenObjectCondition && !conditions.isItemOrItemRevisionSelected"
      },
      "isItemOrItemRevisionSelected": {
        "expression": "conditions.isSingleSelection && ctx.selected.modelType.typeHierarchyArray.includes('Item') || ctx.selected.modelType.typeHierarchyArray.includes('ItemRevision')"
      },
      "isConfigurationFilterSupportedInCBA": {
        "expression": "ctx[commandContext.viewKey].supportedFeatures.Awb0EnableConfigurationPanelFeature === true"
      },
      "configurationFilterCommandInCBA": {
        "expression": "conditions.isEntCBASubLocation && conditions.isConfigurationFilterSupportedInCBA"
      },
      "splitCommandVisibility": {
        "expression": "conditions.isEntCBASubLocation && ctx.aceActiveContext && !ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature'] && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "isUnconfiguredNodeSelected": {
        "expression": "ctx[ commandContext.viewKey ].selectedModelObjects.length === 1 && ctx[ commandContext.viewKey ].selectedModelObjects[0].props.awb0UnderlyingObject && ctx[ commandContext.viewKey ].selectedModelObjects[0].props.awb0UnderlyingObject.dbValues[ 0 ] === null "
      },
      "isExplodedMode": {
        "expression": "ctx.CBATrgContext.productContextInfo.props.awb0ShowExplodedLines.dbValues[0]==='1'"
      },
      "isSummarizedMode": {
        "expression": "!conditions.isExplodedMode"
      },
      "isPlatformVersionAtleast132": {
        "expression": "ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 2)"
      },
      "enableAlignmentCheck132Onwards": {
        "expression": "conditions.isEntCBASubLocation && conditions.isPlatformVersionAtleast132 && !ctx.cbaContext.ImpactAnalysis"
      },
      "enableAlignmentCheckPriorTo132": {
        "expression": "conditions.isEntCBASubLocation && !conditions.isPlatformVersionAtleast132 && !ctx.cbaContext.ImpactAnalysis"
      },
      "activateRemoveElementCtxMenuCmdCondition": {
        "expression": "conditions.isEntCBASubLocation && ctx.splitView && ctx.splitView.mode===true && ctx.sublocation && ctx.mselected && ctx.mselected.length >0 && ctx.sublocation.enableOccMgmtCommands === true"
      },
      "areMultipleStructureInCBA": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.cbaContext.srcStructure",
              "$query": {
                "$notNull": true
              }
            },
            {
              "$source": "ctx.cbaContext.trgStructure",
              "$query": {
                "$notNull": true
              }
            }
          ]
        }
      },
      "isSourceTopSelected": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects",
              "$query": {
                "$source": "uid",
                "$query": {
                  "$eq": "{{ctx.CBASrcContext.topElement.uid}}"
                }
              }
            },
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isTargetTopSelected": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects",
              "$query": {
                "$source": "uid",
                "$query": {
                  "$eq": "{{ctx.CBATrgContext.topElement.uid}}"
                }
              }
            },
            {
              "$source": "ctx.CBATrgContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isSingleRowSelectionInOnlySrcIncludePackedLines": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.isRowSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects.length",
              "$query": {
                "$eq": "1"
              }
            },
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects",
              "$query": {
                "$source": "props.pma1IsPartRequired.dbValues",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              }
            }
          ]
        }
      },
      "isSingleRowSelectionInOnlyTrgIncludePackedLines": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.CBATrgContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects.length",
              "$query": {
                "$eq": "1"
              }
            },
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects",
              "$query": {
                "$source": "props.pma1IsDesignRequired.dbValues",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              }
            }
          ]
        }
      },
      "isTrgSelectionSVProductOcc": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects",
              "$query": {
                "$source": "props.awb0IsVi.dbValues",
                "$query": {
                  "$eq": "1"
                }
              }
            },
            {
              "$source": "ctx.preferences.FND0_PRODUCTEBOMREVISION_TYPES",
              "$query": {
                "$in": "{{ctx.CBATrgContext.selectedModelObjects[0].props.awb0UnderlyingObjectType.dbValues[0]}}"
              }
            }
          ]
        }
      },
      "isOnlySVProductOccInTrgSelection": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isTrgSelectionSVProductOcc",
              "$query": {
                "$in": true
              }
            }
          ]
        }
      },
      "isOnlySourceTopSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSourceTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.isRowSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects.length",
              "$query": {
                "$eq": "1"
              }
            }
          ]
        }
      },
      "isOnlyTargetTopSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isTargetTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects.length",
              "$query": {
                "$eq": "1"
              }
            }
          ]
        }
      },
      "areOnlySourceAndTargetTopSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSourceTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects.length",
              "$query": {
                "$eq": "1"
              }
            },
            {
              "$source": "conditions.isTargetTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects.length",
              "$query": {
                "$eq": "1"
              }
            }
          ]
        }
      },
      "isSelectionValidForAccCheck": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isSingleRowSelectionInOnlySrcIncludePackedLines",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isOnlySourceTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isSingleRowSelectionInOnlyTrgIncludePackedLines",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isOnlyTargetTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isRowSelectionInSrcOrTrg",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.areOnlySourceAndTargetTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isOnlySVProductOccInTrgSelection",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isRowSelectionInSrcOrTrg": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isRowSelectionInSrcAndTrg": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBASrcContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.isRowSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "areMultipleSrcSelected": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects.length",
              "$query": {
                "$gt": "1"
              }
            },
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects",
              "$query": {
                "$source": "props.awb0IsPacked.dbValues",
                "$query": {
                  "$eq": "1"
                }
              }
            }
          ]
        }
      },
      "areMultipleTrgSelected": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects.length",
              "$query": {
                "$gt": "1"
              }
            },
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects",
              "$query": {
                "$source": "props.awb0IsPacked.dbValues",
                "$query": {
                  "$eq": "1"
                }
              }
            }
          ]
        }
      },
      "areMultipleSrcTrgSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.areMultipleSrcSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleTrgSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "areMultipleSrcORTrgSelected": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.areMultipleSrcSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleTrgSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isOneToManySelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRowSelectionInSrcAndTrg",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleSrcSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.areMultipleTrgSelected",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isManyToOneSelected": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRowSelectionInSrcAndTrg",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleSrcSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleTrgSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isPartRequiredOnSrc": {
        "expression": {
          "$source": "ctx.CBASrcContext.selectedModelObjects",
          "$query": {
            "$and": [
              {
                "$source": "props.pma1IsPartRequired",
                "$query": {
                  "$notNull": true
                }
              },
              {
                "$source": "props.pma1IsPartRequired.dbValues",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              }
            ]
          }
        }
      },
      "isPartRequiredOnTrg": {
        "expression": {
          "$source": "ctx.CBATrgContext.selectedModelObjects",
          "$query": {
            "$and": [
              {
                "$source": "props.pma1IsPartRequired",
                "$query": {
                  "$notNull": true
                }
              },
              {
                "$source": "props.pma1IsPartRequired.dbValues",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              }
            ]
          }
        }
      },
      "isDesignRequiredSrc": {
        "expression": {
          "$source": "ctx.CBASrcContext.selectedModelObjects",
          "$query": {
            "$and": [
              {
                "$source": "props.pma1IsDesignRequired",
                "$query": {
                  "$notNull": true
                }
              },
              {
                "$source": "props.pma1IsDesignRequired.dbValues",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              }
            ]
          }
        }
      },
      "isDesignRequiredTrg": {
        "expression": {
          "$source": "ctx.CBATrgContext.selectedModelObjects",
          "$query": {
            "$and": [
              {
                "$source": "props.pma1IsDesignRequired",
                "$query": {
                  "$notNull": true
                }
              },
              {
                "$source": "props.pma1IsDesignRequired.dbValues",
                "$query": {
                  "$in": [
                    "1",
                    "true"
                  ]
                }
              }
            ]
          }
        }
      },
      "isDesignOrPartRequiredSrc": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isPartRequiredOnSrc",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isDesignRequiredSrc",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isDesignOrPartRequiredTrg": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isDesignRequiredTrg",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isPartRequiredOnTrg",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isDesignOrPartNotRequired": {
        "expression": {
          "$or": [
            {
              "$source": "conditions.isDesignOrPartRequiredSrc",
              "$query": {
                "$eq": false
              }
            },
            {
              "$and": [
                {
                  "$source": "conditions.isTrgTopSelectedWithNoRowCheck",
                  "$query": {
                    "$eq": false
                  }
                },
                {
                  "$source": "conditions.isDesignOrPartRequiredTrg",
                  "$query": {
                    "$eq": false
                  }
                }
              ]
            }
          ]
        }
      },
      "isDesOrPrtReqOrIsTrgProductAndSelectionConfigured": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isUnconfiguredSrcOrTrgLineSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isDesignOrPartNotRequiredForTop",
                  "$query": {
                    "$eq": false
                  }
                },
                {
                  "$source": "ctx.preferences.FND0_PRODUCTEBOMREVISION_TYPES",
                  "$query": {
                    "$in": "{{ctx.cbaContext.trgStructure.type}}"
                  }
                }
              ]
            }
          ]
        }
      },
      "isDesignOrPartNotRequiredForTop": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.CBASrcContext.topElement.props.pma1IsDesignRequired.dbValues[0]",
              "$query": {
                "$in": [
                  "0",
                  "false"
                ]
              }
            },
            {
              "$source": "ctx.CBASrcContext.topElement.props.pma1IsPartRequired.dbValues[0]",
              "$query": {
                "$in": [
                  "0",
                  "false"
                ]
              }
            },
            {
              "$source": "ctx.CBATrgContext.topElement.props.pma1IsDesignRequired.dbValues[0]",
              "$query": {
                "$in": [
                  "0",
                  "false"
                ]
              }
            },
            {
              "$source": "ctx.CBATrgContext.topElement.props.pma1IsPartRequired.dbValues[0]",
              "$query": {
                "$in": [
                  "0",
                  "false"
                ]
              }
            }
          ]
        }
      },
      "isUnconfiguredSrcOrTrgLineSelected": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.CBASrcContext.selectedModelObjects",
              "$query": {
                "$source": "props.awb0Archetype.dbValues[0]",
                "$query": {
                  "$isNull": true
                }
              }
            },
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects",
              "$query": {
                "$source": "props.awb0Archetype.dbValues[0]",
                "$query": {
                  "$isNull": true
                }
              }
            }
          ]
        }
      },
      "isAlignCommandAvailableForTop": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isEntCBASubLocation",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areOnlySourceAndTargetTopSelected",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isDesOrPrtReqOrIsTrgProductAndSelectionConfigured",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isNotInGuidedMode",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isUnalignCommandAvailableForTop": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isEntCBASubLocation",
              "$query": {
                "$eq": true
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isOnlyTargetTopSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.isOnlySourceTopSelected",
                  "$query": {
                    "$eq": true
                  }
                },
                {
                  "$source": "conditions.areOnlySourceAndTargetTopSelected",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "conditions.isDesOrPrtReqOrIsTrgProductAndSelectionConfigured",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isUnconfiguredSrcOrTrgLineSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isNotInGuidedMode",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isNotInGuidedMode": {
        "expression": "ctx.cbaContext && !ctx.cbaContext.ImpactAnalysis"
      },
      "AlignCommandCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSourceTopSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isTargetTopSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isRowSelectionInSrcAndTrg",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleSrcORTrgSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isDesignOrPartNotRequired",
                  "$query": {
                    "$eq": false
                  }
                },
                {
                  "$source": "conditions.isTrgSelectionSVProductOcc",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "conditions.isUnconfiguredSrcOrTrgLineSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "UnAlignCommandCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSourceTopSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isTargetTopSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isRowSelectionInSrcOrTrg",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleSrcTrgSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.areMultipleStructureInCBA",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isOneToManySelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.isManyToOneSelected",
              "$query": {
                "$eq": false
              }
            },
            {
              "$or": [
                {
                  "$source": "conditions.isDesignOrPartNotRequired",
                  "$query": {
                    "$eq": false
                  }
                },
                {
                  "$source": "conditions.isTrgSelectionSVProductOcc",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "conditions.isUnconfiguredSrcOrTrgLineSelected",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isTrgTopSelectedWithNoRowCheck": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.CBATrgContext.selectedModelObjects",
              "$query": {
                "$source": "uid",
                "$query": {
                  "$eq": "{{ctx.CBATrgContext.topElement.uid}}"
                }
              }
            }
          ]
        }
      },
      "treeLoadingInProgress": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.CBASrcContext.treeLoadingInProgress",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.CBATrgContext.treeLoadingInProgress",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "AlignmentCheckCommandCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isSelectionValidForAccCheck",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleStructureInCBA",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.cbaContext.isCBAFirstLaunch",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isAlignGroupCmdVisible": {
        "expression": "conditions.isOccurrenceManagementSubLocation && !ctx.splitView && conditions.EntCBALaunchAlignTaskCommandCondition"
      },
      "isPlatformVersionAtleast133": {
        "expression": {
          "$or": [
            {
              "$source": "ctx.tcSessionData.tcMajorVersion",
              "$query": {
                "$gt": 13
              }
            },
            {
              "$and": [
                {
                  "$source": "ctx.tcSessionData.tcMajorVersion",
                  "$query": {
                    "$gte": 13
                  }
                },
                {
                  "$source": "ctx.tcSessionData.tcMinorVersion",
                  "$query": {
                    "$gte": 3
                  }
                }
              ]
            }
          ]
        }
      },
      "FindAlignedCommandCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isPlatformVersionAtleast133",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.areMultipleStructureInCBA",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected.length",
              "$query": {
                "$eq": "1"
              }
            },
            {
              "$source": "ctx.mselected[0]",
              "$query": {
                "$source": "uid",
                "$query": {
                  "$neq": "{{ctx.aceActiveContext.context.topElement.uid}}"
                }
              }
            },
            {
              "$or": [
                {
                  "$source": "ctx.mselected[0].props.pma1IsDesignRequired.dbValues[0]",
                  "$query": {
                    "$in": [
                      "1",
                      "true"
                    ]
                  }
                },
                {
                  "$source": "ctx.mselected[0].props.pma1IsPartRequired.dbValues[0]",
                  "$query": {
                    "$in": [
                      "1",
                      "true"
                    ]
                  }
                },
                {
                  "$source": "conditions.isTrgSelectionSVProductOcc",
                  "$query": {
                    "$eq": true
                  }
                }
              ]
            },
            {
              "$source": "ctx.mselected[0]",
              "$query": {
                "$source": "uid",
                "$query": {
                  "$notin": "{{ctx.cbaContext.alignmentCheckContext.alignmentCheckInfo.unalignedUIDs}}"
                }
              }
            }
          ]
        }
      },
      "isFnd0AlignedElementSelected": {
        "expression": {
          "$source": "ctx.mselected",
          "$query": {
            "$source": "type",
            "$query": {
              "$in": [
                "Fnd0AlignedDesign",
                "Fnd0AlignedPart"
              ]
            }
          }
        }
      },
      "IsInAdminWorkspace": {
        "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.revruleadmin.revRuleAdmin'"
      },
      "isRevisionRulePanelLaunched": {
        "expression": "ctx.sidenavCommandId === 'RevisionRuleAdminMainPanel' && ( ctx.panelContext.destPanelId === 'RevisionRuleAdminPanel' || ctx.panelContext.destPanelId === 'AddClauses' )"
      },
      "Awp0RevisionRuleAdminAddCommandConditionActive": {
        "expression": "conditions.IsInAdminWorkspace"
      },
      "RevisionRuleAdminDeleteCommandEnable": {
        "expression": "ctx.mselected.length>0"
      },
      "CheckIfNotASeparatorObject": {
        "expression": "ctx.aceActiveContext && commandContext.vmo.uid !== 'separatorObject'"
      },
      "RevisionRuleAdminCommandConditionActive": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.CheckIfNotASeparatorObject",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": {
                "$adapt": "ctx.aceActiveContext.context.topElement"
              },
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "ItemRevision"
                  ]
                }
              }
            },
            {
              "$source": {
                "$adapt": "ctx.aceActiveContext.context.supportedFeatures"
              },
              "$query": {
                "$source": "Awb0RevisionRuleInformationFeature",
                "$query": {
                  "$eq": true
                }
              }
            }
          ]
        }
      },
      "RevisionRuleClauseAddCommandEnable": {
        "expression": "conditions.IsRevisionRuleModifiable &&  !conditions.IsExactlySameClauseWarningPresent"
      },
      "RevisionRuleClauseLatestForRevOcc": {
        "expression": {
          "$and": [
            {
              "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.totalFound",
              "$query": {
                "$eq": 4
              }
            },
            {
              "$all": {
                "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
                "$query": {
                  "$source": "entryType",
                  "$query": {
                    "$eq": 3
                  }
                }
              }
            },
            {
              "$all": {
                "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
                "$query": {
                  "$source": "entryType",
                  "$query": {
                    "$eq": 4
                  }
                }
              }
            },
            {
              "$all": {
                "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
                "$query": {
                  "$source": "entryType",
                  "$query": {
                    "$eq": 7
                  }
                }
              }
            },
            {
              "$all": {
                "$source": "commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.loadedVMObjects",
                "$query": {
                  "$source": "entryType",
                  "$query": {
                    "$eq": 8
                  }
                }
              }
            }
          ]
        }
      },
      "RevisionRuleClauseAddCommandEnableForRevOcc": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.RevisionRuleClauseLatestForRevOcc",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "conditions.RevisionRuleClauseAddCommandEnable",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isRevisableOccurrenceStruct": {
        "expression": "ctx.aceActiveContext.context.supportedFeatures.Awb0RevisibleOccurrenceFeature === true"
      },
      "RevisionRuleClauseDeleteCommandEnable": {
        "expression": "conditions.IsRevisionRuleClauseSelected && conditions.IsRevisionRuleModifiable && commandContext.dataProviders.getRevisionRuleInfoProvider.getLength() > 1"
      },
      "RevisionRuleClauseUpCommandEnable": {
        "expression": "conditions.IsRevisionRuleClauseSelected && commandContext.dataProviders.getRevisionRuleInfoProvider.getSelectedIndexes()[0] > 0 && conditions.IsRevisionRuleModifiable &&  !conditions.IsExactlySameClauseWarningPresent"
      },
      "RevisionRuleClauseDownCommandEnable": {
        "expression": "conditions.IsRevisionRuleClauseSelected && commandContext.dataProviders.getRevisionRuleInfoProvider.getSelectedIndexes()[0] < commandContext.dataProviders.getRevisionRuleInfoProvider.viewModelCollection.totalFound-1 && conditions.IsRevisionRuleModifiable &&  !conditions.IsExactlySameClauseWarningPresent"
      },
      "IsExactlySameClauseWarningPresent": {
        "expression": "commandContext.exactlySameClauseWarning.dbValue === true"
      },
      "IsRevisionRuleModifiable": {
        "expression": "ctx.aceActiveContext || (conditions.IsInAdminWorkspace && ctx.RevisionRuleAdmin.currentlySelectedRevisionRule.props.is_modifiable.dbValue)"
      },
      "IsRevisionRuleClauseSelected": {
        "expression": "commandContext.dataProviders.getRevisionRuleInfoProvider.getSelectedObjects().length > 0"
      },
      "IsRevisionRuleClausePropertyPresent": {
        "expression": "ctx.RevisionRuleAdmin.currentlySelectedClauseProperty !== undefined"
      },
      "IsAddRevisionRuleClausePropertyPresent": {
        "expression": "ctx.RevisionRuleAdmin.addClause_currentlySelectedClauseProperty !== undefined"
      },
      "isRemoveReplacePropActive": {
        "expression": "conditions.IsRevisionRuleClausePropertyPresent && conditions.isRevisionRuleEditable"
      },
      "ClausePropertyAddCommandActive": {
        "expression": "conditions.IsRevisionRuleClausePropertyPresent === false && conditions.isRevisionRuleEditable"
      },
      "AddClausePropertyCommandActive": {
        "expression": "conditions.IsAddRevisionRuleClausePropertyPresent === false"
      },
      "isRevisionRuleEditable": {
        "expression": "conditions.isTcReleaseAtLeast123 && conditions.isBranchClauseNotPresent"
      },
      "isTcReleaseAtLeast123": {
        "expression": "(ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 3) || ctx.tcSessionData.tcMajorVersion > 12"
      },
      "isBranchClauseNotPresent": {
        "expression": "ctx.RevisionRuleAdmin.isBranchClausePresent !== undefined && ctx.RevisionRuleAdmin.isBranchClausePresent === false"
      },
      "isFilterNotApplied": {
        "expression": "!(ctx.aceActiveContext.context.productContextInfo.props.awb0FilterCount.dbValues[0]>0)"
      },
      "isSplitEnableInAutoPartitionMode": {
        "expression": "conditions.isSeparatePossible && ctx.visibleServerCommands.Awb0InsertParentElement"
      },
      "isRemoveActiveForPartitionLineEnabled": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRemoveActiveForPartitionLine",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isFilterNotApplied",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "conditions.isTypeFnd0AppSession",
              "$query": {
                "$eq": false
              }
            }
          ]
        }
      },
      "isRemoveActiveForPartitionLine": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.isRemoveCommandSupported",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Fgf0PartitionElement"
                  ]
                }
              }
            },
            {
              "$source": "ctx.aceActiveContext.context.supportedFeatures.Fgf0OrganizationSchemeFeature",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.aceActiveContext.context.supportedFeatures.Fgf0OrganizationSchemeFeature",
              "$query": {
                "$ne": "undefined"
              }
            }
          ]
        }
      },
      "isAtleastOnePartitionElementSelectedForStructurePartition": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.sublocation.enableOccMgmtCommands",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "ctx.mselected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Fgf0PartitionElement"
                  ]
                }
              }
            },
            {
              "$source": "conditions.is4GD",
              "$query": {
                "$ne": true
              }
            }
          ]
        }
      },
      "strPartitionElemEffectivitySupported": {
        "expression": "conditions.isAwb0ExpressionEffectivityNotVisible && conditions.isPartitionLineSelected"
      },
      "isStrPartitionDuplicateSupported": {
        "expression": "conditions.isAwb0DuplicateVisible && conditions.isSchemeAppliedAndNot4GD"
      },
      "enableImportBOMCommandForPartition": {
        "expression": "conditions.enableImportBOMCommand && conditions.isSchemeAppliedForActiveCtx && !conditions.is4GD"
      },
      "isStrPartitionSetInContextSupported": {
        "expression": "conditions.isSetInContextCmdVisible && conditions.isPartitionLineSelected"
      },
      "isStrPartitionSetInContextSupportedOnCtx": {
        "expression": "conditions.isSetInContextCmdVisible && conditions.isPartitionLineSelectedOnAceActiveCtx"
      },
      "isOragnizationSchemeFeaturePresent": {
        "expression": "ctx[commandContext.viewKey].supportedFeatures.Fgf0OrganizationSchemeFeature === true && ctx[commandContext.viewKey].supportedFeatures.Fgf0OrganizationSchemeFeature !== undefined"
      },
      "isSchemeApplied": {
        "expression": "ctx[commandContext.viewKey].productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx[commandContext.viewKey].productContextInfo.props.fgf0PartitionScheme.dbValues.length >0 "
      },
      "isSchemeAppliedConditionInFindPanel": {
        "expression": "ctx[commandContext.navigateContext.dbValue].productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx[commandContext.navigateContext.dbValue].productContextInfo.props.fgf0PartitionScheme.dbValues.length >0 "
      },
      "isSchemeAppliedForActiveCtx": {
        "expression": "ctx.aceActiveContext.context.productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx.aceActiveContext.context.productContextInfo.props.fgf0PartitionScheme.dbValues.length >0 "
      },
      "isAddPartitionCommandEnabled": {
        "expression": "ctx.visibleServerCommands.Awb0AddChildElement && conditions.isFilterNotApplied"
      },
      "isAddPartitionCommandVisible": {
        "expression": "(conditions.isTopBomLineSelected || conditions.isPartitionLineSelected) && conditions.isOragnizationSchemeFeaturePresent && conditions.isOccurrenceManagementSubLocation && conditions.isSchemeApplied && !conditions.isTypeFnd0AppSession"
      },
      "is4GD": {
        "expression": "ctx.aceActiveContext && ctx.aceActiveContext.context.supportedFeatures['4GStructureFeature']"
      },
      "isServerTc132orLater": {
        "expression": "(ctx.tcSessionData.tcMajorVersion >= 13 &&  ctx.tcSessionData.tcMinorVersion >= 2) || ctx.tcSessionData.tcMajorVersion > 13"
      },
      "isSchemeAppliedAndNot4GD": {
        "expression": "conditions.isSchemeApplied && !conditions.is4GD"
      },
      "isAddChildApplicableInContextOfPartitionScheme": {
        "expression": "conditions.isTopBomLineSelected && conditions.isOragnizationSchemeFeaturePresent && conditions.isOccurrenceManagementSubLocation && conditions.isSchemeApplied"
      },
      "isAddSiblingApplicableInContextOfPartitionScheme": {
        "expression": "conditions.isCurrentParentIsTopLine && conditions.isOragnizationSchemeFeaturePresent && conditions.isOccurrenceManagementSubLocation && conditions.isSchemeApplied"
      },
      "isCurrentParentIsTopLine": {
        "expression": "ctx[commandContext.viewKey].selectedModelObjects && ctx[commandContext.viewKey].selectedModelObjects.length === 1 && ctx[commandContext.viewKey].selectedModelObjects[0].props.awb0Parent.dbValues[ 0 ] === ctx[commandContext.viewKey].topElement.uid"
      },
      "isTopBomLineSelected": {
        "expression": "ctx[commandContext.viewKey].selectedModelObjects && ctx[commandContext.viewKey].selectedModelObjects.length === 1 && ctx[commandContext.viewKey].selectedModelObjects[0].uid === ctx[commandContext.viewKey].topElement.uid"
      },
      "isSchemeAppliedinAtleastOneView": {
        "expression": "ctx.splitView.mode && ((ctx[ctx.splitView.viewKeys[0]].productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx[ctx.splitView.viewKeys[0]].productContextInfo.props.fgf0PartitionScheme.dbValues.length >0) || (ctx[ctx.splitView.viewKeys[1]].productContextInfo.props.fgf0PartitionScheme.isNulls === undefined && ctx[ctx.splitView.viewKeys[1]].productContextInfo.props.fgf0PartitionScheme.dbValues.length >0))"
      },
      "isCompareApplicableInPartition": {
        "expression": "conditions.isSchemeAppliedinAtleastOneView && !conditions.is4GD"
      },
      "isPartitionLineSelected": {
        "expression": "ctx[commandContext.viewKey].selectedModelObjects && ctx[commandContext.viewKey].selectedModelObjects.length === 1 && ctx[commandContext.viewKey].selectedModelObjects[0].modelType.typeHierarchyArray.indexOf('Fgf0PartitionElement') > -1"
      },
      "isPartitionLineSelectedOnAceActiveCtx": {
        "expression": "ctx.aceActiveContext.context.selectedModelObjects && ctx.aceActiveContext.context.selectedModelObjects.length === 1 && ctx.aceActiveContext.context.selectedModelObjects[0].modelType.typeHierarchyArray.indexOf('Fgf0PartitionElement') > -1"
      },
      "isPartitionGroupVisible": {
        "expression": "conditions.isOragnizationSchemeFeaturePresent && conditions.isOccurrenceManagementSubLocation && conditions.isSchemeApplied && !conditions.isTypeFnd0AppSession && conditions.isServerTc132orLater"
      },
      "isUnassignedCmdVisible": {
        "expression": "conditions.isPartitionGroupVisible && !conditions.is4GD && !conditions.isTypeFnd0AppSession && !conditions.isAutoPartitionUpdateScheme"
      },
      "isAutoPartitionUpdateScheme": {
        "expression": "ctx[commandContext.viewKey].supportedFeatures.Fgf0AutoPartitionSchemeFeature"
      },
      "tcVersionCondition13": {
        "expression": "ctx.tcSessionData.tcMajorVersion > 12"
      },
      "isInUnassignedMode": {
        "expression": "ctx.splitView !== undefined && ctx.occmgmtContext2.supportedFeatures.Awb0UnassignedFeature !== undefined && ctx.occmgmtContext2.supportedFeatures.Awb0UnassignedFeature === true"
      },
      "isSplitCmdVisibleAndUnassignedMode": {
        "expression": "conditions.isSplitCommandVisible && ctx.occmgmtContext2.supportedFeatures.Awb0UnassignedFeature !== undefined && ctx.occmgmtContext2.supportedFeatures.Awb0UnassignedFeature === true"
      },
      "isStructureFilterEnable": {
        "expression": "conditions.isStructureFilterSupported && conditions.isSchemeApplied && ctx.aceActiveContext.context.supportedFeatures['Awb0EnableSmartDiscoveryFeature']"
      },
      "solutionVariantSupportedPlatformVersion": {
        "expression": "( ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion >= 2 ) || (ctx.tcSessionData.tcMajorVersion >= 14)"
      },
      "enableOpenSVCreateNotificationCommandCond": {
        "expression": "commandContext.group.groupName==='SOLUTION_VARIANT'"
      },
      "isVariantRuleApplied": {
        "expression": "ctx.aceActiveContext.context.productContextInfo.props.awb0CurrentVariantRule.dbValues[0]!==null"
      },
      "isSolutionVariantCmdActiveOrVisible": {
        "expression": "conditions.solutionVariantSupportedPlatformVersion && conditions.isOccurrenceManagementSubLocation && conditions.isTreeOrTreeSummaryView && !ctx.splitView.mode && !conditions.isDuplicateEnabled && !conditions.isUpdateSWCCommandVisible && !conditions.isMarkupEnabled"
      },
      "enableSolutionVariantPreview": {
        "expression": "conditions.isOccurrenceManagementSubLocation && ctx.mselected.length === 1 && ctx.visibleServerCommands.Smc1SolutionVariantCmd && conditions.isVariantRuleApplied && conditions.isTreeOrTreeSummaryView && !ctx.splitView.mode && !conditions.isDuplicateEnabled && !conditions.isUpdateSWCCommandVisible && !conditions.isMarkupEnabled"
      },
      "isSolutionVariantPreviewSubLocation": {
        "expression": "ctx.sublocation.clientScopeURI==='Smc1SolutionVariant'"
      },
      "isValidSVR": {
        "expression": "ctx.aceActiveContext.context.isValidSVR === true"
      }
    },
    "functions": {
      "populateEditEffectivityProperties": {
        "functionName": "populateEditEffectivityProperties",
        "parameters": []
      },
      "getContextKeyFromParentScope": {
        "functionName": "getContextKeyFromParentScope",
        "parameters": [
          "{{$parent}}"
        ]
      },
      "getContextKeyFromBreadcrumbConfig": {
        "functionName": "getContextKeyFromBreadcrumbConfig",
        "parameters": [
          "{{$parent}}"
        ]
      },
      "getSeperateQuantityAndPrepareAddInput": {
        "functionName": "getSeperateQuantityAndPrepareAddInput",
        "parameters": []
      },
      "getNewChildElements": {
        "functionName": "getNewlyAddedChildElements",
        "parameters": [
          "{{data}}"
        ]
      },
      "getTotalNumberOfChildrenAdded": {
        "functionName": "getTotalNumberOfChildrenAdded",
        "parameters": [
          "{{data}}"
        ]
      },
      "getDisplayMode": {
        "functionName": "getDisplayMode",
        "parameters": [
          "",
          "{{ctx}}",
          "",
          "(ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView') && 'Tree' || 'List'"
        ]
      },
      "getTreeOrListDisplayMode": {
        "functionName": "getTreeOrListDisplayMode",
        "parameters": []
      },
      "getSelections": {
        "functionName": "getSelections",
        "parameters": []
      },
      "getSelectedUids": {
        "functionName": "getSelectedUids",
        "parameters": []
      },
      "adaptedRelatedModifiedRemoveOverrideInput": {
        "functionName": "adaptedRelatedModifiedInput",
        "parameters": []
      },
      "getSecondaryObjects": {
        "functionName": "getSecondaryObjects",
        "parameters": []
      },
      "setSourceAndTargetElements": {
        "functionName": "setSourceAndTargetElements",
        "parameters": [
          "{{data}}"
        ]
      },
      "populateInsertLevelInputInformation": {
        "functionName": "populateInsertLevelInputInformation",
        "parameters": []
      },
      "extractAllowedTypesInfoFromResponse": {
        "functionName": "extractAllowedTypesInfoFromResponse",
        "parameters": []
      },
      "getRemoveElements2Input": {
        "functionName": "getRemoveElements2Input",
        "parameters": [
          "{{ctx.mselected}}"
        ]
      },
      "getPciForFirstSelection": {
        "functionName": "getProductContextForProvidedObject",
        "parameters": [
          "{{ctx.mselected[0]}}"
        ]
      },
      "getPciForSecondSelection": {
        "functionName": "getProductContextForProvidedObject",
        "parameters": [
          "{{ctx.mselected[1]}}"
        ]
      },
      "getInactiveViewKey": {
        "functionName": "getInactiveViewKey",
        "parameters": []
      },
      "getWorkContextObject": {
        "functionName": "getObject",
        "parameters": [
          "{{ctx.aceActiveContext.context.workingContextObj.uid}}"
        ]
      },
      "getRemoveInput": {
        "functionName": "getRemoveInput",
        "parameters": [
          "{{data}}"
        ]
      },
      "getRemovePartInput": {
        "functionName": "getRemovePartInput",
        "parameters": [
          "{{data}}",
          "true"
        ]
      },
      "getSetPrimaryInput": {
        "functionName": "getSetPrimaryInput",
        "parameters": [
          "{{data}}"
        ]
      },
      "getOccAlignmentInput": {
        "functionName": "getOccAlignmentInput",
        "parameters": []
      },
      "getTopAlignmentInput": {
        "functionName": "getTopAlignmentInput",
        "parameters": [
          "{{ctx.cbaContext.trgStructure}}",
          "{{ctx.cbaContext.srcStructure}}"
        ]
      },
      "getOccUnAlignmentInput": {
        "functionName": "getOccUnAlignmentInput",
        "parameters": []
      },
      "getUnAlignmentConfirmationInput": {
        "functionName": "getUnAlignmentConfirmationInput",
        "parameters": []
      },
      "getRefreshObjectsInput": {
        "functionName": "getRefreshObjectsInput",
        "parameters": [
          "{{data.eventMap['cba.refreshObjects'].primarySelection}}",
          "{{data.eventMap['cba.refreshObjects'].secondarySelection}}"
        ]
      },
      "getAffectedObjectUIDPostPartCADAlignmentUpdate": {
        "functionName": "getAffectedObjectUIDPostPartCADAlignmentUpdate",
        "parameters": [
          "{{data.eventMap['cba.reExecuteAlignmentCheck'].contextName}}",
          "{{data.eventMap['cba.reExecuteAlignmentCheck'].secondarySelection}}",
          "{{data.eventMap['cba.reExecuteAlignmentCheck'].isTopAlignment}}"
        ]
      }
    },
    "i18n": {
      "addElementBtn": [
        "OccurrenceManagementConstants",
        "OccmgmtRevOccConstants",
        "OccurrenceManagementConstants"
      ],
      "addSibling": [
        "OccurrenceManagementConstants"
      ],
      "aceDuplicate": [
        "OccurrenceManagementConstants"
      ],
      "replaceElementBtn": [
        "OccurrenceManagementConstants"
      ],
      "saveAsAndReplace": [
        "OccurrenceManagementConstants"
      ],
      "addChild": [
        "OccurrenceManagementConstants"
      ],
      "restructure": [
        "OccurrenceManagementConstants"
      ],
      "effectivity": [
        "OccurrenceManagementConstants"
      ],
      "effectivityTitle": [
        "OccurrenceManagementConstants"
      ],
      "elementEffectivityTitle": [
        "OccurrenceManagementConstants"
      ],
      "occmgmtConfigurationFilterTitle": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ExpandGroupDesc": [
        "OccurrenceManagementConstants"
      ],
      "filter": [
        "OccurrenceManagementConstants"
      ],
      "saveWorkingContextTitle": [
        "OccurrenceManagementConstants"
      ],
      "workingContextTitle": [
        "OccurrenceManagementConstants"
      ],
      "saveAsWorkingContextTitle": [
        "OccurrenceManagementConstants"
      ],
      "saveButtonText": [
        "OccurrenceManagementConstants"
      ],
      "saveAsButtonText": [
        "OccurrenceManagementConstants"
      ],
      "reset": [
        "OccurrenceManagementConstants"
      ],
      "find": [
        "OccurrenceManagementConstants"
      ],
      "removeSingleConfirmation": [
        "OccurrenceManagementMessages",
        "OccurrenceManagementMessages"
      ],
      "removeSingleLevelConfirmation": [
        "OccurrenceManagementMessages"
      ],
      "removeMultipleConfirmation": [
        "OccurrenceManagementMessages",
        "OccurrenceManagementMessages"
      ],
      "removeFailure": [
        "OccurrenceManagementMessages",
        "OccurrenceManagementMessages"
      ],
      "removeLevelSuccessful": [
        "OccurrenceManagementMessages"
      ],
      "aw_navigate": [
        "OccurrenceManagementMessages"
      ],
      "occmgmt_cell_commands": [
        "OccurrenceManagementMessages"
      ],
      "occmgmt_breadcrumb_cell_commands": [
        "OccurrenceManagementMessages"
      ],
      "awb0_displayAndRemoveEffectivityForRelnStatus": [
        "OccurrenceManagementMessages"
      ],
      "awb0_commandGroupEffectivities": [
        "OccurrenceManagementMessages"
      ],
      "awb0_commandDisplayAndRemoveEffectivity": [
        "OccurrenceManagementMessages"
      ],
      "awb0_variantCommands": [
        "OccurrenceManagementMessages"
      ],
      "Awb0MarkupAtLevelAnchor": [
        "OccurrenceManagementMessages"
      ],
      "Awb0MarkupAtElementAnchor": [
        "OccurrenceManagementMessages"
      ],
      "occurrenceManagementShowChildOccurrencesTitle": [
        "OccurrenceManagementConstants"
      ],
      "resetConfirmation": [
        "OccurrenceManagementMessages"
      ],
      "resetConfirmationOutsideSWC": [
        "OccurrenceManagementMessages"
      ],
      "awb0_oneStepPinCommands": [
        "OccurrenceManagementMessages"
      ],
      "aw_ICS": [
        "OccurrenceManagementMessages"
      ],
      "aw_toolsAndInfo": [
        "OccurrenceManagementMessages"
      ],
      "clearAllConfirmation": [
        "OccurrenceManagementMessages"
      ],
      "selectAll": [
        "OccurrenceManagementConstants"
      ],
      "clearAll": [
        "OccurrenceManagementConstants"
      ],
      "clearEff": [
        "OccurrenceManagementConstants"
      ],
      "clear": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ClearEffCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "cancel": [
        "OccurrenceManagementConstants",
        "OccurrenceManagementConstants"
      ],
      "occMgmtTitle": [
        "OccurrenceManagementConstants",
        "OccurrenceManagementConstants"
      ],
      "awb0PinButtonToolTip": [
        "OccurrenceManagementConstants"
      ],
      "awb0UnpinButtonToolTip": [
        "OccurrenceManagementConstants"
      ],
      "addEffectivities": [
        "OccurrenceManagementConstants"
      ],
      "aceRemove": [
        "OccurrenceManagementConstants",
        "OccurrenceManagementConstants"
      ],
      "aceRemoveLevel": [
        "OccurrenceManagementConstants"
      ],
      "removeElementTitle": [
        "OccurrenceManagementConstants"
      ],
      "addSubstitute": [
        "OccurrenceManagementConstants"
      ],
      "addSubstitutePWA": [
        "OccurrenceManagementConstants"
      ],
      "insertLevel": [
        "OccurrenceManagementConstants"
      ],
      "cutSubstitute": [
        "OccurrenceManagementConstants"
      ],
      "useSubstitute": [
        "OccurrenceManagementConstants"
      ],
      "markup": [
        "OccurrenceManagementConstants"
      ],
      "showExcluded": [
        "OccurrenceManagementConstants"
      ],
      "showExcludedByVariants": [
        "OccurrenceManagementConstants"
      ],
      "showSuppressed": [
        "OccurrenceManagementConstants"
      ],
      "expand": [
        "OccurrenceManagementConstants"
      ],
      "expandBelow": [
        "OccurrenceManagementConstants"
      ],
      "collapseBelow": [
        "OccurrenceManagementConstants"
      ],
      "liveSearchResultCommandTitle": [
        "OccurrenceManagementConstants"
      ],
      "applyMarkup": [
        "OccurrenceManagementConstants"
      ],
      "cancelMarkup": [
        "OccurrenceManagementConstants"
      ],
      "acePackElement": [
        "OccurrenceManagementConstants"
      ],
      "aceUnpackElement": [
        "OccurrenceManagementConstants"
      ],
      "acePackAllElements": [
        "OccurrenceManagementConstants"
      ],
      "aceUnpackAllElements": [
        "OccurrenceManagementConstants"
      ],
      "aceContextUndo": [
        "OccurrenceManagementConstants"
      ],
      "aceContextRevise": [
        "OccurrenceManagementConstants"
      ],
      "aceContextCloneBelow": [
        "OccurrenceManagementConstants"
      ],
      "applyMarkups": [
        "OccurrenceManagementConstants"
      ],
      "confirm": [
        "OccurrenceManagementConstants"
      ],
      "pending": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ViewGroup": [
        "OccurrenceManagementConstants"
      ],
      "groupEffectivityTitle": [
        "OccurrenceManagementConstants"
      ],
      "addGroupEffectivity": [
        "OccurrenceManagementConstants"
      ],
      "removeGroupEffectivityTooltip": [
        "OccurrenceManagementConstants"
      ],
      "separateElementToDistinctElements": [
        "OccurrenceManagementConstants"
      ],
      "configure": [
        "OccurrenceManagementConstants"
      ],
      "aceSetInContext": [
        "OccurrenceManagementConstants"
      ],
      "configureBySelection": [
        "OccurrenceManagementConstants"
      ],
      "configureByProximity": [
        "OccurrenceManagementConstants"
      ],
      "RemoveOverride": [
        "OccurrenceManagementConstants"
      ],
      "notifyAppliedVariantRuleWithConfigureByProximity": [
        "OccurrenceManagementMessages"
      ],
      "Awb0GroupEffectivityDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AceUnifiedInContextSearchDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SeparateDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0PackDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0UnpackDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0PackAllDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0UnpackAllDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddChildElementDeclarativeDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddSiblingElementDeclarativeDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ExpandSuppressedDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ShowDuplicateDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveElementDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveLevelDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ReplaceElementDeclarativeDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SaveAsAndReplaceElementDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ReleaseStatusEffectivityDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awp0ReleaseStatusEffectivityDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0OccurrenceEffectivityDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddGroupEffectivityCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveGroupEffectivityCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0StructureFilterCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SaveWorkingContextDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SaveAsWorkingContextDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0UpdateWorkingContextDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ConfigurationFilterDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ResetStructureDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ShowChildOccurrencesDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddEffectivityForRelnStatusCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveEffectivityForRelnStatusCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddEffectivitiesCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveEffectivitiesCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddNewVariantRuleCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddSubstitutesDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0InsertParentElementDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveSubstitutesDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0UseSubstituteDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ShowMarkupDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ShowUnconfiguredByOccEffectivityDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ShowUnconfiguredByVariantsDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ShowSuppressedDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ExpandBelowDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0CollapseBelowDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0CancelMarkupLevelDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ApplyMarkupDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ViewGroupDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0ConfigurationGroupDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SetInContextDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0CBOSCmdDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RemoveOverrideDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SaveVariantRuleDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0GetLiveSearchResultCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AceReferenceContextMenuDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AceCloneCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AceReplaceContextMenuDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AceRemoveContextMenuDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AceCloneBelowCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0MoveDownCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0MoveUpCommand": [
        "OccurrenceManagementConstants"
      ],
      "moveUpTitle": [
        "OccurrenceManagementConstants"
      ],
      "moveDownTitle": [
        "OccurrenceManagementConstants"
      ],
      "Awb0SelectAllCommandDesc": [
        "OccurrenceManagementConstants"
      ],
      "Awb0AddGroupDescription": [
        "OccurrenceManagementConstants"
      ],
      "Awb0RestructureGrpDesc": [
        "OccurrenceManagementConstants"
      ],
      "removeRevision": [
        "OccmgmtRevOccConstants"
      ],
      "addRevisionTitle": [
        "OccmgmtRevOccConstants"
      ],
      "Awb0AddRevisionDesc": [
        "OccmgmtRevOccConstants"
      ],
      "Awb0RemoveRevisionDesc": [
        "OccmgmtRevOccConstants"
      ],
      "actionColumn": [
        "OccmgmtImportExportConstants"
      ],
      "aceImportPreviewNewAction": [
        "OccmgmtImportExportConstants"
      ],
      "aceImportPreviewOverwriteContentMenu": [
        "OccmgmtImportExportConstants"
      ],
      "aceImportPreviewReferenceContentMenu": [
        "OccmgmtImportExportConstants"
      ],
      "aceImportPreviewReviseContentMenu": [
        "OccmgmtImportExportConstants"
      ],
      "Awb0AceImportPreviewOverwriteContextMenuDesc": [
        "OccmgmtImportExportConstants"
      ],
      "Awb0AceImportPreviewReferenceContextMenuDesc": [
        "OccmgmtImportExportConstants"
      ],
      "Awb0AceImportPreviewReviseContextMenuDesc": [
        "OccmgmtImportExportConstants"
      ],
      "importTitle": [
        "OccmgmtImportExportConstants"
      ],
      "Awb0ImportFromExcelDesc": [
        "OccmgmtImportExportConstants"
      ],
      "addChildRow": [
        "OccmgmtInlineAuthConstants"
      ],
      "addSiblingRow": [
        "OccmgmtInlineAuthConstants"
      ],
      "cancelEditsTitle": [
        "ZeroCompileCommandMessages"
      ],
      "saveEditsTitle": [
        "ZeroCompileCommandMessages"
      ],
      "add": [
        "OccmgmtInlineAuthConstants"
      ],
      "removeInlineRow": [
        "OccmgmtInlineAuthConstants"
      ],
      "awb0SplitToolTip": [
        "occmgmtSplitViewsConstants"
      ],
      "openInView": [
        "occmgmtSplitViewsConstants"
      ],
      "awb0OpenInViewCommandDesc": [
        "occmgmtSplitViewsConstants"
      ],
      "awb0SplitRootCmdDesc": [
        "occmgmtSplitViewsConstants"
      ],
      "continueForUnsavedWorkset": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveAndContinue": [
        "OccurrenceManagementSubsetConstants"
      ],
      "unsavedChangesForSaveAs": [
        "OccurrenceManagementSubsetConstants"
      ],
      "CreateWorksetCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "createWorksetTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "SaveSessionCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "SaveAsSessionCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "CreateSessionCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "replayTitle": [
        "OccurrenceManagementSubsetConstants"
      ],
      "ResetSessionCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "Session": [
        "OccurrenceManagementSubsetConstants"
      ],
      "resetSessionTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveSessionTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "sessionCmdGroupTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "createSessionTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveAsSessionTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveSessionConfirmPopupMsg": [
        "OccurrenceManagementSubsetConstants"
      ],
      "CancelText": [
        "OccurrenceManagementSubsetConstants"
      ],
      "OverwriteText": [
        "OccurrenceManagementSubsetConstants"
      ],
      "include": [
        "OccurrenceManagementSubsetConstants"
      ],
      "exclude": [
        "OccurrenceManagementSubsetConstants"
      ],
      "Awb0IncludeDesc": [
        "OccurrenceManagementSubsetConstants"
      ],
      "Awb0ExcludeDesc": [
        "OccurrenceManagementSubsetConstants"
      ],
      "ClearText": [
        "OccurrenceManagementSubsetConstants"
      ],
      "settings": [
        "OccurrenceManagementSubsetConstants"
      ],
      "confirmClearAllMsg": [
        "OccurrenceManagementSubsetConstants"
      ],
      "clearAllCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "recipeClearAllDesc": [
        "OccurrenceManagementSubsetConstants"
      ],
      "filterSettingsDesc": [
        "OccurrenceManagementSubsetConstants"
      ],
      "applyButtonTitle": [
        "OccurrenceManagementSubsetConstants"
      ],
      "applyProductSnapshotCommandDesc": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveSessionInfoMsg": [
        "OccurrenceManagementSubsetConstants"
      ],
      "SaveWorksetCmd": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveWorksetTooltip": [
        "OccurrenceManagementSubsetConstants"
      ],
      "unsavedObjectMessageForOpenInVis": [
        "OccurrenceManagementSubsetConstants"
      ],
      "saveAndOpen": [
        "OccurrenceManagementSubsetConstants"
      ],
      "continueForUnsaved": [
        "OccurrenceManagementSubsetConstants"
      ],
      "Awp0AlignDesignTooltip": [
        "CadBomAlignmentConstants"
      ],
      "Awp0UnAlignDesignTooltip": [
        "CadBomAlignmentConstants"
      ],
      "Awp0AlignTooltip": [
        "CadBomAlignmentConstants"
      ],
      "Awp0UnAlignTooltip": [
        "CadBomAlignmentConstants"
      ],
      "Awp0SetPrimaryDesignTooltip": [
        "CadBomAlignmentConstants"
      ],
      "AlignOccurrenceToolTip": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBALaunchAlignTaskToolTip": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAModuleTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignTaskTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignToolTip": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAUnAlignToolTip": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignmentCheckGroup": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignmentCheck": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignmentCheckSettings": [
        "CadBomAlignmentConstants"
      ],
      "AlignmentDoNotExist": [
        "CadBomAlignmentMessages"
      ],
      "SingleDesignPartUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "SingleDesignMultiplePartsUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "MultipleDesignsSinglePartUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "SingleDesignUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "MultipleDesignsUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "SinglePartUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "MultiplePartsUnAlignmentConfirmation": [
        "CadBomAlignmentMessages"
      ],
      "Awp0AlignDesignDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awp0UnAlignDesignDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awp0AlignPartDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awp0UnAlignPartDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awp0SetPrimaryDesignDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBALaunchAlignTaskDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAUnAlignDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignmentCheckDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignmentCheckSettingsDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenGroupTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenGroupDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenObjectTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenObjectDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenInNewWindowTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenInNewWindowDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenInNewTabTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenInNewTabDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignGroupTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAAlignGroupDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenAlignmentViewTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0EntCBAOpenAlignmentViewDesc": [
        "CadBomAlignmentConstants"
      ],
      "Awb0FindAlignedTitle": [
        "CadBomAlignmentConstants"
      ],
      "Awb0FindAlignedDesc": [
        "CadBomAlignmentConstants"
      ],
      "RevisionRuleAdminTitle": [
        "RevisionRuleAdminConstants"
      ],
      "clauseUp": [
        "RevisionRuleAdminConstants"
      ],
      "clauseDown": [
        "RevisionRuleAdminConstants"
      ],
      "clauseAdd": [
        "RevisionRuleAdminConstants"
      ],
      "clauseDelete": [
        "RevisionRuleAdminConstants"
      ],
      "addClausesPanelTitle": [
        "RevisionRuleAdminConstants"
      ],
      "addRevisionRule": [
        "RevisionRuleAdminConstants"
      ],
      "deleteRevisionRule": [
        "RevisionRuleAdminConstants"
      ],
      "clausesCommandAnchor": [
        "RevisionRuleAdminConstants"
      ],
      "removeProp": [
        "RevisionRuleAdminConstants"
      ],
      "ClausePropertyAddDesc": [
        "RevisionRuleAdminConstants"
      ],
      "RevisionRuleClauseUpDesc": [
        "RevisionRuleAdminConstants"
      ],
      "RevisionRuleClauseDownDesc": [
        "RevisionRuleAdminConstants"
      ],
      "RevisionRuleClauseAddDesc": [
        "RevisionRuleAdminConstants"
      ],
      "RevisionRuleClauseDeleteDesc": [
        "RevisionRuleAdminConstants"
      ],
      "RevisionRuleAdminDesc": [
        "RevisionRuleAdminConstants"
      ],
      "ClausePropertyRemoveDesc": [
        "RevisionRuleAdminConstants"
      ],
      "ClausePropertyReplaceDesc": [
        "RevisionRuleAdminConstants"
      ],
      "Unassigned": [
        "OccmgmtPartitionMessages"
      ],
      "Awb0UnassignedDesc": [
        "OccmgmtPartitionMessages"
      ],
      "Partition": [
        "OccmgmtPartitionMessages"
      ],
      "Awb0PartitionDesc": [
        "OccmgmtPartitionMessages"
      ],
      "addPartitionTooltip": [
        "OccmgmtPartitionMessages"
      ],
      "previewSolutionVariant": [
        "SolutionVariantConstants"
      ],
      "previewSolutionVariantDesc": [
        "SolutionVariantConstants"
      ],
      "cancelSVCreation": [
        "SolutionVariantMessages"
      ],
      "openSV": [
        "SolutionVariantMessages"
      ],
      "existingSVConfirmation": [
        "SolutionVariantMessages"
      ],
      "invalidOrIncompleteVariantRule": [
        "SolutionVariantMessages"
      ]
    },
    "onEvent": [
      {
        "eventId": "launchEditEffectivityPanel",
        "action": "launchEditEffectivityPanel"
      },
      {
        "eventId": "split.splitStarted",
        "action": "updateSelectedElementQuantity",
        "cacheEventData": true
      },
      {
        "eventId": "postRemoveAttachmentCleanupAction",
        "action": "postRemoveAttachmentCleanupAction"
      },
      {
        "eventId": "ace.pasteSuccessful",
        "action": "acePostPasteAction",
        "condition": "conditions.isCutAction"
      },
      {
        "eventId": "ace.performSeparateElementsAction",
        "action": "aceSeparateElementsAction",
        "cacheEventData": true
      },
      {
        "eventId": "ace.resetStructure",
        "action": "resetStructure"
      },
      {
        "eventId": "performPostRemoveAction",
        "action": "performPostRemoveAction"
      },
      {
        "eventId": "performPostRemoveLevelAction",
        "action": "performPostRemoveLevelAction"
      },
      {
        "eventId": "ace.configureBasedOnSelectionUpdatedInReqPref",
        "action": "updateConfigurationParams"
      },
      {
        "eventId": "ace.UseSubstitute",
        "action": "updateActiveContextToRefreshSelectedObjectInPWA"
      },
      {
        "eventId": "ace.refreshSelectedObjectInPWA.updated",
        "action": "refreshPwaWithStartFreshNavigation"
      },
      {
        "eventId": "ace.resetStructureFreshNavigation",
        "action": "resetStructureFreshNavigation"
      },
      {
        "eventId": "ace.resetStructureClearRecipe",
        "action": "resetStructureClearRecipe"
      },
      {
        "eventId": "perform.packSimilarElements",
        "action": "packSimilarElements"
      },
      {
        "eventId": "tree.postProcessPackUnpackResponse",
        "action": "postProcessPackUnpackResponse"
      },
      {
        "eventId": "perform.packAllSimilarElements",
        "action": "packAllSimilarElements"
      },
      {
        "eventId": "acePwaCommand.showConfirmationMessageForResetAction",
        "action": "showConfirmationMessageForResetAction"
      },
      {
        "eventId": "acePwaCommand.toggleMarkupAction",
        "action": "toggleMarkupAction"
      },
      {
        "eventId": "acePwaCommand.acePackElementsAction",
        "action": "acePackElementsAction"
      },
      {
        "eventId": "acePwaCommand.aceUnpackElementsAction",
        "action": "aceUnpackElementsAction"
      },
      {
        "eventId": "acePwaCommand.launchStructureFilterPanelAction",
        "action": "launchStructureFilterPanelAction"
      },
      {
        "eventId": "acePwaCommand.launchConfigurationPanelAction",
        "action": "launchConfigurationPanelAction"
      },
      {
        "eventId": "acePwaCommand.launchUnifiedNavigationPanelAction",
        "action": "launchUnifiedNavigationPanelAction"
      },
      {
        "eventId": "acePwaCommand.toggleIneffectiveAction",
        "action": "toggleIneffectiveAction"
      },
      {
        "eventId": "acePwaCommand.toggleVariantsInAction",
        "action": "toggleVariantsInAction"
      },
      {
        "eventId": "acePwaCommand.toggleSuppressedInAction",
        "action": "toggleSuppressedInAction"
      },
      {
        "eventId": "acePwaCommand.aceExpandBelowAction",
        "action": "aceExpandBelowAction"
      },
      {
        "eventId": "acePwaCommand.aceCollapseBelowAction",
        "action": "aceCollapseBelowAction"
      },
      {
        "eventId": "acePwaCommand.acePackAllElementsAction",
        "action": "acePackAllElementsAction"
      },
      {
        "eventId": "acePwaCommand.aceUnpackAllElementsAction",
        "action": "aceUnpackAllElementsAction"
      },
      {
        "eventId": "Awb0SaveAsRevisePreProcessingSuccessful",
        "action": "awb0SaveAsorReviseCommandAction"
      },
      {
        "eventId": "toggleInContextOverrideOnSelectedParentAssembly",
        "condition": "conditions.isTreeOrTreeSummaryView",
        "action": "toggleInContextOverrideInTreeView"
      },
      {
        "eventId": "toggleInContextOverrideOnSelectedParentAssembly",
        "condition": "conditions.isNotTreeOrTreeeSummaryView",
        "action": "toggleInContextOverrideFromNonTreeView"
      },
      {
        "eventId": "hideExpandOptionsPopup",
        "action": "hideExpandOptionsPopup"
      },
      {
        "eventId": "performRemoveAttachmentOverride",
        "condition": "conditions.isRemoveAttachmentOverridePerformed",
        "action": "removeAttachmentOverrideSoaCall"
      },
      {
        "eventId": "performCutAttachmentOperation",
        "condition": "conditions.isCutAttachmentPerformed",
        "action": "cutAttachmentSoaCall"
      },
      {
        "eventId": "awb0Markup.ApplyMarkupSOA",
        "action": "applyMarkupSOA",
        "cacheEventData": true
      },
      {
        "eventId": "awb0ApplyMarkup.success",
        "action": "updateActiveContextToRefreshSelectedObjectInPWA"
      },
      {
        "eventId": "insertLevel.launchInsertLevelPanel",
        "action": "launchInsertLevelPanel"
      },
      {
        "eventId": "ace.resetStructureStarted",
        "action": "resetShowPortState"
      },
      {
        "eventId": "ace.resetStructureStarted",
        "action": "resetShowConnectionState"
      },
      {
        "eventId": "updateContextInfo",
        "action": "updateValueOnCtxWithProvidedValue",
        "cacheEventData": true
      },
      {
        "eventId": "revOcc.submitWorkflow.adaptedInputs",
        "action": "revOccGetPropsForSubmitToWorkflow"
      },
      {
        "eventId": "revOcc.workflow.getSelectedBOTypeName",
        "action": "revOccGetSelectedBOTypeName"
      },
      {
        "eventId": "revOcc.workflow.getTypesFromBO",
        "action": "revOccGetTypeFromBOConstant"
      },
      {
        "eventId": "revOcc.workflow.validateForCreatingWorkflowPresenterEvent",
        "action": "revOccGalidateForCreatingWorkflowPresenterAction"
      },
      {
        "eventId": "ace.retainCurrentExpansionState",
        "action": "retainCurrentExpansionState"
      },
      {
        "eventId": "acePwaCommand.launchOpenInViewCommand",
        "action": "awb0launchOpenInViewCommandPanelAction"
      },
      {
        "eventId": "enableSplitMode",
        "action": "enableSplitMode"
      },
      {
        "eventId": "enableSplitMode",
        "action": "addProductOpenedInSplitViewToSessionStorage"
      },
      {
        "eventId": "disableSplitMode",
        "action": "disableSplitMode"
      },
      {
        "eventId": "ace.openInSplitView",
        "cacheEventData": true,
        "action": "openInSplitView"
      },
      {
        "eventId": "ace.openInSplitViewFromSWC",
        "action": "openWithoutSWCContext"
      },
      {
        "eventId": "ace.clearExpansionState",
        "action": "clearExpansionState"
      },
      {
        "eventId": "acePwaCommand.awb0StartTreeEdit",
        "action": "awb0StartTreeEdit"
      },
      {
        "eventId": "tree.packUnpackSuccessful",
        "action": "updateInctiveView",
        "condition": "conditions.isPackUnpackParentChildInfoReceived"
      },
      {
        "eventId": "ace.refreshInactiveViewWithSameConfig",
        "action": "refreshInactiveViewWithSameConfig"
      },
      {
        "eventId": "clearLocalStorageForInavtiveView",
        "action": "clearLocalStorageForInavtiveView"
      },
      {
        "eventId": "confirmSaveSessionEvent",
        "message": "saveSessionConfirmPopup"
      },
      {
        "eventId": "showSaveSessionInfoEvent",
        "message": "showSaveSessionInfoMessage"
      },
      {
        "eventId": "performPostRemoveAction",
        "action": "postRemoveActionSubsetFromWorkset",
        "condition": "conditions.isSelectionUnderWorksetContext"
      },
      {
        "eventId": "showSaveWorksetInfoEvent",
        "message": "showSaveWorksetInfoMessage"
      },
      {
        "eventId": "saveAsReviseNonDirtyWorkset",
        "action": "saveAsReviseOpenPanelBatch"
      },
      {
        "eventId": "occmgmtsubset.applySnapshot",
        "action": "clearFilterCache"
      },
      {
        "eventId": "saveAsReviseDirtyWorkset",
        "message": "SaveWsConfirmPopupForSaveAsRevise",
        "condition": "conditions.isWriteAccessProvidedOnWorksetRev"
      },
      {
        "eventId": "saveAsReviseDirtyWorkset",
        "action": "continueWithoutSaving",
        "condition": "conditions.isWriteAccessNotProvidedOnWorksetRev"
      },
      {
        "eventId": "updateConfigurationParamsForCBOS",
        "action": "updateConfigurationParamsForCBOS"
      },
      {
        "eventId": "showUnsavedObjectMessageWithWriteAccessForOpenInVis",
        "message": "unsavedObjectMessageWithWriteAccessForOpenInVis"
      },
      {
        "eventId": "showUnsavedObjectMessageNoWriteAccessForOpenInVis",
        "message": "unsavedObjectMessageNoWriteAccessForOpenInVis"
      },
      {
        "eventId": "SaveAsReviseOpenPanelEvent",
        "action": "saveAsReviseOpenPanel"
      },
      {
        "eventId": "cba.alignmentSuccess",
        "action": "executeAlignmentCheckPostAlignUnAlign",
        "cacheEventData": true
      },
      {
        "eventId": "cba.alignmentSuccess",
        "action": "resetFindAlignedState",
        "cacheEventData": true
      },
      {
        "eventId": "cba.unAlignmentSuccess",
        "action": "executeAlignmentCheckPostAlignUnAlign",
        "cacheEventData": true
      },
      {
        "eventId": "cba.unAlignmentSuccess",
        "action": "resetFindAlignedState",
        "cacheEventData": true
      },
      {
        "eventId": "cba.partDesignAlignment",
        "action": "fireReExecuteAlignmentCheck",
        "cacheEventData": true
      },
      {
        "eventId": "cba.partDesignUnAlignment",
        "action": "fireReExecuteAlignmentCheck",
        "cacheEventData": true
      },
      {
        "eventId": "cba.reExecuteAlignmentCheck",
        "action": "executeAlignmentCheckPostPartCADUnAlign",
        "cacheEventData": true
      },
      {
        "eventId": "cba.refreshObjects",
        "action": "cbaRefreshObjectsAction",
        "cacheEventData": true
      },
      {
        "eventId": "cba.notifyViewerAlignmentUpdated",
        "action": "notifyViewerAlignmentUpdated",
        "cacheEventData": true
      },
      {
        "eventId": "cba.updateStructures",
        "action": "updateStructuresPostAlignment",
        "cacheEventData": true
      },
      {
        "eventId": "performPostRemoveActionForPartition",
        "action": "performPostRemoveActionForPartition"
      },
      {
        "eventId": "updateAcePwaWithCreatedPartition",
        "action": "updateAcePwaWithCreatedPartition"
      },
      {
        "eventId": "ace.retainCurrentExpansionState",
        "action": "retainCurrentExpansionState"
      },
      {
        "eventId": "enableSplitModeForUnassigned",
        "action": "enableSplitModeForUnassigned"
      },
      {
        "eventId": "disableUnassignedMode",
        "action": "disableUnassignedMode"
      },
      {
        "eventId": "ace.clearExpansionState",
        "action": "clearExpansionState"
      },
      {
        "eventId": "updateCtxWithUnassigned",
        "action": "updateCtxWithUnassigned"
      },
      {
        "eventId": "initializeUnassignedService",
        "action": "initializeUnassignedService"
      },
      {
        "eventId": "initializeUnassignedService",
        "action": "addProductOpenedInSplitViewToSessionStorage"
      },
      {
        "eventId": "postProcessSearchSVRsponse",
        "action": "postProcessSearchSVResults",
        "cacheEventData": true
      },
      {
        "eventId": "invokeSearchSVSoa",
        "condition": "conditions.isValidSVR",
        "action": "searchSolutionVariants"
      }
    ],
    "preferences": [
      "AWC_InlineMultiRowEnabled"
    ]
  },
  "contributions": {
    "occMgmtPageKey": [
      "js/multiSelectionSimpleCount.occMgmtPageKey",
      "js/markup.occMgmtPageKey"
    ]
  },
  "decorators": {
    "aceColorDecorator1": {
      "cellClassName": "aw-border-chartColor1",
      "gridClassName": "aw-charts-chartColor1",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor1"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator2": {
      "cellClassName": "aw-border-chartColor2",
      "gridClassName": "aw-charts-chartColor2",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor2"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator3": {
      "cellClassName": "aw-border-chartColor3",
      "gridClassName": "aw-charts-chartColor3",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor3"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator4": {
      "cellClassName": "aw-border-chartColor4",
      "gridClassName": "aw-charts-chartColor4",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor4"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator5": {
      "cellClassName": "aw-border-chartColor5",
      "gridClassName": "aw-charts-chartColor5",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor5"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator6": {
      "cellClassName": "aw-border-chartColor6",
      "gridClassName": "aw-charts-chartColor6",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor6"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator7": {
      "cellClassName": "aw-border-chartColor7",
      "gridClassName": "aw-charts-chartColor7",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor7"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator8": {
      "cellClassName": "aw-border-chartColor8",
      "gridClassName": "aw-charts-chartColor8",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor8"
              }
            }
          }
        }
      }
    },
    "aceColorDecorator9": {
      "cellClassName": "aw-border-chartColor9",
      "gridClassName": "aw-charts-chartColor9",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "Ace_IsChartColor1applicable": {
          "expression": {
            "$source": "ctx.aceActiveContext.context.groupedObjectsList.0.groupedObjectsMap",
            "$query": {
              "$vlookup": {
                "lookupValue": "{{localContext.vmo.uid}}",
                "lookupValueKey": "uid",
                "matchKey": 1,
                "matchValue": "aw-charts-chartColor9"
              }
            }
          }
        }
      }
    },
    "acePropertyMarkupColorDecorator": {
      "cellClassName": "",
      "gridClassName": "",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "method": "populateMarkupValues",
      "deps": "js/showMarkupService"
    },
    "aceStaleRowDecorator": {
      "cellClassName": "aw-occmgmtjs-stale",
      "gridClassName": "",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "method": "populateIndexSyncFailStatus",
      "inputData": {
        "vmos": "{{localContext.vmo}}"
      },
      "deps": "js/aceStaleRowMarkerService"
    },
    "acePropertyInteractiveDuplicateColorDecorator": {
      "cellClassName": "",
      "gridClassName": "",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "method": "populateDuplicateActions",
      "deps": "js/aceInteractiveDuplicateService"
    },
    "aceAddedLineMarkupColorDecorator": {
      "cellClassName": "aw-markup-added",
      "gridClassName": "aw-markup-added",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "awb0MarkupType": {
          "expression": {
            "$and": [
              {
                "$source": "ctx.aceActiveContext.context.isMarkupEnabled",
                "$query": {
                  "$eq": "true"
                }
              },
              {
                "$query": {
                  "$or": [
                    {
                      "$source": "localContext.vmo.type",
                      "$query": {
                        "$eq": "Awb0MarkupElement"
                      }
                    },
                    {
                      "$source": "localContext.vmo.props.awb0MarkupType.dbValues",
                      "$query": {
                        "$in": [
                          "128",
                          "144"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "aceRemovedLineMarkupColorDecorator": {
      "cellClassName": "aw-markup-deleted",
      "gridClassName": "aw-markup-deleted",
      "subLocationName": "com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation",
      "conditions": {
        "awb0MarkupType": {
          "expression": {
            "$and": [
              {
                "$source": "ctx.aceActiveContext.context.isMarkupEnabled",
                "$query": {
                  "$eq": "true"
                }
              },
              {
                "$source": "localContext.vmo.isDeleted",
                "$query": {
                  "$eq": "true"
                }
              }
            ]
          }
        }
      }
    },
    "cbaPropertyMarkupColorDecorator": {
      "cellClassName": "",
      "gridClassName": "",
      "subLocationName": "com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation",
      "method": "populateMarkupValues",
      "deps": "js/showMarkupService"
    },
    "cbaSolutionVariantDecorator": {
      "cellClassName": "",
      "gridClassName": "",
      "subLocationName": "com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation",
      "method": "markSolutionVariantNodesAsLeafNode",
      "deps": "js/cbaRefreshObjectsService"
    }
  },
  "headerContributions": [
    {
      "view": "AceHeader",
      "visibleWhen": "!ctx.splitView.mode && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation' && ctx.aceActiveContext.context.supportedFeatures.Awb0EnableConfigurationPanelFeature === true",
      "priority": "100"
    },
    {
      "view": "AceSplitHeader",
      "visibleWhen": "ctx.splitView.mode && ctx[subPanelContext.provider.viewKey].supportedFeatures.Awb0EnableConfigurationPanelFeature === true",
      "priority": "100"
    }
  ],
  "paste": {
    "schemaVersion": "1.0.0",
    "pasteHandlers": {
      "aceDefaultPasteHandler": {
        "action": "aceDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isAceDefaultPasteHandlerActive"
        }
      },
      "aceDefaultPasteActionSWC": {
        "action": "aceDefaultPasteActionSWC",
        "activeWhen": {
          "condition": "conditions.isAceSWCDefaultPasteHandlerActive"
        }
      },
      "aceDefaultPasteAttachmentOverride": {
        "action": "aceDefaultPasteAttachmentOverride",
        "activeWhen": {
          "condition": "conditions.isAcePasteAttachmentOverrideActive"
        }
      },
      "defaultPasteHandlerForSession": {
        "action": "sessionDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isPasteHandlerActiveForProductsInSession"
        }
      },
      "pasteHandlerForPartStructure": {
        "action": "aceDefaultPasteAction",
        "activeWhen": {
          "condition": "conditions.isSourceAndTargetValidPartElement"
        }
      }
    },
    "actions": {
      "aceDefaultPasteAction": {
        "actionType": "JSFunction",
        "method": "aceDefaultPasteHandler",
        "deps": "js/aceDefaultPasteHandler",
        "inputData": {
          "targetObject": "{{pasteContext.targetObject}}",
          "sourceObject": "{{pasteContext.sourceObject}}"
        }
      },
      "aceDefaultPasteActionSWC": {
        "actionType": "JSFunction",
        "method": "aceDefaultPasteHandlerForSWC",
        "deps": "js/aceDefaultPasteHandler",
        "inputData": {
          "targetObject": "{{pasteContext.targetObject}}",
          "sourceObject": "{{pasteContext.sourceObject}}"
        }
      },
      "aceDefaultPasteAttachmentOverride": {
        "actionType": "JSFunction",
        "method": "attachmentOverridePasteHandler",
        "deps": "js/aceDefaultPasteHandler",
        "inputData": {
          "targetObject": "{{pasteContext.targetObject}}",
          "sourceObject": "{{pasteContext.sourceObject}}",
          "relationType": "{{pasteContext.relationType}}"
        },
        "actionMessages": {
          "failure": [
            {
              "message": "aceDefaultPasteAttachmentOverrideFailure"
            }
          ]
        }
      },
      "sessionDefaultPasteAction": {
        "actionType": "JSFunction",
        "method": "sessionPasteHandler",
        "deps": "js/occmgmtSubsetUtils"
      }
    },
    "conditions": {
      "isAceDefaultPasteHandlerActive": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Awb0PositionedElement"
              }
            },
            {
              "$or": [
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Awb0PositionedElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "ItemRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Ase0LogicalElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Fnd0LogicalBlockRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Ase0FunctionalElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0RequirementSpecElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0RequirementElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0ParagraphElement"
                  }
                }
              ]
            }
          ]
        }
      },
      "isAceSWCDefaultPasteHandlerActive": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Awb0SavedBookmark"
              }
            },
            {
              "$or": [
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Awb0PositionedElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "ItemRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Ase0FunctionalElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Ase0LogicalElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0RequirementSpecElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0RequirementElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0ParagraphElement"
                  }
                }
              ]
            }
          ]
        }
      },
      "isAcePasteAttachmentOverrideActive": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "ItemRevision"
              }
            },
            {
              "$or": [
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Dataset"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "DocumentRevision"
                  }
                }
              ]
            },
            {
              "$source": "ctx.sublocation.enableOccMgmtCommands",
              "$query": {
                "$eq": true
              }
            }
          ]
        }
      },
      "isPasteHandlerActiveForProductsInSession": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Fnd0AppSession"
              }
            },
            {
              "$or": [
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "ItemRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Awb0Element"
                  }
                }
              ]
            }
          ]
        }
      },
      "isSourceAndTargetValidPartElement": {
        "expression": {
          "$and": [
            {
              "$source": "pasteContext.targetObject",
              "$query": {
                "$typeOf": "Awb0PartElement"
              }
            },
            {
              "$or": [
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Awb0PartElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "ItemRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "PartRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Ase0LogicalElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Fnd0LogicalBlockRevision"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Ase0FunctionalElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0RequirementSpecElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0RequirementElement"
                  }
                },
                {
                  "$source": "pasteContext.sourceObject",
                  "$query": {
                    "$typeOf": "Arm0ParagraphElement"
                  }
                }
              ]
            }
          ]
        }
      }
    },
    "messages": {
      "aceDefaultPasteAttachmentOverrideFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      }
    }
  },
  "propertyRendererTemplates": {
    "release_status_template": {
      "grids": [],
      "columns": [
        "awb0ArchetypeRevRelStatus",
        "usg0UsageOccRevRelStatus"
      ],
      "tooltip": [],
      "template": "",
      "templateUrl": "/propRenderTemplates/releaseStatusRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel",
        "soa/kernel/clientDataModel"
      ]
    },
    "icon_property_template": {
      "grids": [],
      "columns": [
        "awb0HasElementEffectivity",
        "awb0HasInContextOverrides",
        "awb0HasAlternates",
        "awb0HasSubstitues",
        "awb0HasVariant"
      ],
      "tooltip": [],
      "template": "",
      "templateUrl": "",
      "renderFunction": "propertyIconRenderer",
      "headerTemplateUrl": "/html/propertyIconRendererForHeader.html",
      "deps": "js/occmgmtPropertyIconRenderer",
      "dependentServices": []
    },
    "icon_text_property_template": {
      "grids": [],
      "columns": [
        "awb0EndItemState"
      ],
      "tooltip": [],
      "template": "",
      "templateUrl": "",
      "renderFunction": "propertyIconRenderer",
      "headerTemplateUrl": "",
      "deps": "js/occmgmtPropertyIconRenderer",
      "dependentServices": []
    },
    "discovery_indexed_template": {
      "grids": [],
      "columns": [
        "awb0IsDiscoveryIndexed"
      ],
      "tooltip": [
        "awb0DiscoveryIndexTime"
      ],
      "template": "",
      "templateUrl": "/propRendererTemplates/indexedStructureRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    },
    "entCbaAlignmentColumn_template": {
      "grids": [
        "cbaSourceTree"
      ],
      "columns": [
        "srcAlignmentIndication"
      ],
      "tooltip": [
        "alignmentTooltip"
      ],
      "renderFunction": "getSrcAlignmentIndicationRenderer",
      "deps": "js/CadBomAlignmentCheckPropertyRenderer"
    },
    "entCbaAdvanceColumn_template": {
      "grids": [
        "cbaSourceTree"
      ],
      "columns": [
        "srcAdvanceIndication"
      ],
      "tooltip": [
        "alignmentTooltip"
      ],
      "renderFunction": "getSrcAdvanceIndicationRenderer",
      "deps": "js/CadBomAlignmentCheckPropertyRenderer"
    },
    "entCbaTrgAlignmentColumn_template": {
      "grids": [
        "cbaTargetTree"
      ],
      "columns": [
        "trgAlignmentIndication"
      ],
      "tooltip": [
        "alignmentTooltip"
      ],
      "renderFunction": "getTrgAlignmentIndicationRenderer",
      "deps": "js/CadBomAlignmentCheckPropertyRenderer"
    },
    "entCbaTrgAdvanceColumn_template": {
      "grids": [
        "cbaTargetTree"
      ],
      "columns": [
        "trgAdvanceIndication"
      ],
      "tooltip": [
        "alignmentTooltip"
      ],
      "renderFunction": "getTrgAdvanceIndicationRenderer",
      "deps": "js/CadBomAlignmentCheckPropertyRenderer"
    },
    "entCbaColumnHeader_template": {
      "grids": [
        "cbaSourceTree",
        "cbaTargetTree"
      ],
      "columns": [
        "srcAlignmentIndication",
        "srcAdvanceIndication",
        "trgAlignmentIndication",
        "trgAdvanceIndication"
      ],
      "headerTemplateUrl": "/propertyRenderTemplates/entCbaAlignmentColumnHeaderRenderer.html"
    },
    "cbaXRTPrimaryColumn_template": {
      "grids": [],
      "columns": [
        "fnd0IsPrimary",
        "fnd0IsAlignmentCurrent"
      ],
      "tooltip": [
        "alignmentTooltip"
      ],
      "renderFunction": "getCbaXRTIndicationRenderer",
      "deps": "js/cbaXRTCellRenderer",
      "headerTemplateUrl": "/propertyRenderTemplates/cbaXrtHeaderRenderer.html",
      "dependentServices": [
        "js/localeService"
      ]
    }
  },
  "states": {
    "com_siemens_splm_clientfx_tcui_xrt_showObject": {
      "params": {
        "c_csid": null,
        "c_uid": null,
        "filter": null,
        "o_uid": null,
        "pci_uid": null,
        "spageId": null,
        "t_uid": null,
        "uid": null,
        "incontext_uid": null,
        "snap_uid": null,
        "retainTreeExp": null
      },
      "type": "parameter"
    },
    "importPreviewPageLocation": {
      "data": {
        "browserTitle": {
          "source": "/i18n/OccmgmtImportExportConstants",
          "key": "importPreviewHeaderTitle"
        },
        "browserSubTitle": {
          "source": "/i18n/OccmgmtImportExportConstants",
          "key": "importPreviewHeaderTitle"
        },
        "headerTitle": {
          "source": "/i18n/OccmgmtImportExportConstants",
          "key": "importPreviewHeaderTitle"
        }
      },
      "abstract": true,
      "view": "commonLocation",
      "parent": "root"
    },
    "com_siemens_splm_clientfx_tcui_xrt_importPreview": {
      "abstract": false,
      "data": {
        "nameToken": "com.siemens.splm.client.Awb0ImportPreview:importPreviewSublocation",
        "clientScopeURI": "Awb0ImportPreview",
        "context": {
          "hideRightWall": true
        },
        "breadcrumbConfig": {
          "noBreadCrumb": true
        },
        "params": {}
      },
      "params": {
        "cmdArg": {
          "array": true
        },
        "uid": null,
        "d_uid": null
      },
      "reloadOnSearch": false,
      "view": "Awb0ImportPreview",
      "parent": "importPreviewPageLocation",
      "url": "/com.siemens.splm.client.Awb0ImportPreview",
      "resolveActions": {
        "getData": {
          "actionType": "JSFunctionAsync",
          "method": "importPreviewData",
          "deps": "js/importPreviewService",
          "inputData": {
            "data": "{{data}}"
          },
          "outputData": {
            "ctx.modelObjectsToOpen": "result.data"
          }
        }
      }
    },
    "com_siemens_splm_clientfx_tcui_xrt_showMultiObject": {
      "abstract": false,
      "params": {
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "filter2": null,
        "page": null,
        "pageId": null,
        "s_uid": null,
        "uid": null,
        "uid2": null,
        "edit": null,
        "c_csid": null,
        "c_csid2": null,
        "c_uid": null,
        "c_uid2": null,
        "o_uid": null,
        "o_uid2": null,
        "pci_uid": null,
        "pci_uid2": null,
        "recipe": null,
        "recipe2": null,
        "spageId": null,
        "spageId2": null,
        "t_uid": null,
        "t_uid2": null
      },
      "reloadOnSearch": false,
      "view": "OccmgmtSplit",
      "url": "/com.siemens.splm.clientfx.tcui.xrt.showMultiObject",
      "parent": "root"
    },
    "cbaTaskPageRoot": {
      "abstract": true,
      "data": {},
      "view": "commonLocation",
      "parent": "root"
    },
    "CADBOMAlignment": {
      "abstract": false,
      "data": {
        "context": {
          "hideRightWall": true
        },
        "browserSubTitle": {
          "source": "/i18n/CadBomAlignmentConstants",
          "key": "CBAPageBrowserSubtitle"
        },
        "nameToken": "com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation",
        "clientScopeURI": ""
      },
      "params": {
        "cmdArg": {
          "array": true
        },
        "uid": null,
        "uid2": null,
        "c_uid": null,
        "c_uid2": null,
        "o_uid": null,
        "o_uid2": null,
        "pci_uid": null,
        "pci_uid2": null,
        "src_uid": null,
        "trg_uid": null,
        "spci_uid": null,
        "tpci_uid": null
      },
      "reloadOnSearch": false,
      "view": "cbaPage",
      "parent": "cbaTaskPageRoot",
      "url": "/CADBOMAlignment",
      "resolveActions": {
        "getData": {
          "actionType": "JSFunctionAsync",
          "method": "loadCBAData",
          "deps": "js/CadBomOccurrenceAlignmentService",
          "outputData": {
            "ctx.modelObjectsToOpen": "result.data"
          }
        }
      }
    },
    "com_siemens_splm_revRuleAdminLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/RevisionRuleAdminConstants",
          "key": "RevisionRuleAdmin"
        },
        "headerTitle": {
          "source": "/i18n/RevisionRuleAdminConstants",
          "key": "RevisionRuleAdmin"
        }
      },
      "type": "location"
    },
    "revRuleAdmin": {
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "searchRevRuleAdmin",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 0,
        "label": {
          "source": "/i18n/RevisionRuleAdminConstants",
          "key": "RevisionRuleAdmin"
        },
        "clientScopeURI": "",
        "nameToken": "com.siemens.splm.client.revruleadmin.revRuleAdmin",
        "viewModes": {
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          }
        },
        "context": {
          "search": {
            "loadDataAction": "loadData",
            "provider": "Awp0SavedSearchProvider",
            "sortType": "Priority"
          }
        },
        "viewBase": "RevisionRuleAdmin",
        "selectionMode": "single"
      },
      "params": {
        "searchCriteria": ""
      },
      "parent": "com_siemens_splm_revRuleAdminLocation",
      "type": "subLocation",
      "url": "/revRuleAdmin"
    },
    "solutionVariantPreviewPageLocation": {
      "data": {},
      "abstract": true,
      "view": "commonLocation",
      "parent": "root"
    },
    "solutionVariantPreview": {
      "abstract": false,
      "data": {
        "nameToken ": "com.siemens.splm.client.SVPreview:solutionVariantPreviewSublocation",
        "clientScopeURI": "Smc1SolutionVariant",
        "context": {
          "hideRightWall": true
        },
        "breadcrumbConfig": {
          "noBreadCrumb": true
        },
        "params": {}
      },
      "params": {
        "cmdArg": {
          "array": true
        },
        "uid": null,
        "pci_uid": null,
        "t_uid": null
      },
      "reloadOnSearch": false,
      "view": "solutionVariantPage",
      "parent": "solutionVariantPreviewPageLocation",
      "url": "/solutionVariantPreview",
      "resolveActions": {
        "getData": {
          "actionType": "JSFunctionAsync",
          "method": "loadModelObjToOpen",
          "deps": "js/solutionVariantService",
          "outputData": {
            "ctx.modelObjectsToOpen": "result.modelObjs"
          }
        }
      }
    }
  },
  "typeIconsRegistry": [
    {
      "type": {
        "names": [
          "Awb0Element"
        ],
        "prop": {
          "names": [
            "awb0UnderlyingObject"
          ],
          "type": {
            "names": [
              "BusinessObject"
            ]
          }
        }
      },
      "priority": 10
    },
    {
      "type": {
        "names": [
          "Awb0PartElement"
        ],
        "prop": {
          "names": [
            "awb0UnderlyingObject"
          ],
          "type": {
            "names": [
              "Part Revision"
            ]
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "Awb0PartElement"
        ],
        "prop": {
          "names": [
            "awb0UnderlyingObject"
          ],
          "type": {
            "names": [
              "Fnd0AbstractOccRevision"
            ]
          }
        }
      }
    }
  ],
  "typeProperties": {
    "typeProperties": {
      "Awb0Element": {
        "displayProperty": "object_string",
        "additionalProperties": [
          {
            "name": "awb0UnderlyingObject"
          },
          {
            "name": "awb0Archetype"
          },
          {
            "name": "awb0CsidPath",
            "modifiers": [
              {
                "name": "excludeUiValues",
                "Value": "true"
              }
            ]
          }
        ]
      },
      "Awb0ConditionalElement": {
        "additionalProperties": [
          {
            "name": "awb0OverriddenProperties"
          },
          {
            "name": "awb0OverrideContexts"
          },
          {
            "name": "awb0IsVi"
          }
        ]
      },
      "ItemRevision": {
        "additionalProperties": [
          {
            "name": "object_desc"
          },
          {
            "name": "is_vi"
          }
        ]
      },
      "Awb0PartElement": {
        "additionalProperties": [
          {
            "name": "usg0UsageOccRev"
          },
          {
            "name": "awb0UnderlyingObjectType"
          }
        ]
      },
      "Awb0DesignElement": {
        "additionalProperties": [
          {
            "name": "usg0UsageOccRev"
          }
        ]
      },
      "Fnd0AbstractOccRevision": {
        "additionalProperties": [
          {
            "name": "release_status_list",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          }
        ]
      },
      "Fnd0AppSession": {
        "additionalProperties": [
          {
            "name": "owning_user"
          },
          {
            "name": "fnd0AllowReadShare"
          },
          {
            "name": "fnd0AllowWriteShare"
          },
          {
            "name": "awb0PendingChanges"
          },
          {
            "name": "awb0LastReplayedDate"
          },
          {
            "name": "fnd0Roots"
          },
          {
            "name": "checked_out_user"
          },
          {
            "name": "checked_out_date"
          }
        ]
      },
      "Fnd0AlignedDesign": {
        "displayProperty": "fnd0IsPrimary",
        "additionalProperties": [
          {
            "name": "fnd0Primary"
          },
          {
            "name": "fnd0UnderlyingObject"
          }
        ]
      },
      "Fnd0AlignedPart": {
        "displayProperty": "fnd0IsPrimary",
        "additionalProperties": [
          {
            "name": "fnd0Primary"
          },
          {
            "name": "fnd0UnderlyingObject"
          },
          {
            "name": "fnd0IsAlignmentCurrent"
          },
          {
            "name": "fnd0AlignedStatus"
          }
        ]
      },
      "Item": {
        "additionalProperties": [
          {
            "name": "is_vi"
          }
        ]
      },
      "Awb0ProductContextInfo": {
        "additionalProperties": [
          {
            "name": "awb0CurrentRevRule"
          },
          {
            "name": "awb0CurrentVariantRule"
          },
          {
            "name": "awb0Product"
          },
          {
            "name": "awb0AutoBookmark"
          },
          {
            "name": "awb0EffDate"
          },
          {
            "name": "awb0EffEndItem"
          },
          {
            "name": "awb0EffUnitNo"
          },
          {
            "name": "awb0EffectivityGroups"
          },
          {
            "name": "awb0EndEffDates"
          },
          {
            "name": "awb0EndEffUnits"
          },
          {
            "name": "awb0PackSimilarElements"
          },
          {
            "name": "awb0SupportedFeatures"
          }
        ]
      }
    }
  },
  "saveAsRevise": {
    "Ebm0PartProductRevision": {
      "ReviseHidden": "true",
      "SaveAsHidden": "false"
    },
    "Fnd0WorksetRevision": {
      "ReviseHidden": "false",
      "SaveAsHidden": "false"
    }
  },
  "indicators": {
    "Awb0IndexedStructure_Indicator": {
      "iconName": "IndexedStructure",
      "tooltip": {
        "showPropDisplayName": true,
        "propNames": [
          "awb0DiscoveryIndexTime"
        ]
      },
      "modelTypes": [
        "ItemRevision"
      ],
      "conditions": {
        "awb0IsDiscoveryIndexed": {
          "$eq": true
        }
      }
    },
    "cba_primary_cad": {
      "iconName": "PrimaryDesign",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "fnd0Primary"
        ]
      },
      "modelTypes": [
        "Fnd0AlignedDesign",
        "Fnd0AlignedPart"
      ],
      "conditions": {
        "fnd0IsPrimary": {
          "$eq": true
        }
      }
    },
    "cba_alignment_mismatch": {
      "iconName": "Mismatch",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "fnd0AlignedStatus"
        ]
      },
      "modelTypes": [
        "Fnd0AlignedPart"
      ],
      "conditions": {
        "fnd0IsAlignmentCurrent": {
          "$eq": null
        }
      }
    }
  },
  "layoutSlots": {
    "slots": {
      "Awb0ContextFeatureSlot": {
        "name": "Awb0ContextFeature_ContextInFilter",
        "view": "Awb0ContextFeature",
        "activeWhen": {
          "condition": "conditions.contextEnabled"
        }
      },
      "EntCBAHeaderTitleSlot": {
        "name": "aw_headerTitle",
        "view": "EntCBAHeaderTitle",
        "activeWhen": {
          "condition": "conditions.EntCBAIsSubLocation"
        }
      },
      "EntCBATaskBarSlot": {
        "name": "aw_taskBar",
        "view": "EntCBATaskbar",
        "activeWhen": {
          "condition": "conditions.EntCBAIsSubLocation"
        }
      },
      "SVPreviewSublocationHeaderTitleSlot": {
        "name": "aw_headerTitle",
        "view": "SVHeaderTitle",
        "activeWhen": {
          "condition": "conditions.isSVPreviewSublocation"
        }
      },
      "SVPreviewSublocationTaskBarSlot": {
        "name": "aw_taskBar",
        "view": "SVTaskbar",
        "activeWhen": {
          "condition": "conditions.isSVPreviewSublocation"
        }
      }
    },
    "conditions": {
      "contextEnabled": {
        "expression": "ctx.aceActiveContext.context.isOpenedUnderAContext && ctx.aceActiveContext.context.elementToPCIMapCount > 1"
      },
      "EntCBAIsSubLocation": {
        "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation'"
      },
      "isSVPreviewSublocation": {
        "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.SVPreview:solutionVariantPreviewSublocation'"
      }
    }
  },
  "syncStrategy": {
    "schemaVersion": "1.0.0",
    "syncStrategies": {
      "FindAlignedPartsStrategyObject": {
        "source": {
          "view": "EntCBASplitSrcTree",
          "port": "designSelection"
        },
        "target": {
          "view": "EntCBASplitTrgTree",
          "port": "findAlignedPartsInput"
        }
      },
      "FindAlignedDesignsStrategyObject": {
        "source": {
          "view": "EntCBASplitTrgTree",
          "port": "partSelection"
        },
        "target": {
          "view": "EntCBASplitSrcTree",
          "port": "findAlignedDesignsInput"
        }
      },
      "UpdateAlignedDesignsSectionStrategyObject": {
        "source": {
          "view": "EntCBASplitSrcTree",
          "port": "partsOutputAlignedDesigns"
        },
        "target": {
          "view": "EntCBASplitTrgTree",
          "port": "partsInputAlignedDesigns"
        }
      },
      "UpdateAlignedPartsSectionStrategyObject": {
        "source": {
          "view": "EntCBASplitTrgTree",
          "port": "designsOutputAlignedParts"
        },
        "target": {
          "view": "EntCBASplitSrcTree",
          "port": "designsInputAlignedParts"
        }
      }
    },
    "syncStrategyHandlers": {
      "findAlignedPartsHandler": {
        "id": "FindAlignedPartsStrategyObject",
        "action": "findAlignedPartsAction",
        "activeWhen": {
          "condition": "conditions.findAlignedPartsHandlerCondition"
        }
      },
      "findAlignedDesignsHandler": {
        "id": "FindAlignedDesignsStrategyObject",
        "action": "findAlignedDesignsAction",
        "activeWhen": {
          "condition": "conditions.findAlignedDesignsHandlerCondition"
        }
      },
      "updateAlignedDesignsSectionsHandler": {
        "id": "UpdateAlignedDesignsSectionStrategyObject",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        }
      },
      "updateAlignedPartsSectionsHandler": {
        "id": "UpdateAlignedPartsSectionStrategyObject",
        "activeWhen": {
          "condition": "conditions.isEntCBASubLocation"
        }
      }
    },
    "actions": {
      "findAlignedPartsAction": {
        "actionType": "JSFunction",
        "method": "getAlignedObjectsInfo",
        "inputData": {
          "syncObject": "{{syncContext.sourceViewModel.ports.designSelection.syncObject}}"
        },
        "outputData": {
          "objectsToFind": "result.alignedObjects",
          "sourceObject": "result.sourceObject",
          "firstObjectToFind": "result.firstObjectToFind",
          "restObjectToFind": "result.restObjectToFind"
        },
        "deps": "js/cbaFindAlignedService"
      },
      "findAlignedDesignsAction": {
        "actionType": "JSFunction",
        "method": "getAlignedObjectsInfo",
        "inputData": {
          "syncObject": "{{syncContext.sourceViewModel.ports.partSelection.syncObject}}"
        },
        "outputData": {
          "objectsToFind": "result.alignedObjects",
          "sourceObject": "result.sourceObject",
          "firstObjectToFind": "result.firstObjectToFind",
          "restObjectToFind": "result.restObjectToFind"
        },
        "deps": "js/cbaFindAlignedService"
      }
    },
    "conditions": {
      "isEntCBASubLocation": {
        "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.cba.CADBOMAlignment:CBASublocation'"
      },
      "findAlignedPartsHandlerCondition": {
        "expression": "syncContext.sourceViewModel.ports.designSelection.syncObject.vmo !== undefined"
      },
      "findAlignedDesignsHandlerCondition": {
        "expression": "syncContext.sourceViewModel.ports.partSelection.syncObject.vmo !== undefined"
      }
    }
  }
}
