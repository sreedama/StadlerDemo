# ==================================================
# Copyright 2016
# Siemens Product Lifecycle Management Software Inc.
# All Rights Reserved.
# ==================================================
# ==================================================
#             Auto-generated source
#                 DO NOT EDIT
# ==================================================




# =============================================================================
# Usage:
# nmake -f makefile.wntx64 [OPT_CXX_FLAGS=-Zi] [JAVAC_DEBUG=true] [NET_CONFIG=Debug]  all|clean
#
#    OPT_CXX_FLAGS  Optionally set this argument to add compile flags
#                   to the C++ targets
#    JAVAC_DEBUG    Optionally set this argument to true to enable debug mode 
#                   of the Java targets. This will compile the Java targets in 
#                   debug mode, and include the source files in the Jars.
#    NET_CONFIG     Optionally set this argument to Debug to enable debug mode 
#                   of the .NET targets.
#    Target			The build target: 
#                       all		Build all targets for this project (default).
#                       clean   Delete all generated artifacts for this project.
#
#  The following environment variables are required to be set:  
#    JAVA_HOME      The root location of a Java JDK.
#    PATH           The PATH variable must include JAVA_HOME\bin folder.
#
# =============================================================================

OPT_CXX_FLAGS      =
JAVAC_DEBUG        = false
NET_CONFIG         = Release




# ==================================================
# Platform specific paths
# ==================================================
BASE_PATH          = C:\Repository\stadler_rail\bmide\sr5stadlerrailsoa
TC_ROOT            = D:\plm\tc13
TEMPLATE_HOME      = D:\plm\tc13\bmide\templates
SOA_CLIENT_KIT     = D:\plm\tc13\soa_client
RAC_HOME           = 
CHSARP_HOME		   = 
COMPILER_HOME	   = C:\PROGRA~2\MICROS~1\2019\Professional\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64






# ==================================================
# Platform specific options and commands
# ==================================================
PLAT               = wntx64
PS                 =\ 
PD                 =;
OS_TYPE            = Win
LP                 = -LIBPATH:
OBJ_EXT            = obj
LIB_EXT            = dll
LIB_PREFIX         = lib
LIB_SUFFIX         = .lib
SCRIPT_EXT         = .bat
CSHARP_COMPILER    = $(CHSARP_HOME)\MSBuild.exe
TOOLBOX_HOME       = $(SOA_CLIENT_KIT)\toolbox
ANT                = $(TOOLBOX_HOME)\Ant\bin\ant
COMPILE            = cl
LINK               = link
CXX_FLAGS          = $(OPT_CXX_FLAGS) -MD -c -nologo -EHsc -FS -FI $(TC_ROOT)\include\msvcpragmas.h -DSTEP -DAP203 -DAP214 -DWIN32_LEAN_AND_MEAN -DWNT -D_WIN32_WINNT=0x0601 -DWINVER=0x0601 -DNTDDI_VERSION=0x06010000 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DWNT -D_WIN32 -DWIN32 -D_WIN64 -D_INTEL=1 -DCRTAPI1=_cdecl -DCRTAPI2=cdecl -DNO_DOT_H -W3 \Wv:19.19 \w14848 \w15051 \w14854
LINK_FLAGS         = -dll -debug -nologo -nodefaultlib -incremental:no -subsystem:console -dynamicbase -nxcompat "%TC_ROOT%\lib\libSR5Custom.lib"
CPP_INCLUDES       = -I$(SOA_CLIENT_KIT)\cpp\includes\cpp\include
CPPMNGD_INCLUDES   = -I$(SOA_CLIENT_KIT)\cpp\includes\cpp-managed\include 
LIB_PATH           = $(LP)$(SOA_CLIENT_KIT)\cpp\libs\$(PLAT) $(LP)$(TC_ROOT)\lib
SYSLIBS            = ucrt.lib vcruntime.lib msvcrt.lib msvcprt.lib kernel32.lib 
CARG_OUT           = /Fo
LARG_OUT           = -out:
MAKE_DIR           = mkdir
DELETE_DIR         = rmdir /S /Q
DELETE_FILE        = del
COPY_FILE          = copy
SET_ENV            = SET


# ==================================================
# Third Party Libraries defined per platform
# ==================================================




# ==================================================
# Service client bindings enabled per platform, 
# A blank value is enabled, NoOp is disabled
# ==================================================
JAVA_STRONG_ENABLED= NoOp
JAVA_LOOSE_ENABLED = NoOp
JAVA_RAC_ENABLED   = NoOp
CPP_STRONG_ENABLED = NoOp
CPP_MANAGED_ENABLED= NoOp
NET_STRONG_ENABLED = NoOp
WSDLS_ENABLED      = NoOp
GENERATED_STUBS    = 



PROJECT_HOME       = .
PROJECT_OUT_HOME   = output\wntx64
PROJECT_DRV        = $(BASE_PATH)\output\generated
PROJECT_OBJ        = $(BASE_PATH)\$(PROJECT_OUT_HOME)\objs
PROJECT_BIN        = $(BASE_PATH)\$(PROJECT_OUT_HOME)\lib
PROJECT_CLS        = $(BASE_PATH)\$(PROJECT_OUT_HOME)\classes
PROJECT_JAR        = $(BASE_PATH)\$(PROJECT_OUT_HOME)\jars
PROJECT_IOD        = $(BASE_PATH)\$(PROJECT_OUT_HOME)\netIntermediate
PROJECT_NET        = $(BASE_PATH)\$(PROJECT_OUT_HOME)\assemblies
PROJECT_SOA_CLIENT = $(BASE_PATH)\$(PROJECT_OUT_HOME)\packaging\soa_client
PROJECT_TC         = $(BASE_PATH)\$(PROJECT_OUT_HOME)\packaging\tc

all : sr5stadlerrailsoa_project_all

include build\SR5SoaCustom\makefile


sr5stadlerrailsoa_project_all : build_message create_out_folders  SR5SoaCustom_all  
	@echo ________________________________________________________________________________
	@echo Successfully Built All Libraries for sr5stadlerrailsoa
	@echo ________________________________________________________________________________

build_message :
	@echo ________________________________________________________________________________
	@echo Building All Libraries for sr5stadlerrailsoa
	@echo ________________________________________________________________________________

clean : clean_message  SR5SoaCustom_clean
	@echo ________________________________________________________________________________
	@echo Successfully Cleaned All Generated Files for sr5stadlerrailsoa
	@echo ________________________________________________________________________________

clean_message :
	@echo ________________________________________________________________________________
	@echo Cleaning All Generated Files for sr5stadlerrailsoa
	@echo ________________________________________________________________________________


create_out_folders : $(PROJECT_BIN) $(PROJECT_OBJ) $(PROJECT_TC)$(PS)bin $(PROJECT_TC)$(PS)lib

$(PROJECT_BIN) :	
	@echo Creating: $(PROJECT_BIN)
	-@$(MAKE_DIR) $(PROJECT_BIN)

$(PROJECT_OBJ) :	
	@echo Creating: $(PROJECT_OBJ)
	-@$(MAKE_DIR) $(PROJECT_OBJ)


$(PROJECT_TC)$(PS)bin :
	@echo Creating: $(PROJECT_TC)$(PS)bin
	-@$(MAKE_DIR) $(PROJECT_TC)$(PS)bin


$(PROJECT_TC)$(PS)lib :
	@echo Creating: $(PROJECT_TC)$(PS)lib
	-@$(MAKE_DIR) $(PROJECT_TC)$(PS)lib
